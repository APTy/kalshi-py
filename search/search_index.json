{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"kalshi-py","text":"<p>A modern, type-safe Python client library for the Kalshi Trade API.</p>"},{"location":"#features","title":"Features","text":"<ul> <li>Type Safety: Full type hints and validation</li> <li>Async Support: Both synchronous and asynchronous APIs</li> <li>Authentication: Built-in RSA-PSS signature authentication</li> <li>Auto-generated: Generated from OpenAPI specification</li> <li>Modern: Built with httpx and attrs</li> </ul>"},{"location":"#quick-start","title":"Quick Start","text":"<pre><code>from kalshi_py import create_client\n\n# Create authenticated client\nclient = create_client()\n\n# Get account balance\nfrom kalshi_py.api.portfolio import get_balance\nbalance = get_balance.sync(client=client)\nprint(f\"Balance: ${balance.balance}\")\n</code></pre>"},{"location":"#installation","title":"Installation","text":"<pre><code>pip install kalshi-py\n</code></pre>"},{"location":"#documentation","title":"Documentation","text":"<ul> <li>Getting Started - Installation and setup</li> <li>Quick Start - Your first API calls</li> <li>Authentication - Setting up authentication</li> <li>API Reference - Complete API documentation</li> <li>Examples - Code examples and patterns</li> </ul>"},{"location":"#api-modules","title":"API Modules","text":"<p>The client is organized into logical modules:</p> <ul> <li>Market API - Market data, events, order books</li> <li>Portfolio API - Account balance, positions, orders</li> <li>Communications API - Announcements and communications</li> <li>Collections API - Event collections</li> <li>Milestones API - Milestone tracking</li> <li>Structured Targets API - Structured targets</li> <li>API Keys API - API key management</li> </ul>"},{"location":"#support","title":"Support","text":"<ul> <li>GitHub Issues</li> <li>Kalshi API Documentation</li> </ul>"},{"location":"api/api_keys/","title":"Api_Keys API Reference","text":""},{"location":"api/api_keys/#endpoints","title":"Endpoints","text":""},{"location":"api/api_keys/#create-api-key","title":"Create Api Key","text":"<p>Synchronous API Call</p> <p>Asynchronous API Call</p> <p>Synchronous Detailed Response</p> <p>Asynchronous Detailed Response</p>"},{"location":"api/api_keys/#kalshi_py.api.api_keys.create_api_key.sync","title":"<code>kalshi_py.api.api_keys.create_api_key.sync(*, client: Union[AuthenticatedClient, Client], body: GithubComKalshiExchangeInfraSvcApi2ModelUserCreateApiKeyRequest) -&gt; Optional[GithubComKalshiExchangeInfraSvcApi2ModelUserCreateApiKeyResponse]</code>","text":"<p>Create API Key</p> <p>Endpoint for creating a new API key with a user-provided public key.  This endpoint allows users with Premier or Market Maker API usage levels to create API keys by providing their own RSA public key. The platform will use this public key to verify signatures on API requests.</p> <p>Parameters:</p> Name Type Description Default <code>body</code> <code>GithubComKalshiExchangeInfraSvcApi2ModelUserCreateApiKeyRequest</code> required <p>Raises:</p> Type Description <code>UnexpectedStatus</code> <p>If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.</p> <code>TimeoutException</code> <p>If the request takes longer than Client.timeout.</p> <p>Returns:</p> Type Description <code>Optional[GithubComKalshiExchangeInfraSvcApi2ModelUserCreateApiKeyResponse]</code> <p>GithubComKalshiExchangeInfraSvcApi2ModelUserCreateApiKeyResponse</p> Source code in <code>kalshi_py/api/api_keys/create_api_key.py</code> <pre><code>def sync(\n    *,\n    client: Union[AuthenticatedClient, Client],\n    body: GithubComKalshiExchangeInfraSvcApi2ModelUserCreateApiKeyRequest,\n) -&gt; Optional[GithubComKalshiExchangeInfraSvcApi2ModelUserCreateApiKeyResponse]:\n    \"\"\"Create API Key\n\n      Endpoint for creating a new API key with a user-provided public key.  This endpoint allows users\n    with Premier or Market Maker API usage levels to create API keys by providing their own RSA public\n    key. The platform will use this public key to verify signatures on API requests.\n\n    Args:\n        body (GithubComKalshiExchangeInfraSvcApi2ModelUserCreateApiKeyRequest):\n\n    Raises:\n        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.\n        httpx.TimeoutException: If the request takes longer than Client.timeout.\n\n    Returns:\n        GithubComKalshiExchangeInfraSvcApi2ModelUserCreateApiKeyResponse\n    \"\"\"\n\n    return sync_detailed(\n        client=client,\n        body=body,\n    ).parsed\n</code></pre>"},{"location":"api/api_keys/#kalshi_py.api.api_keys.create_api_key.asyncio","title":"<code>kalshi_py.api.api_keys.create_api_key.asyncio(*, client: Union[AuthenticatedClient, Client], body: GithubComKalshiExchangeInfraSvcApi2ModelUserCreateApiKeyRequest) -&gt; Optional[GithubComKalshiExchangeInfraSvcApi2ModelUserCreateApiKeyResponse]</code>  <code>async</code>","text":"<p>Create API Key</p> <p>Endpoint for creating a new API key with a user-provided public key.  This endpoint allows users with Premier or Market Maker API usage levels to create API keys by providing their own RSA public key. The platform will use this public key to verify signatures on API requests.</p> <p>Parameters:</p> Name Type Description Default <code>body</code> <code>GithubComKalshiExchangeInfraSvcApi2ModelUserCreateApiKeyRequest</code> required <p>Raises:</p> Type Description <code>UnexpectedStatus</code> <p>If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.</p> <code>TimeoutException</code> <p>If the request takes longer than Client.timeout.</p> <p>Returns:</p> Type Description <code>Optional[GithubComKalshiExchangeInfraSvcApi2ModelUserCreateApiKeyResponse]</code> <p>GithubComKalshiExchangeInfraSvcApi2ModelUserCreateApiKeyResponse</p> Source code in <code>kalshi_py/api/api_keys/create_api_key.py</code> <pre><code>async def asyncio(\n    *,\n    client: Union[AuthenticatedClient, Client],\n    body: GithubComKalshiExchangeInfraSvcApi2ModelUserCreateApiKeyRequest,\n) -&gt; Optional[GithubComKalshiExchangeInfraSvcApi2ModelUserCreateApiKeyResponse]:\n    \"\"\"Create API Key\n\n      Endpoint for creating a new API key with a user-provided public key.  This endpoint allows users\n    with Premier or Market Maker API usage levels to create API keys by providing their own RSA public\n    key. The platform will use this public key to verify signatures on API requests.\n\n    Args:\n        body (GithubComKalshiExchangeInfraSvcApi2ModelUserCreateApiKeyRequest):\n\n    Raises:\n        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.\n        httpx.TimeoutException: If the request takes longer than Client.timeout.\n\n    Returns:\n        GithubComKalshiExchangeInfraSvcApi2ModelUserCreateApiKeyResponse\n    \"\"\"\n\n    return (\n        await asyncio_detailed(\n            client=client,\n            body=body,\n        )\n    ).parsed\n</code></pre>"},{"location":"api/api_keys/#kalshi_py.api.api_keys.create_api_key.sync_detailed","title":"<code>kalshi_py.api.api_keys.create_api_key.sync_detailed(*, client: Union[AuthenticatedClient, Client], body: GithubComKalshiExchangeInfraSvcApi2ModelUserCreateApiKeyRequest) -&gt; Response[GithubComKalshiExchangeInfraSvcApi2ModelUserCreateApiKeyResponse]</code>","text":"<p>Create API Key</p> <p>Endpoint for creating a new API key with a user-provided public key.  This endpoint allows users with Premier or Market Maker API usage levels to create API keys by providing their own RSA public key. The platform will use this public key to verify signatures on API requests.</p> <p>Parameters:</p> Name Type Description Default <code>body</code> <code>GithubComKalshiExchangeInfraSvcApi2ModelUserCreateApiKeyRequest</code> required <p>Raises:</p> Type Description <code>UnexpectedStatus</code> <p>If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.</p> <code>TimeoutException</code> <p>If the request takes longer than Client.timeout.</p> <p>Returns:</p> Type Description <code>Response[GithubComKalshiExchangeInfraSvcApi2ModelUserCreateApiKeyResponse]</code> <p>Response[GithubComKalshiExchangeInfraSvcApi2ModelUserCreateApiKeyResponse]</p> Source code in <code>kalshi_py/api/api_keys/create_api_key.py</code> <pre><code>def sync_detailed(\n    *,\n    client: Union[AuthenticatedClient, Client],\n    body: GithubComKalshiExchangeInfraSvcApi2ModelUserCreateApiKeyRequest,\n) -&gt; Response[GithubComKalshiExchangeInfraSvcApi2ModelUserCreateApiKeyResponse]:\n    \"\"\"Create API Key\n\n      Endpoint for creating a new API key with a user-provided public key.  This endpoint allows users\n    with Premier or Market Maker API usage levels to create API keys by providing their own RSA public\n    key. The platform will use this public key to verify signatures on API requests.\n\n    Args:\n        body (GithubComKalshiExchangeInfraSvcApi2ModelUserCreateApiKeyRequest):\n\n    Raises:\n        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.\n        httpx.TimeoutException: If the request takes longer than Client.timeout.\n\n    Returns:\n        Response[GithubComKalshiExchangeInfraSvcApi2ModelUserCreateApiKeyResponse]\n    \"\"\"\n\n    kwargs = _get_kwargs(\n        body=body,\n    )\n\n    response = client.get_httpx_client().request(\n        **kwargs,\n    )\n\n    return _build_response(client=client, response=response)\n</code></pre>"},{"location":"api/api_keys/#kalshi_py.api.api_keys.create_api_key.asyncio_detailed","title":"<code>kalshi_py.api.api_keys.create_api_key.asyncio_detailed(*, client: Union[AuthenticatedClient, Client], body: GithubComKalshiExchangeInfraSvcApi2ModelUserCreateApiKeyRequest) -&gt; Response[GithubComKalshiExchangeInfraSvcApi2ModelUserCreateApiKeyResponse]</code>  <code>async</code>","text":"<p>Create API Key</p> <p>Endpoint for creating a new API key with a user-provided public key.  This endpoint allows users with Premier or Market Maker API usage levels to create API keys by providing their own RSA public key. The platform will use this public key to verify signatures on API requests.</p> <p>Parameters:</p> Name Type Description Default <code>body</code> <code>GithubComKalshiExchangeInfraSvcApi2ModelUserCreateApiKeyRequest</code> required <p>Raises:</p> Type Description <code>UnexpectedStatus</code> <p>If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.</p> <code>TimeoutException</code> <p>If the request takes longer than Client.timeout.</p> <p>Returns:</p> Type Description <code>Response[GithubComKalshiExchangeInfraSvcApi2ModelUserCreateApiKeyResponse]</code> <p>Response[GithubComKalshiExchangeInfraSvcApi2ModelUserCreateApiKeyResponse]</p> Source code in <code>kalshi_py/api/api_keys/create_api_key.py</code> <pre><code>async def asyncio_detailed(\n    *,\n    client: Union[AuthenticatedClient, Client],\n    body: GithubComKalshiExchangeInfraSvcApi2ModelUserCreateApiKeyRequest,\n) -&gt; Response[GithubComKalshiExchangeInfraSvcApi2ModelUserCreateApiKeyResponse]:\n    \"\"\"Create API Key\n\n      Endpoint for creating a new API key with a user-provided public key.  This endpoint allows users\n    with Premier or Market Maker API usage levels to create API keys by providing their own RSA public\n    key. The platform will use this public key to verify signatures on API requests.\n\n    Args:\n        body (GithubComKalshiExchangeInfraSvcApi2ModelUserCreateApiKeyRequest):\n\n    Raises:\n        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.\n        httpx.TimeoutException: If the request takes longer than Client.timeout.\n\n    Returns:\n        Response[GithubComKalshiExchangeInfraSvcApi2ModelUserCreateApiKeyResponse]\n    \"\"\"\n\n    kwargs = _get_kwargs(\n        body=body,\n    )\n\n    response = await client.get_async_httpx_client().request(**kwargs)\n\n    return _build_response(client=client, response=response)\n</code></pre>"},{"location":"api/api_keys/#delete-api-key","title":"Delete Api Key","text":"<p>Synchronous Detailed Response</p> <p>Asynchronous Detailed Response</p>"},{"location":"api/api_keys/#kalshi_py.api.api_keys.delete_api_key.sync_detailed","title":"<code>kalshi_py.api.api_keys.delete_api_key.sync_detailed(api_key: str, *, client: Union[AuthenticatedClient, Client]) -&gt; Response[Any]</code>","text":"<p>Delete API Key</p> <p>Endpoint for deleting an existing API key.  This endpoint permanently deletes an API key. Once deleted, the key can no longer be used for authentication. This action cannot be undone.</p> <p>Parameters:</p> Name Type Description Default <code>api_key</code> <code>str</code> <p>API key ID to delete</p> required <p>Raises:</p> Type Description <code>UnexpectedStatus</code> <p>If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.</p> <code>TimeoutException</code> <p>If the request takes longer than Client.timeout.</p> <p>Returns:</p> Type Description <code>Response[Any]</code> <p>Response[Any]</p> Source code in <code>kalshi_py/api/api_keys/delete_api_key.py</code> <pre><code>def sync_detailed(\n    api_key: str,\n    *,\n    client: Union[AuthenticatedClient, Client],\n) -&gt; Response[Any]:\n    \"\"\"Delete API Key\n\n      Endpoint for deleting an existing API key.  This endpoint permanently deletes an API key. Once\n    deleted, the key can no longer be used for authentication. This action cannot be undone.\n\n    Args:\n        api_key (str): API key ID to delete\n\n    Raises:\n        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.\n        httpx.TimeoutException: If the request takes longer than Client.timeout.\n\n    Returns:\n        Response[Any]\n    \"\"\"\n\n    kwargs = _get_kwargs(\n        api_key=api_key,\n    )\n\n    response = client.get_httpx_client().request(\n        **kwargs,\n    )\n\n    return _build_response(client=client, response=response)\n</code></pre>"},{"location":"api/api_keys/#kalshi_py.api.api_keys.delete_api_key.asyncio_detailed","title":"<code>kalshi_py.api.api_keys.delete_api_key.asyncio_detailed(api_key: str, *, client: Union[AuthenticatedClient, Client]) -&gt; Response[Any]</code>  <code>async</code>","text":"<p>Delete API Key</p> <p>Endpoint for deleting an existing API key.  This endpoint permanently deletes an API key. Once deleted, the key can no longer be used for authentication. This action cannot be undone.</p> <p>Parameters:</p> Name Type Description Default <code>api_key</code> <code>str</code> <p>API key ID to delete</p> required <p>Raises:</p> Type Description <code>UnexpectedStatus</code> <p>If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.</p> <code>TimeoutException</code> <p>If the request takes longer than Client.timeout.</p> <p>Returns:</p> Type Description <code>Response[Any]</code> <p>Response[Any]</p> Source code in <code>kalshi_py/api/api_keys/delete_api_key.py</code> <pre><code>async def asyncio_detailed(\n    api_key: str,\n    *,\n    client: Union[AuthenticatedClient, Client],\n) -&gt; Response[Any]:\n    \"\"\"Delete API Key\n\n      Endpoint for deleting an existing API key.  This endpoint permanently deletes an API key. Once\n    deleted, the key can no longer be used for authentication. This action cannot be undone.\n\n    Args:\n        api_key (str): API key ID to delete\n\n    Raises:\n        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.\n        httpx.TimeoutException: If the request takes longer than Client.timeout.\n\n    Returns:\n        Response[Any]\n    \"\"\"\n\n    kwargs = _get_kwargs(\n        api_key=api_key,\n    )\n\n    response = await client.get_async_httpx_client().request(**kwargs)\n\n    return _build_response(client=client, response=response)\n</code></pre>"},{"location":"api/api_keys/#generate-api-key","title":"Generate Api Key","text":"<p>Synchronous API Call</p> <p>Asynchronous API Call</p> <p>Synchronous Detailed Response</p> <p>Asynchronous Detailed Response</p>"},{"location":"api/api_keys/#kalshi_py.api.api_keys.generate_api_key.sync","title":"<code>kalshi_py.api.api_keys.generate_api_key.sync(*, client: Union[AuthenticatedClient, Client], body: GithubComKalshiExchangeInfraSvcApi2ModelUserGenerateApiKeyRequest) -&gt; Optional[GithubComKalshiExchangeInfraSvcApi2ModelUserGenerateApiKeyResponse]</code>","text":"<p>Generate API Key</p> <p>Endpoint for generating a new API key with an automatically created key pair.  This endpoint generates both a public and private RSA key pair. The public key is stored on the platform, while the private key is returned to the user and must be stored securely. The private key cannot be retrieved again.</p> <p>Parameters:</p> Name Type Description Default <code>body</code> <code>GithubComKalshiExchangeInfraSvcApi2ModelUserGenerateApiKeyRequest</code> required <p>Raises:</p> Type Description <code>UnexpectedStatus</code> <p>If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.</p> <code>TimeoutException</code> <p>If the request takes longer than Client.timeout.</p> <p>Returns:</p> Type Description <code>Optional[GithubComKalshiExchangeInfraSvcApi2ModelUserGenerateApiKeyResponse]</code> <p>GithubComKalshiExchangeInfraSvcApi2ModelUserGenerateApiKeyResponse</p> Source code in <code>kalshi_py/api/api_keys/generate_api_key.py</code> <pre><code>def sync(\n    *,\n    client: Union[AuthenticatedClient, Client],\n    body: GithubComKalshiExchangeInfraSvcApi2ModelUserGenerateApiKeyRequest,\n) -&gt; Optional[GithubComKalshiExchangeInfraSvcApi2ModelUserGenerateApiKeyResponse]:\n    \"\"\"Generate API Key\n\n      Endpoint for generating a new API key with an automatically created key pair.  This endpoint\n    generates both a public and private RSA key pair. The public key is stored on the platform, while\n    the private key is returned to the user and must be stored securely. The private key cannot be\n    retrieved again.\n\n    Args:\n        body (GithubComKalshiExchangeInfraSvcApi2ModelUserGenerateApiKeyRequest):\n\n    Raises:\n        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.\n        httpx.TimeoutException: If the request takes longer than Client.timeout.\n\n    Returns:\n        GithubComKalshiExchangeInfraSvcApi2ModelUserGenerateApiKeyResponse\n    \"\"\"\n\n    return sync_detailed(\n        client=client,\n        body=body,\n    ).parsed\n</code></pre>"},{"location":"api/api_keys/#kalshi_py.api.api_keys.generate_api_key.asyncio","title":"<code>kalshi_py.api.api_keys.generate_api_key.asyncio(*, client: Union[AuthenticatedClient, Client], body: GithubComKalshiExchangeInfraSvcApi2ModelUserGenerateApiKeyRequest) -&gt; Optional[GithubComKalshiExchangeInfraSvcApi2ModelUserGenerateApiKeyResponse]</code>  <code>async</code>","text":"<p>Generate API Key</p> <p>Endpoint for generating a new API key with an automatically created key pair.  This endpoint generates both a public and private RSA key pair. The public key is stored on the platform, while the private key is returned to the user and must be stored securely. The private key cannot be retrieved again.</p> <p>Parameters:</p> Name Type Description Default <code>body</code> <code>GithubComKalshiExchangeInfraSvcApi2ModelUserGenerateApiKeyRequest</code> required <p>Raises:</p> Type Description <code>UnexpectedStatus</code> <p>If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.</p> <code>TimeoutException</code> <p>If the request takes longer than Client.timeout.</p> <p>Returns:</p> Type Description <code>Optional[GithubComKalshiExchangeInfraSvcApi2ModelUserGenerateApiKeyResponse]</code> <p>GithubComKalshiExchangeInfraSvcApi2ModelUserGenerateApiKeyResponse</p> Source code in <code>kalshi_py/api/api_keys/generate_api_key.py</code> <pre><code>async def asyncio(\n    *,\n    client: Union[AuthenticatedClient, Client],\n    body: GithubComKalshiExchangeInfraSvcApi2ModelUserGenerateApiKeyRequest,\n) -&gt; Optional[GithubComKalshiExchangeInfraSvcApi2ModelUserGenerateApiKeyResponse]:\n    \"\"\"Generate API Key\n\n      Endpoint for generating a new API key with an automatically created key pair.  This endpoint\n    generates both a public and private RSA key pair. The public key is stored on the platform, while\n    the private key is returned to the user and must be stored securely. The private key cannot be\n    retrieved again.\n\n    Args:\n        body (GithubComKalshiExchangeInfraSvcApi2ModelUserGenerateApiKeyRequest):\n\n    Raises:\n        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.\n        httpx.TimeoutException: If the request takes longer than Client.timeout.\n\n    Returns:\n        GithubComKalshiExchangeInfraSvcApi2ModelUserGenerateApiKeyResponse\n    \"\"\"\n\n    return (\n        await asyncio_detailed(\n            client=client,\n            body=body,\n        )\n    ).parsed\n</code></pre>"},{"location":"api/api_keys/#kalshi_py.api.api_keys.generate_api_key.sync_detailed","title":"<code>kalshi_py.api.api_keys.generate_api_key.sync_detailed(*, client: Union[AuthenticatedClient, Client], body: GithubComKalshiExchangeInfraSvcApi2ModelUserGenerateApiKeyRequest) -&gt; Response[GithubComKalshiExchangeInfraSvcApi2ModelUserGenerateApiKeyResponse]</code>","text":"<p>Generate API Key</p> <p>Endpoint for generating a new API key with an automatically created key pair.  This endpoint generates both a public and private RSA key pair. The public key is stored on the platform, while the private key is returned to the user and must be stored securely. The private key cannot be retrieved again.</p> <p>Parameters:</p> Name Type Description Default <code>body</code> <code>GithubComKalshiExchangeInfraSvcApi2ModelUserGenerateApiKeyRequest</code> required <p>Raises:</p> Type Description <code>UnexpectedStatus</code> <p>If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.</p> <code>TimeoutException</code> <p>If the request takes longer than Client.timeout.</p> <p>Returns:</p> Type Description <code>Response[GithubComKalshiExchangeInfraSvcApi2ModelUserGenerateApiKeyResponse]</code> <p>Response[GithubComKalshiExchangeInfraSvcApi2ModelUserGenerateApiKeyResponse]</p> Source code in <code>kalshi_py/api/api_keys/generate_api_key.py</code> <pre><code>def sync_detailed(\n    *,\n    client: Union[AuthenticatedClient, Client],\n    body: GithubComKalshiExchangeInfraSvcApi2ModelUserGenerateApiKeyRequest,\n) -&gt; Response[GithubComKalshiExchangeInfraSvcApi2ModelUserGenerateApiKeyResponse]:\n    \"\"\"Generate API Key\n\n      Endpoint for generating a new API key with an automatically created key pair.  This endpoint\n    generates both a public and private RSA key pair. The public key is stored on the platform, while\n    the private key is returned to the user and must be stored securely. The private key cannot be\n    retrieved again.\n\n    Args:\n        body (GithubComKalshiExchangeInfraSvcApi2ModelUserGenerateApiKeyRequest):\n\n    Raises:\n        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.\n        httpx.TimeoutException: If the request takes longer than Client.timeout.\n\n    Returns:\n        Response[GithubComKalshiExchangeInfraSvcApi2ModelUserGenerateApiKeyResponse]\n    \"\"\"\n\n    kwargs = _get_kwargs(\n        body=body,\n    )\n\n    response = client.get_httpx_client().request(\n        **kwargs,\n    )\n\n    return _build_response(client=client, response=response)\n</code></pre>"},{"location":"api/api_keys/#kalshi_py.api.api_keys.generate_api_key.asyncio_detailed","title":"<code>kalshi_py.api.api_keys.generate_api_key.asyncio_detailed(*, client: Union[AuthenticatedClient, Client], body: GithubComKalshiExchangeInfraSvcApi2ModelUserGenerateApiKeyRequest) -&gt; Response[GithubComKalshiExchangeInfraSvcApi2ModelUserGenerateApiKeyResponse]</code>  <code>async</code>","text":"<p>Generate API Key</p> <p>Endpoint for generating a new API key with an automatically created key pair.  This endpoint generates both a public and private RSA key pair. The public key is stored on the platform, while the private key is returned to the user and must be stored securely. The private key cannot be retrieved again.</p> <p>Parameters:</p> Name Type Description Default <code>body</code> <code>GithubComKalshiExchangeInfraSvcApi2ModelUserGenerateApiKeyRequest</code> required <p>Raises:</p> Type Description <code>UnexpectedStatus</code> <p>If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.</p> <code>TimeoutException</code> <p>If the request takes longer than Client.timeout.</p> <p>Returns:</p> Type Description <code>Response[GithubComKalshiExchangeInfraSvcApi2ModelUserGenerateApiKeyResponse]</code> <p>Response[GithubComKalshiExchangeInfraSvcApi2ModelUserGenerateApiKeyResponse]</p> Source code in <code>kalshi_py/api/api_keys/generate_api_key.py</code> <pre><code>async def asyncio_detailed(\n    *,\n    client: Union[AuthenticatedClient, Client],\n    body: GithubComKalshiExchangeInfraSvcApi2ModelUserGenerateApiKeyRequest,\n) -&gt; Response[GithubComKalshiExchangeInfraSvcApi2ModelUserGenerateApiKeyResponse]:\n    \"\"\"Generate API Key\n\n      Endpoint for generating a new API key with an automatically created key pair.  This endpoint\n    generates both a public and private RSA key pair. The public key is stored on the platform, while\n    the private key is returned to the user and must be stored securely. The private key cannot be\n    retrieved again.\n\n    Args:\n        body (GithubComKalshiExchangeInfraSvcApi2ModelUserGenerateApiKeyRequest):\n\n    Raises:\n        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.\n        httpx.TimeoutException: If the request takes longer than Client.timeout.\n\n    Returns:\n        Response[GithubComKalshiExchangeInfraSvcApi2ModelUserGenerateApiKeyResponse]\n    \"\"\"\n\n    kwargs = _get_kwargs(\n        body=body,\n    )\n\n    response = await client.get_async_httpx_client().request(**kwargs)\n\n    return _build_response(client=client, response=response)\n</code></pre>"},{"location":"api/api_keys/#get-api-keys","title":"Get Api Keys","text":"<p>Synchronous API Call</p> <p>Asynchronous API Call</p> <p>Synchronous Detailed Response</p> <p>Asynchronous Detailed Response</p>"},{"location":"api/api_keys/#kalshi_py.api.api_keys.get_api_keys.sync","title":"<code>kalshi_py.api.api_keys.get_api_keys.sync(*, client: Union[AuthenticatedClient, Client]) -&gt; Optional[GithubComKalshiExchangeInfraSvcApi2ModelUserGetApiKeysResponse]</code>","text":"<p>Get API Keys</p> <p>Endpoint for retrieving all API keys associated with the authenticated user.  API keys allow programmatic access to the platform without requiring username/password authentication. Each key has a unique identifier and name.</p> <p>Raises:</p> Type Description <code>UnexpectedStatus</code> <p>If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.</p> <code>TimeoutException</code> <p>If the request takes longer than Client.timeout.</p> <p>Returns:</p> Type Description <code>Optional[GithubComKalshiExchangeInfraSvcApi2ModelUserGetApiKeysResponse]</code> <p>GithubComKalshiExchangeInfraSvcApi2ModelUserGetApiKeysResponse</p> Source code in <code>kalshi_py/api/api_keys/get_api_keys.py</code> <pre><code>def sync(\n    *,\n    client: Union[AuthenticatedClient, Client],\n) -&gt; Optional[GithubComKalshiExchangeInfraSvcApi2ModelUserGetApiKeysResponse]:\n    \"\"\"Get API Keys\n\n      Endpoint for retrieving all API keys associated with the authenticated user.  API keys allow\n    programmatic access to the platform without requiring username/password authentication. Each key has\n    a unique identifier and name.\n\n    Raises:\n        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.\n        httpx.TimeoutException: If the request takes longer than Client.timeout.\n\n    Returns:\n        GithubComKalshiExchangeInfraSvcApi2ModelUserGetApiKeysResponse\n    \"\"\"\n\n    return sync_detailed(\n        client=client,\n    ).parsed\n</code></pre>"},{"location":"api/api_keys/#kalshi_py.api.api_keys.get_api_keys.asyncio","title":"<code>kalshi_py.api.api_keys.get_api_keys.asyncio(*, client: Union[AuthenticatedClient, Client]) -&gt; Optional[GithubComKalshiExchangeInfraSvcApi2ModelUserGetApiKeysResponse]</code>  <code>async</code>","text":"<p>Get API Keys</p> <p>Endpoint for retrieving all API keys associated with the authenticated user.  API keys allow programmatic access to the platform without requiring username/password authentication. Each key has a unique identifier and name.</p> <p>Raises:</p> Type Description <code>UnexpectedStatus</code> <p>If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.</p> <code>TimeoutException</code> <p>If the request takes longer than Client.timeout.</p> <p>Returns:</p> Type Description <code>Optional[GithubComKalshiExchangeInfraSvcApi2ModelUserGetApiKeysResponse]</code> <p>GithubComKalshiExchangeInfraSvcApi2ModelUserGetApiKeysResponse</p> Source code in <code>kalshi_py/api/api_keys/get_api_keys.py</code> <pre><code>async def asyncio(\n    *,\n    client: Union[AuthenticatedClient, Client],\n) -&gt; Optional[GithubComKalshiExchangeInfraSvcApi2ModelUserGetApiKeysResponse]:\n    \"\"\"Get API Keys\n\n      Endpoint for retrieving all API keys associated with the authenticated user.  API keys allow\n    programmatic access to the platform without requiring username/password authentication. Each key has\n    a unique identifier and name.\n\n    Raises:\n        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.\n        httpx.TimeoutException: If the request takes longer than Client.timeout.\n\n    Returns:\n        GithubComKalshiExchangeInfraSvcApi2ModelUserGetApiKeysResponse\n    \"\"\"\n\n    return (\n        await asyncio_detailed(\n            client=client,\n        )\n    ).parsed\n</code></pre>"},{"location":"api/api_keys/#kalshi_py.api.api_keys.get_api_keys.sync_detailed","title":"<code>kalshi_py.api.api_keys.get_api_keys.sync_detailed(*, client: Union[AuthenticatedClient, Client]) -&gt; Response[GithubComKalshiExchangeInfraSvcApi2ModelUserGetApiKeysResponse]</code>","text":"<p>Get API Keys</p> <p>Endpoint for retrieving all API keys associated with the authenticated user.  API keys allow programmatic access to the platform without requiring username/password authentication. Each key has a unique identifier and name.</p> <p>Raises:</p> Type Description <code>UnexpectedStatus</code> <p>If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.</p> <code>TimeoutException</code> <p>If the request takes longer than Client.timeout.</p> <p>Returns:</p> Type Description <code>Response[GithubComKalshiExchangeInfraSvcApi2ModelUserGetApiKeysResponse]</code> <p>Response[GithubComKalshiExchangeInfraSvcApi2ModelUserGetApiKeysResponse]</p> Source code in <code>kalshi_py/api/api_keys/get_api_keys.py</code> <pre><code>def sync_detailed(\n    *,\n    client: Union[AuthenticatedClient, Client],\n) -&gt; Response[GithubComKalshiExchangeInfraSvcApi2ModelUserGetApiKeysResponse]:\n    \"\"\"Get API Keys\n\n      Endpoint for retrieving all API keys associated with the authenticated user.  API keys allow\n    programmatic access to the platform without requiring username/password authentication. Each key has\n    a unique identifier and name.\n\n    Raises:\n        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.\n        httpx.TimeoutException: If the request takes longer than Client.timeout.\n\n    Returns:\n        Response[GithubComKalshiExchangeInfraSvcApi2ModelUserGetApiKeysResponse]\n    \"\"\"\n\n    kwargs = _get_kwargs()\n\n    response = client.get_httpx_client().request(\n        **kwargs,\n    )\n\n    return _build_response(client=client, response=response)\n</code></pre>"},{"location":"api/api_keys/#kalshi_py.api.api_keys.get_api_keys.asyncio_detailed","title":"<code>kalshi_py.api.api_keys.get_api_keys.asyncio_detailed(*, client: Union[AuthenticatedClient, Client]) -&gt; Response[GithubComKalshiExchangeInfraSvcApi2ModelUserGetApiKeysResponse]</code>  <code>async</code>","text":"<p>Get API Keys</p> <p>Endpoint for retrieving all API keys associated with the authenticated user.  API keys allow programmatic access to the platform without requiring username/password authentication. Each key has a unique identifier and name.</p> <p>Raises:</p> Type Description <code>UnexpectedStatus</code> <p>If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.</p> <code>TimeoutException</code> <p>If the request takes longer than Client.timeout.</p> <p>Returns:</p> Type Description <code>Response[GithubComKalshiExchangeInfraSvcApi2ModelUserGetApiKeysResponse]</code> <p>Response[GithubComKalshiExchangeInfraSvcApi2ModelUserGetApiKeysResponse]</p> Source code in <code>kalshi_py/api/api_keys/get_api_keys.py</code> <pre><code>async def asyncio_detailed(\n    *,\n    client: Union[AuthenticatedClient, Client],\n) -&gt; Response[GithubComKalshiExchangeInfraSvcApi2ModelUserGetApiKeysResponse]:\n    \"\"\"Get API Keys\n\n      Endpoint for retrieving all API keys associated with the authenticated user.  API keys allow\n    programmatic access to the platform without requiring username/password authentication. Each key has\n    a unique identifier and name.\n\n    Raises:\n        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.\n        httpx.TimeoutException: If the request takes longer than Client.timeout.\n\n    Returns:\n        Response[GithubComKalshiExchangeInfraSvcApi2ModelUserGetApiKeysResponse]\n    \"\"\"\n\n    kwargs = _get_kwargs()\n\n    response = await client.get_async_httpx_client().request(**kwargs)\n\n    return _build_response(client=client, response=response)\n</code></pre>"},{"location":"api/client/","title":"Client API Reference","text":"<p>This page documents the main client classes and functions in kalshi-py.</p>"},{"location":"api/client/#client-classes","title":"Client Classes","text":"<p>handler: python options: show_source: true show_root_heading: true</p> <p>handler: python options: show_source: true show_root_heading: true</p> <p>handler: python options: show_source: true show_root_heading: true</p>"},{"location":"api/client/#kalshi_py.client.Client","title":"<code>kalshi_py.client.Client</code>","text":"<p>A class for keeping track of data related to the API</p> <p>The following are accepted as keyword arguments and will be used to construct httpx Clients internally:</p> <pre><code>``base_url``: The base URL for the API, all requests are made to a relative path to this URL\n\n``cookies``: A dictionary of cookies to be sent with every request\n\n``headers``: A dictionary of headers to be sent with every request\n\n``timeout``: The maximum amount of a time a request can take. API functions will raise\nhttpx.TimeoutException if this is exceeded.\n\n``verify_ssl``: Whether or not to verify the SSL certificate of the API server. This should be True in production,\nbut can be set to False for testing purposes.\n\n``follow_redirects``: Whether or not to follow redirects. Default value is False.\n\n``httpx_args``: A dictionary of additional arguments to be passed to the ``httpx.Client`` and ``httpx.AsyncClient`` constructor.\n</code></pre> <p>Attributes:</p> Name Type Description <code>raise_on_unexpected_status</code> <code>bool</code> <p>Whether or not to raise an errors.UnexpectedStatus if the API returns a status code that was not documented in the source OpenAPI document. Can also be provided as a keyword argument to the constructor.</p>"},{"location":"api/client/#kalshi_py.client.Client-functions","title":"Functions","text":""},{"location":"api/client/#kalshi_py.client.Client.with_headers","title":"<code>with_headers(headers: dict[str, str]) -&gt; Client</code>","text":"<p>Get a new client matching this one with additional headers</p> Source code in <code>kalshi_py/client.py</code> <pre><code>def with_headers(self, headers: dict[str, str]) -&gt; \"Client\":\n    \"\"\"Get a new client matching this one with additional headers\"\"\"\n    if self._client is not None:\n        self._client.headers.update(headers)\n    if self._async_client is not None:\n        self._async_client.headers.update(headers)\n    return evolve(self, headers={**self._headers, **headers})\n</code></pre>"},{"location":"api/client/#kalshi_py.client.Client.with_cookies","title":"<code>with_cookies(cookies: dict[str, str]) -&gt; Client</code>","text":"<p>Get a new client matching this one with additional cookies</p> Source code in <code>kalshi_py/client.py</code> <pre><code>def with_cookies(self, cookies: dict[str, str]) -&gt; \"Client\":\n    \"\"\"Get a new client matching this one with additional cookies\"\"\"\n    if self._client is not None:\n        self._client.cookies.update(cookies)\n    if self._async_client is not None:\n        self._async_client.cookies.update(cookies)\n    return evolve(self, cookies={**self._cookies, **cookies})\n</code></pre>"},{"location":"api/client/#kalshi_py.client.Client.with_timeout","title":"<code>with_timeout(timeout: httpx.Timeout) -&gt; Client</code>","text":"<p>Get a new client matching this one with a new timeout (in seconds)</p> Source code in <code>kalshi_py/client.py</code> <pre><code>def with_timeout(self, timeout: httpx.Timeout) -&gt; \"Client\":\n    \"\"\"Get a new client matching this one with a new timeout (in seconds)\"\"\"\n    if self._client is not None:\n        self._client.timeout = timeout\n    if self._async_client is not None:\n        self._async_client.timeout = timeout\n    return evolve(self, timeout=timeout)\n</code></pre>"},{"location":"api/client/#kalshi_py.client.Client.set_httpx_client","title":"<code>set_httpx_client(client: httpx.Client) -&gt; Client</code>","text":"<p>Manually set the underlying httpx.Client</p> <p>NOTE: This will override any other settings on the client, including cookies, headers, and timeout.</p> Source code in <code>kalshi_py/client.py</code> <pre><code>def set_httpx_client(self, client: httpx.Client) -&gt; \"Client\":\n    \"\"\"Manually set the underlying httpx.Client\n\n    **NOTE**: This will override any other settings on the client, including cookies, headers, and timeout.\n    \"\"\"\n    self._client = client\n    return self\n</code></pre>"},{"location":"api/client/#kalshi_py.client.Client.get_httpx_client","title":"<code>get_httpx_client() -&gt; httpx.Client</code>","text":"<p>Get the underlying httpx.Client, constructing a new one if not previously set</p> Source code in <code>kalshi_py/client.py</code> <pre><code>def get_httpx_client(self) -&gt; httpx.Client:\n    \"\"\"Get the underlying httpx.Client, constructing a new one if not previously set\"\"\"\n    if self._client is None:\n        self._client = httpx.Client(\n            base_url=self._base_url,\n            cookies=self._cookies,\n            headers=self._headers,\n            timeout=self._timeout,\n            verify=self._verify_ssl,\n            follow_redirects=self._follow_redirects,\n            **self._httpx_args,\n        )\n    return self._client\n</code></pre>"},{"location":"api/client/#kalshi_py.client.Client.set_async_httpx_client","title":"<code>set_async_httpx_client(async_client: httpx.AsyncClient) -&gt; Client</code>","text":"<p>Manually the underlying httpx.AsyncClient</p> <p>NOTE: This will override any other settings on the client, including cookies, headers, and timeout.</p> Source code in <code>kalshi_py/client.py</code> <pre><code>def set_async_httpx_client(self, async_client: httpx.AsyncClient) -&gt; \"Client\":\n    \"\"\"Manually the underlying httpx.AsyncClient\n\n    **NOTE**: This will override any other settings on the client, including cookies, headers, and timeout.\n    \"\"\"\n    self._async_client = async_client\n    return self\n</code></pre>"},{"location":"api/client/#kalshi_py.client.Client.get_async_httpx_client","title":"<code>get_async_httpx_client() -&gt; httpx.AsyncClient</code>","text":"<p>Get the underlying httpx.AsyncClient, constructing a new one if not previously set</p> Source code in <code>kalshi_py/client.py</code> <pre><code>def get_async_httpx_client(self) -&gt; httpx.AsyncClient:\n    \"\"\"Get the underlying httpx.AsyncClient, constructing a new one if not previously set\"\"\"\n    if self._async_client is None:\n        self._async_client = httpx.AsyncClient(\n            base_url=self._base_url,\n            cookies=self._cookies,\n            headers=self._headers,\n            timeout=self._timeout,\n            verify=self._verify_ssl,\n            follow_redirects=self._follow_redirects,\n            **self._httpx_args,\n        )\n    return self._async_client\n</code></pre>"},{"location":"api/client/#kalshi_py.client.AuthenticatedClient","title":"<code>kalshi_py.client.AuthenticatedClient</code>","text":"<p>A Client which has been authenticated for use on secured endpoints</p> <p>The following are accepted as keyword arguments and will be used to construct httpx Clients internally:</p> <pre><code>``base_url``: The base URL for the API, all requests are made to a relative path to this URL\n\n``cookies``: A dictionary of cookies to be sent with every request\n\n``headers``: A dictionary of headers to be sent with every request\n\n``timeout``: The maximum amount of a time a request can take. API functions will raise\nhttpx.TimeoutException if this is exceeded.\n\n``verify_ssl``: Whether or not to verify the SSL certificate of the API server. This should be True in production,\nbut can be set to False for testing purposes.\n\n``follow_redirects``: Whether or not to follow redirects. Default value is False.\n\n``httpx_args``: A dictionary of additional arguments to be passed to the ``httpx.Client`` and ``httpx.AsyncClient`` constructor.\n</code></pre> <p>Attributes:</p> Name Type Description <code>raise_on_unexpected_status</code> <code>bool</code> <p>Whether or not to raise an errors.UnexpectedStatus if the API returns a status code that was not documented in the source OpenAPI document. Can also be provided as a keyword argument to the constructor.</p> <code>token</code> <code>str</code> <p>The token to use for authentication</p> <code>prefix</code> <code>str</code> <p>The prefix to use for the Authorization header</p> <code>auth_header_name</code> <code>str</code> <p>The name of the Authorization header</p>"},{"location":"api/client/#kalshi_py.client.AuthenticatedClient-functions","title":"Functions","text":""},{"location":"api/client/#kalshi_py.client.AuthenticatedClient.with_headers","title":"<code>with_headers(headers: dict[str, str]) -&gt; AuthenticatedClient</code>","text":"<p>Get a new client matching this one with additional headers</p> Source code in <code>kalshi_py/client.py</code> <pre><code>def with_headers(self, headers: dict[str, str]) -&gt; \"AuthenticatedClient\":\n    \"\"\"Get a new client matching this one with additional headers\"\"\"\n    if self._client is not None:\n        self._client.headers.update(headers)\n    if self._async_client is not None:\n        self._async_client.headers.update(headers)\n    return evolve(self, headers={**self._headers, **headers})\n</code></pre>"},{"location":"api/client/#kalshi_py.client.AuthenticatedClient.with_cookies","title":"<code>with_cookies(cookies: dict[str, str]) -&gt; AuthenticatedClient</code>","text":"<p>Get a new client matching this one with additional cookies</p> Source code in <code>kalshi_py/client.py</code> <pre><code>def with_cookies(self, cookies: dict[str, str]) -&gt; \"AuthenticatedClient\":\n    \"\"\"Get a new client matching this one with additional cookies\"\"\"\n    if self._client is not None:\n        self._client.cookies.update(cookies)\n    if self._async_client is not None:\n        self._async_client.cookies.update(cookies)\n    return evolve(self, cookies={**self._cookies, **cookies})\n</code></pre>"},{"location":"api/client/#kalshi_py.client.AuthenticatedClient.with_timeout","title":"<code>with_timeout(timeout: httpx.Timeout) -&gt; AuthenticatedClient</code>","text":"<p>Get a new client matching this one with a new timeout (in seconds)</p> Source code in <code>kalshi_py/client.py</code> <pre><code>def with_timeout(self, timeout: httpx.Timeout) -&gt; \"AuthenticatedClient\":\n    \"\"\"Get a new client matching this one with a new timeout (in seconds)\"\"\"\n    if self._client is not None:\n        self._client.timeout = timeout\n    if self._async_client is not None:\n        self._async_client.timeout = timeout\n    return evolve(self, timeout=timeout)\n</code></pre>"},{"location":"api/client/#kalshi_py.client.AuthenticatedClient.set_httpx_client","title":"<code>set_httpx_client(client: httpx.Client) -&gt; AuthenticatedClient</code>","text":"<p>Manually set the underlying httpx.Client</p> <p>NOTE: This will override any other settings on the client, including cookies, headers, and timeout.</p> Source code in <code>kalshi_py/client.py</code> <pre><code>def set_httpx_client(self, client: httpx.Client) -&gt; \"AuthenticatedClient\":\n    \"\"\"Manually set the underlying httpx.Client\n\n    **NOTE**: This will override any other settings on the client, including cookies, headers, and timeout.\n    \"\"\"\n    self._client = client\n    return self\n</code></pre>"},{"location":"api/client/#kalshi_py.client.AuthenticatedClient.get_httpx_client","title":"<code>get_httpx_client() -&gt; httpx.Client</code>","text":"<p>Get the underlying httpx.Client, constructing a new one if not previously set</p> Source code in <code>kalshi_py/client.py</code> <pre><code>def get_httpx_client(self) -&gt; httpx.Client:\n    \"\"\"Get the underlying httpx.Client, constructing a new one if not previously set\"\"\"\n    if self._client is None:\n        self._headers[self.auth_header_name] = f\"{self.prefix} {self.token}\" if self.prefix else self.token\n        self._client = httpx.Client(\n            base_url=self._base_url,\n            cookies=self._cookies,\n            headers=self._headers,\n            timeout=self._timeout,\n            verify=self._verify_ssl,\n            follow_redirects=self._follow_redirects,\n            **self._httpx_args,\n        )\n    return self._client\n</code></pre>"},{"location":"api/client/#kalshi_py.client.AuthenticatedClient.set_async_httpx_client","title":"<code>set_async_httpx_client(async_client: httpx.AsyncClient) -&gt; AuthenticatedClient</code>","text":"<p>Manually the underlying httpx.AsyncClient</p> <p>NOTE: This will override any other settings on the client, including cookies, headers, and timeout.</p> Source code in <code>kalshi_py/client.py</code> <pre><code>def set_async_httpx_client(self, async_client: httpx.AsyncClient) -&gt; \"AuthenticatedClient\":\n    \"\"\"Manually the underlying httpx.AsyncClient\n\n    **NOTE**: This will override any other settings on the client, including cookies, headers, and timeout.\n    \"\"\"\n    self._async_client = async_client\n    return self\n</code></pre>"},{"location":"api/client/#kalshi_py.client.AuthenticatedClient.get_async_httpx_client","title":"<code>get_async_httpx_client() -&gt; httpx.AsyncClient</code>","text":"<p>Get the underlying httpx.AsyncClient, constructing a new one if not previously set</p> Source code in <code>kalshi_py/client.py</code> <pre><code>def get_async_httpx_client(self) -&gt; httpx.AsyncClient:\n    \"\"\"Get the underlying httpx.AsyncClient, constructing a new one if not previously set\"\"\"\n    if self._async_client is None:\n        self._headers[self.auth_header_name] = f\"{self.prefix} {self.token}\" if self.prefix else self.token\n        self._async_client = httpx.AsyncClient(\n            base_url=self._base_url,\n            cookies=self._cookies,\n            headers=self._headers,\n            timeout=self._timeout,\n            verify=self._verify_ssl,\n            follow_redirects=self._follow_redirects,\n            **self._httpx_args,\n        )\n    return self._async_client\n</code></pre>"},{"location":"api/client/#kalshi_py.auth.KalshiAuthenticatedClient","title":"<code>kalshi_py.auth.KalshiAuthenticatedClient(access_key_id: str, private_key_pem: str, base_url: str = 'https://api.elections.kalshi.com/trade-api/v2', **kwargs)</code>","text":"<p>               Bases: <code>AuthenticatedClient</code></p> <p>Authenticated client for Kalshi API with RSA-PSS signature authentication.</p> <p>Initialize authenticated client.</p> <p>Parameters:</p> Name Type Description Default <code>access_key_id</code> <code>str</code> <p>Kalshi access key ID (required)</p> required <code>private_key_pem</code> <code>str</code> <p>PEM-encoded private key (required)</p> required <code>base_url</code> <code>str</code> <p>API base URL (defaults to elections API)</p> <code>'https://api.elections.kalshi.com/trade-api/v2'</code> <code>**kwargs</code> <p>Additional arguments passed to base Client</p> <code>{}</code> Source code in <code>kalshi_py/auth.py</code> <pre><code>def __init__(\n    self,\n    access_key_id: str,\n    private_key_pem: str,\n    base_url: str = \"https://api.elections.kalshi.com/trade-api/v2\",\n    **kwargs,\n):\n    \"\"\"Initialize authenticated client.\n\n    Args:\n        access_key_id: Kalshi access key ID (required)\n        private_key_pem: PEM-encoded private key (required)\n        base_url: API base URL (defaults to elections API)\n        **kwargs: Additional arguments passed to base Client\n    \"\"\"\n    self.access_key_id = access_key_id\n    self.private_key_pem = private_key_pem\n    self.auth = KalshiAuth(self.access_key_id, self.private_key_pem)\n\n    # Initialize base AuthenticatedClient with a dummy token\n    # We'll override the authentication in our custom httpx clients\n    super().__init__(\n        base_url=base_url,\n        token=\"dummy\",  # Will be overridden by our custom auth\n        **kwargs,\n    )\n\n    # Set custom httpx clients with authentication\n    self._client = None\n    self._async_client = None\n</code></pre>"},{"location":"api/client/#kalshi_py.auth.KalshiAuthenticatedClient-functions","title":"Functions","text":""},{"location":"api/client/#kalshi_py.auth.KalshiAuthenticatedClient.get_httpx_client","title":"<code>get_httpx_client()</code>","text":"<p>Get the underlying authenticated httpx client.</p> Source code in <code>kalshi_py/auth.py</code> <pre><code>def get_httpx_client(self):\n    \"\"\"Get the underlying authenticated httpx client.\"\"\"\n    if self._client is None:\n        self._client = AuthenticatedHTTPXClient(\n            kalshi_auth=self.auth,\n            base_url=self._base_url,\n            cookies=self._cookies,\n            headers=self._headers,\n            timeout=self._timeout,\n            verify=self._verify_ssl,\n            follow_redirects=self._follow_redirects,\n            **self._httpx_args,\n        )\n    return self._client\n</code></pre>"},{"location":"api/client/#kalshi_py.auth.KalshiAuthenticatedClient.get_async_httpx_client","title":"<code>get_async_httpx_client()</code>","text":"<p>Get the underlying authenticated async httpx client.</p> Source code in <code>kalshi_py/auth.py</code> <pre><code>def get_async_httpx_client(self):\n    \"\"\"Get the underlying authenticated async httpx client.\"\"\"\n    if self._async_client is None:\n        self._async_client = AuthenticatedAsyncHTTPXClient(\n            kalshi_auth=self.auth,\n            base_url=self._base_url,\n            cookies=self._cookies,\n            headers=self._headers,\n            timeout=self._timeout,\n            verify=self._verify_ssl,\n            follow_redirects=self._follow_redirects,\n            **self._httpx_args,\n        )\n    return self._async_client\n</code></pre>"},{"location":"api/client/#factory-functions","title":"Factory Functions","text":"<p>handler: python options: show_source: true show_root_heading: true</p>"},{"location":"api/client/#kalshi_py.create_client","title":"<code>kalshi_py.create_client(base_url: str = 'https://api.elections.kalshi.com/trade-api/v2', access_key_id: str | None = None, private_key_path: str | None = None, private_key_data: str | None = None, **kwargs) -&gt; KalshiAuthenticatedClient</code>","text":"<p>Create an authenticated Kalshi client with RSA-PSS signature authentication.</p> <pre><code>Args:\n    base_url: API base URL (defaults to elections API)\n    access_key_id: Kalshi access key ID (from environment if not provided)\n    private_key_path: Path to private key file (mutually exclusive with private_key_data)\n    private_key_data: PEM-encoded private key string (mutually exclusive with private_key_path)\n    **kwargs: Additional arguments passed to the client\n\nReturns:\n    Authenticated client instance\n\nExample:\n    ```python\n    from kalshi_py import create_client\n\n    # Using environment variables\n    client = create_client()\n\n    # Or with file path\n    client = create_client(\n        access_key_id=\"your-key-id\",\n        private_key_path=\"/path/to/private-key.pem\"\n    )\n\n    # Or with PEM data\n    client = create_client(\n        access_key_id=\"your-key-id\",\n        private_key_data=\"-----BEGIN PRIVATE KEY-----\n</code></pre> <p>...\"         )         ```</p> Source code in <code>kalshi_py/__init__.py</code> <pre><code>def create_client(\n    base_url: str = \"https://api.elections.kalshi.com/trade-api/v2\",\n    access_key_id: str | None = None,\n    private_key_path: str | None = None,\n    private_key_data: str | None = None,\n    **kwargs,\n) -&gt; KalshiAuthenticatedClient:\n    \"\"\"Create an authenticated Kalshi client with RSA-PSS signature authentication.\n\n    Args:\n        base_url: API base URL (defaults to elections API)\n        access_key_id: Kalshi access key ID (from environment if not provided)\n        private_key_path: Path to private key file (mutually exclusive with private_key_data)\n        private_key_data: PEM-encoded private key string (mutually exclusive with private_key_path)\n        **kwargs: Additional arguments passed to the client\n\n    Returns:\n        Authenticated client instance\n\n    Example:\n        ```python\n        from kalshi_py import create_client\n\n        # Using environment variables\n        client = create_client()\n\n        # Or with file path\n        client = create_client(\n            access_key_id=\"your-key-id\",\n            private_key_path=\"/path/to/private-key.pem\"\n        )\n\n        # Or with PEM data\n        client = create_client(\n            access_key_id=\"your-key-id\",\n            private_key_data=\"-----BEGIN PRIVATE KEY-----\\n...\"\n        )\n        ```\n    \"\"\"\n    # Get access key ID from parameters or environment\n    final_access_key_id = access_key_id or os.getenv(\"KALSHI_API_KEY_ID\")\n\n    if not final_access_key_id:\n        raise ValueError(\"access_key_id must be provided or set in KALSHI_API_KEY_ID environment variable\")\n\n    # Handle private key - check for mutual exclusivity\n    if private_key_path and private_key_data:\n        raise ValueError(\"Cannot specify both private_key_path and private_key_data\")\n\n    if private_key_path:\n        # Read from file\n        with open(private_key_path) as f:\n            final_private_key_data = f.read()\n    elif private_key_data:\n        # Use provided PEM data\n        final_private_key_data = private_key_data\n    else:\n        # Try environment variable\n        final_private_key_data = os.getenv(\"KALSHI_PY_PRIVATE_KEY_PEM\")\n\n    if not final_private_key_data:\n        raise ValueError(\n            \"private_key_path, private_key_data, or KALSHI_PY_PRIVATE_KEY_PEM environment variable must be provided\"\n        )\n\n    return KalshiAuthenticatedClient(\n        base_url=base_url, access_key_id=final_access_key_id, private_key_pem=final_private_key_data, **kwargs\n    )\n</code></pre>"},{"location":"api/client/#error-classes","title":"Error Classes","text":"<p>handler: python options: show_source: true show_root_heading: true</p>"},{"location":"api/client/#kalshi_py.errors.UnexpectedStatus","title":"<code>kalshi_py.errors.UnexpectedStatus(status_code: int, content: bytes)</code>","text":"<p>               Bases: <code>Exception</code></p> <p>Raised by api functions when the response status an undocumented status and Client.raise_on_unexpected_status is True</p> Source code in <code>kalshi_py/errors.py</code> <pre><code>def __init__(self, status_code: int, content: bytes):\n    self.status_code = status_code\n    self.content = content\n\n    super().__init__(\n        f\"Unexpected status code: {status_code}\\n\\nResponse content:\\n{content.decode(errors='ignore')}\"\n    )\n</code></pre>"},{"location":"api/client/#usage-examples","title":"Usage Examples","text":""},{"location":"api/client/#creating-a-public-client","title":"Creating a Public Client","text":"<pre><code>from kalshi_py import Client\n\nclient = Client(base_url=\"https://api.elections.kalshi.com/trade-api/v2\")\n</code></pre>"},{"location":"api/client/#creating-an-authenticated-client","title":"Creating an Authenticated Client","text":"<pre><code>from kalshi_py import create_client\n\n# Using environment variables\nclient = create_client()\n\n# Or with explicit credentials\nclient = create_client(\n    access_key_id=\"your-key-id\",\n    private_key_path=\"/path/to/private-key.pem\"\n)\n</code></pre>"},{"location":"api/client/#using-the-client","title":"Using the Client","text":"<pre><code>from kalshi_py.api.market import get_markets\nresponse = get_markets.sync(client=client, limit=10)\nprint(f\"Found {len(response.markets)} markets\")\n</code></pre>"},{"location":"api/client/#configuration-options","title":"Configuration Options","text":""},{"location":"api/client/#ssl-verification","title":"SSL Verification","text":"<pre><code># Custom SSL certificate\nclient = create_client(verify_ssl=\"/path/to/certificate_bundle.pem\")\n\n# Disable SSL verification (not recommended for production)\nclient = create_client(verify_ssl=False)\n</code></pre>"},{"location":"api/client/#timeouts-and-headers","title":"Timeouts and Headers","text":"<pre><code>import httpx\n\nclient = create_client(\n    timeout=httpx.Timeout(30.0),\n    headers={\"User-Agent\": \"MyApp/1.0\"}\n)\n</code></pre>"},{"location":"api/client/#request-logging","title":"Request Logging","text":"<pre><code>def log_request(request):\n    print(f\"Request: {request.method} {request.url}\")\n\ndef log_response(response):\n    print(f\"Response: {response.status_code}\")\n\nclient = create_client(\n    httpx_args={\n        \"event_hooks\": {\n            \"request\": [log_request],\n            \"response\": [log_response]\n        }\n    }\n)\n</code></pre>"},{"location":"api/collection/","title":"Collection API Reference","text":""},{"location":"api/collection/#endpoints","title":"Endpoints","text":""},{"location":"api/collection/#create-market-in-multivariate-event-collection","title":"Create Market In Multivariate Event Collection","text":"<p>Synchronous API Call</p> <p>Asynchronous API Call</p> <p>Synchronous Detailed Response</p> <p>Asynchronous Detailed Response</p>"},{"location":"api/collection/#kalshi_py.api.collection.create_market_in_multivariate_event_collection.sync","title":"<code>kalshi_py.api.collection.create_market_in_multivariate_event_collection.sync(collection_ticker: str, *, client: Union[AuthenticatedClient, Client], body: GithubComKalshiExchangeInfraSvcApi2ModelCreateMarketInMultivariateEventCollectionRequest) -&gt; Optional[GithubComKalshiExchangeInfraSvcApi2ModelCreateMarketInMultivariateEventCollectionResponse]</code>","text":"<p>Create Market In Multivariate Event Collection</p> <p>Endpoint for looking up an individual market in a multivariate event collection. This endpoint must be hit at least once before trading or looking up a market.</p> <p>Parameters:</p> Name Type Description Default <code>collection_ticker</code> <code>str</code> <p>Collection ticker</p> required <p>Raises:</p> Type Description <code>UnexpectedStatus</code> <p>If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.</p> <code>TimeoutException</code> <p>If the request takes longer than Client.timeout.</p> <p>Returns:</p> Type Description <code>Optional[GithubComKalshiExchangeInfraSvcApi2ModelCreateMarketInMultivariateEventCollectionResponse]</code> <p>GithubComKalshiExchangeInfraSvcApi2ModelCreateMarketInMultivariateEventCollectionResponse</p> Source code in <code>kalshi_py/api/collection/create_market_in_multivariate_event_collection.py</code> <pre><code>def sync(\n    collection_ticker: str,\n    *,\n    client: Union[AuthenticatedClient, Client],\n    body: GithubComKalshiExchangeInfraSvcApi2ModelCreateMarketInMultivariateEventCollectionRequest,\n) -&gt; Optional[GithubComKalshiExchangeInfraSvcApi2ModelCreateMarketInMultivariateEventCollectionResponse]:\n    \"\"\"Create Market In Multivariate Event Collection\n\n      Endpoint for looking up an individual market in a multivariate event collection. This endpoint must\n    be hit at least once before trading or looking up a market.\n\n    Args:\n        collection_ticker (str): Collection ticker\n        body (GithubComKalshiExchangeInfraSvcApi2ModelCreateMarketInMultivariateEventCollectionReq\n            uest):\n\n    Raises:\n        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.\n        httpx.TimeoutException: If the request takes longer than Client.timeout.\n\n    Returns:\n        GithubComKalshiExchangeInfraSvcApi2ModelCreateMarketInMultivariateEventCollectionResponse\n    \"\"\"\n\n    return sync_detailed(\n        collection_ticker=collection_ticker,\n        client=client,\n        body=body,\n    ).parsed\n</code></pre>"},{"location":"api/collection/#kalshi_py.api.collection.create_market_in_multivariate_event_collection.asyncio","title":"<code>kalshi_py.api.collection.create_market_in_multivariate_event_collection.asyncio(collection_ticker: str, *, client: Union[AuthenticatedClient, Client], body: GithubComKalshiExchangeInfraSvcApi2ModelCreateMarketInMultivariateEventCollectionRequest) -&gt; Optional[GithubComKalshiExchangeInfraSvcApi2ModelCreateMarketInMultivariateEventCollectionResponse]</code>  <code>async</code>","text":"<p>Create Market In Multivariate Event Collection</p> <p>Endpoint for looking up an individual market in a multivariate event collection. This endpoint must be hit at least once before trading or looking up a market.</p> <p>Parameters:</p> Name Type Description Default <code>collection_ticker</code> <code>str</code> <p>Collection ticker</p> required <p>Raises:</p> Type Description <code>UnexpectedStatus</code> <p>If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.</p> <code>TimeoutException</code> <p>If the request takes longer than Client.timeout.</p> <p>Returns:</p> Type Description <code>Optional[GithubComKalshiExchangeInfraSvcApi2ModelCreateMarketInMultivariateEventCollectionResponse]</code> <p>GithubComKalshiExchangeInfraSvcApi2ModelCreateMarketInMultivariateEventCollectionResponse</p> Source code in <code>kalshi_py/api/collection/create_market_in_multivariate_event_collection.py</code> <pre><code>async def asyncio(\n    collection_ticker: str,\n    *,\n    client: Union[AuthenticatedClient, Client],\n    body: GithubComKalshiExchangeInfraSvcApi2ModelCreateMarketInMultivariateEventCollectionRequest,\n) -&gt; Optional[GithubComKalshiExchangeInfraSvcApi2ModelCreateMarketInMultivariateEventCollectionResponse]:\n    \"\"\"Create Market In Multivariate Event Collection\n\n      Endpoint for looking up an individual market in a multivariate event collection. This endpoint must\n    be hit at least once before trading or looking up a market.\n\n    Args:\n        collection_ticker (str): Collection ticker\n        body (GithubComKalshiExchangeInfraSvcApi2ModelCreateMarketInMultivariateEventCollectionReq\n            uest):\n\n    Raises:\n        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.\n        httpx.TimeoutException: If the request takes longer than Client.timeout.\n\n    Returns:\n        GithubComKalshiExchangeInfraSvcApi2ModelCreateMarketInMultivariateEventCollectionResponse\n    \"\"\"\n\n    return (\n        await asyncio_detailed(\n            collection_ticker=collection_ticker,\n            client=client,\n            body=body,\n        )\n    ).parsed\n</code></pre>"},{"location":"api/collection/#kalshi_py.api.collection.create_market_in_multivariate_event_collection.sync_detailed","title":"<code>kalshi_py.api.collection.create_market_in_multivariate_event_collection.sync_detailed(collection_ticker: str, *, client: Union[AuthenticatedClient, Client], body: GithubComKalshiExchangeInfraSvcApi2ModelCreateMarketInMultivariateEventCollectionRequest) -&gt; Response[GithubComKalshiExchangeInfraSvcApi2ModelCreateMarketInMultivariateEventCollectionResponse]</code>","text":"<p>Create Market In Multivariate Event Collection</p> <p>Endpoint for looking up an individual market in a multivariate event collection. This endpoint must be hit at least once before trading or looking up a market.</p> <p>Parameters:</p> Name Type Description Default <code>collection_ticker</code> <code>str</code> <p>Collection ticker</p> required <p>Raises:</p> Type Description <code>UnexpectedStatus</code> <p>If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.</p> <code>TimeoutException</code> <p>If the request takes longer than Client.timeout.</p> <p>Returns:</p> Type Description <code>Response[GithubComKalshiExchangeInfraSvcApi2ModelCreateMarketInMultivariateEventCollectionResponse]</code> <p>Response[GithubComKalshiExchangeInfraSvcApi2ModelCreateMarketInMultivariateEventCollectionResponse]</p> Source code in <code>kalshi_py/api/collection/create_market_in_multivariate_event_collection.py</code> <pre><code>def sync_detailed(\n    collection_ticker: str,\n    *,\n    client: Union[AuthenticatedClient, Client],\n    body: GithubComKalshiExchangeInfraSvcApi2ModelCreateMarketInMultivariateEventCollectionRequest,\n) -&gt; Response[GithubComKalshiExchangeInfraSvcApi2ModelCreateMarketInMultivariateEventCollectionResponse]:\n    \"\"\"Create Market In Multivariate Event Collection\n\n      Endpoint for looking up an individual market in a multivariate event collection. This endpoint must\n    be hit at least once before trading or looking up a market.\n\n    Args:\n        collection_ticker (str): Collection ticker\n        body (GithubComKalshiExchangeInfraSvcApi2ModelCreateMarketInMultivariateEventCollectionReq\n            uest):\n\n    Raises:\n        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.\n        httpx.TimeoutException: If the request takes longer than Client.timeout.\n\n    Returns:\n        Response[GithubComKalshiExchangeInfraSvcApi2ModelCreateMarketInMultivariateEventCollectionResponse]\n    \"\"\"\n\n    kwargs = _get_kwargs(\n        collection_ticker=collection_ticker,\n        body=body,\n    )\n\n    response = client.get_httpx_client().request(\n        **kwargs,\n    )\n\n    return _build_response(client=client, response=response)\n</code></pre>"},{"location":"api/collection/#kalshi_py.api.collection.create_market_in_multivariate_event_collection.asyncio_detailed","title":"<code>kalshi_py.api.collection.create_market_in_multivariate_event_collection.asyncio_detailed(collection_ticker: str, *, client: Union[AuthenticatedClient, Client], body: GithubComKalshiExchangeInfraSvcApi2ModelCreateMarketInMultivariateEventCollectionRequest) -&gt; Response[GithubComKalshiExchangeInfraSvcApi2ModelCreateMarketInMultivariateEventCollectionResponse]</code>  <code>async</code>","text":"<p>Create Market In Multivariate Event Collection</p> <p>Endpoint for looking up an individual market in a multivariate event collection. This endpoint must be hit at least once before trading or looking up a market.</p> <p>Parameters:</p> Name Type Description Default <code>collection_ticker</code> <code>str</code> <p>Collection ticker</p> required <p>Raises:</p> Type Description <code>UnexpectedStatus</code> <p>If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.</p> <code>TimeoutException</code> <p>If the request takes longer than Client.timeout.</p> <p>Returns:</p> Type Description <code>Response[GithubComKalshiExchangeInfraSvcApi2ModelCreateMarketInMultivariateEventCollectionResponse]</code> <p>Response[GithubComKalshiExchangeInfraSvcApi2ModelCreateMarketInMultivariateEventCollectionResponse]</p> Source code in <code>kalshi_py/api/collection/create_market_in_multivariate_event_collection.py</code> <pre><code>async def asyncio_detailed(\n    collection_ticker: str,\n    *,\n    client: Union[AuthenticatedClient, Client],\n    body: GithubComKalshiExchangeInfraSvcApi2ModelCreateMarketInMultivariateEventCollectionRequest,\n) -&gt; Response[GithubComKalshiExchangeInfraSvcApi2ModelCreateMarketInMultivariateEventCollectionResponse]:\n    \"\"\"Create Market In Multivariate Event Collection\n\n      Endpoint for looking up an individual market in a multivariate event collection. This endpoint must\n    be hit at least once before trading or looking up a market.\n\n    Args:\n        collection_ticker (str): Collection ticker\n        body (GithubComKalshiExchangeInfraSvcApi2ModelCreateMarketInMultivariateEventCollectionReq\n            uest):\n\n    Raises:\n        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.\n        httpx.TimeoutException: If the request takes longer than Client.timeout.\n\n    Returns:\n        Response[GithubComKalshiExchangeInfraSvcApi2ModelCreateMarketInMultivariateEventCollectionResponse]\n    \"\"\"\n\n    kwargs = _get_kwargs(\n        collection_ticker=collection_ticker,\n        body=body,\n    )\n\n    response = await client.get_async_httpx_client().request(**kwargs)\n\n    return _build_response(client=client, response=response)\n</code></pre>"},{"location":"api/collection/#get-multivariate-event-collection","title":"Get Multivariate Event Collection","text":"<p>Synchronous API Call</p> <p>Asynchronous API Call</p> <p>Synchronous Detailed Response</p> <p>Asynchronous Detailed Response</p>"},{"location":"api/collection/#kalshi_py.api.collection.get_multivariate_event_collection.sync","title":"<code>kalshi_py.api.collection.get_multivariate_event_collection.sync(collection_ticker: str, *, client: Union[AuthenticatedClient, Client]) -&gt; Optional[GithubComKalshiExchangeInfraSvcApi2ModelGetMultivariateEventCollectionResponse]</code>","text":"<p>Get Multivariate Event Collection</p> <p>Endpoint for getting data about a multivariate event collection by its ticker.</p> <p>Parameters:</p> Name Type Description Default <code>collection_ticker</code> <code>str</code> <p>Collection ticker</p> required <p>Raises:</p> Type Description <code>UnexpectedStatus</code> <p>If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.</p> <code>TimeoutException</code> <p>If the request takes longer than Client.timeout.</p> <p>Returns:</p> Type Description <code>Optional[GithubComKalshiExchangeInfraSvcApi2ModelGetMultivariateEventCollectionResponse]</code> <p>GithubComKalshiExchangeInfraSvcApi2ModelGetMultivariateEventCollectionResponse</p> Source code in <code>kalshi_py/api/collection/get_multivariate_event_collection.py</code> <pre><code>def sync(\n    collection_ticker: str,\n    *,\n    client: Union[AuthenticatedClient, Client],\n) -&gt; Optional[GithubComKalshiExchangeInfraSvcApi2ModelGetMultivariateEventCollectionResponse]:\n    \"\"\"Get Multivariate Event Collection\n\n      Endpoint for getting data about a multivariate event collection by its ticker.\n\n    Args:\n        collection_ticker (str): Collection ticker\n\n    Raises:\n        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.\n        httpx.TimeoutException: If the request takes longer than Client.timeout.\n\n    Returns:\n        GithubComKalshiExchangeInfraSvcApi2ModelGetMultivariateEventCollectionResponse\n    \"\"\"\n\n    return sync_detailed(\n        collection_ticker=collection_ticker,\n        client=client,\n    ).parsed\n</code></pre>"},{"location":"api/collection/#kalshi_py.api.collection.get_multivariate_event_collection.asyncio","title":"<code>kalshi_py.api.collection.get_multivariate_event_collection.asyncio(collection_ticker: str, *, client: Union[AuthenticatedClient, Client]) -&gt; Optional[GithubComKalshiExchangeInfraSvcApi2ModelGetMultivariateEventCollectionResponse]</code>  <code>async</code>","text":"<p>Get Multivariate Event Collection</p> <p>Endpoint for getting data about a multivariate event collection by its ticker.</p> <p>Parameters:</p> Name Type Description Default <code>collection_ticker</code> <code>str</code> <p>Collection ticker</p> required <p>Raises:</p> Type Description <code>UnexpectedStatus</code> <p>If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.</p> <code>TimeoutException</code> <p>If the request takes longer than Client.timeout.</p> <p>Returns:</p> Type Description <code>Optional[GithubComKalshiExchangeInfraSvcApi2ModelGetMultivariateEventCollectionResponse]</code> <p>GithubComKalshiExchangeInfraSvcApi2ModelGetMultivariateEventCollectionResponse</p> Source code in <code>kalshi_py/api/collection/get_multivariate_event_collection.py</code> <pre><code>async def asyncio(\n    collection_ticker: str,\n    *,\n    client: Union[AuthenticatedClient, Client],\n) -&gt; Optional[GithubComKalshiExchangeInfraSvcApi2ModelGetMultivariateEventCollectionResponse]:\n    \"\"\"Get Multivariate Event Collection\n\n      Endpoint for getting data about a multivariate event collection by its ticker.\n\n    Args:\n        collection_ticker (str): Collection ticker\n\n    Raises:\n        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.\n        httpx.TimeoutException: If the request takes longer than Client.timeout.\n\n    Returns:\n        GithubComKalshiExchangeInfraSvcApi2ModelGetMultivariateEventCollectionResponse\n    \"\"\"\n\n    return (\n        await asyncio_detailed(\n            collection_ticker=collection_ticker,\n            client=client,\n        )\n    ).parsed\n</code></pre>"},{"location":"api/collection/#kalshi_py.api.collection.get_multivariate_event_collection.sync_detailed","title":"<code>kalshi_py.api.collection.get_multivariate_event_collection.sync_detailed(collection_ticker: str, *, client: Union[AuthenticatedClient, Client]) -&gt; Response[GithubComKalshiExchangeInfraSvcApi2ModelGetMultivariateEventCollectionResponse]</code>","text":"<p>Get Multivariate Event Collection</p> <p>Endpoint for getting data about a multivariate event collection by its ticker.</p> <p>Parameters:</p> Name Type Description Default <code>collection_ticker</code> <code>str</code> <p>Collection ticker</p> required <p>Raises:</p> Type Description <code>UnexpectedStatus</code> <p>If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.</p> <code>TimeoutException</code> <p>If the request takes longer than Client.timeout.</p> <p>Returns:</p> Type Description <code>Response[GithubComKalshiExchangeInfraSvcApi2ModelGetMultivariateEventCollectionResponse]</code> <p>Response[GithubComKalshiExchangeInfraSvcApi2ModelGetMultivariateEventCollectionResponse]</p> Source code in <code>kalshi_py/api/collection/get_multivariate_event_collection.py</code> <pre><code>def sync_detailed(\n    collection_ticker: str,\n    *,\n    client: Union[AuthenticatedClient, Client],\n) -&gt; Response[GithubComKalshiExchangeInfraSvcApi2ModelGetMultivariateEventCollectionResponse]:\n    \"\"\"Get Multivariate Event Collection\n\n      Endpoint for getting data about a multivariate event collection by its ticker.\n\n    Args:\n        collection_ticker (str): Collection ticker\n\n    Raises:\n        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.\n        httpx.TimeoutException: If the request takes longer than Client.timeout.\n\n    Returns:\n        Response[GithubComKalshiExchangeInfraSvcApi2ModelGetMultivariateEventCollectionResponse]\n    \"\"\"\n\n    kwargs = _get_kwargs(\n        collection_ticker=collection_ticker,\n    )\n\n    response = client.get_httpx_client().request(\n        **kwargs,\n    )\n\n    return _build_response(client=client, response=response)\n</code></pre>"},{"location":"api/collection/#kalshi_py.api.collection.get_multivariate_event_collection.asyncio_detailed","title":"<code>kalshi_py.api.collection.get_multivariate_event_collection.asyncio_detailed(collection_ticker: str, *, client: Union[AuthenticatedClient, Client]) -&gt; Response[GithubComKalshiExchangeInfraSvcApi2ModelGetMultivariateEventCollectionResponse]</code>  <code>async</code>","text":"<p>Get Multivariate Event Collection</p> <p>Endpoint for getting data about a multivariate event collection by its ticker.</p> <p>Parameters:</p> Name Type Description Default <code>collection_ticker</code> <code>str</code> <p>Collection ticker</p> required <p>Raises:</p> Type Description <code>UnexpectedStatus</code> <p>If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.</p> <code>TimeoutException</code> <p>If the request takes longer than Client.timeout.</p> <p>Returns:</p> Type Description <code>Response[GithubComKalshiExchangeInfraSvcApi2ModelGetMultivariateEventCollectionResponse]</code> <p>Response[GithubComKalshiExchangeInfraSvcApi2ModelGetMultivariateEventCollectionResponse]</p> Source code in <code>kalshi_py/api/collection/get_multivariate_event_collection.py</code> <pre><code>async def asyncio_detailed(\n    collection_ticker: str,\n    *,\n    client: Union[AuthenticatedClient, Client],\n) -&gt; Response[GithubComKalshiExchangeInfraSvcApi2ModelGetMultivariateEventCollectionResponse]:\n    \"\"\"Get Multivariate Event Collection\n\n      Endpoint for getting data about a multivariate event collection by its ticker.\n\n    Args:\n        collection_ticker (str): Collection ticker\n\n    Raises:\n        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.\n        httpx.TimeoutException: If the request takes longer than Client.timeout.\n\n    Returns:\n        Response[GithubComKalshiExchangeInfraSvcApi2ModelGetMultivariateEventCollectionResponse]\n    \"\"\"\n\n    kwargs = _get_kwargs(\n        collection_ticker=collection_ticker,\n    )\n\n    response = await client.get_async_httpx_client().request(**kwargs)\n\n    return _build_response(client=client, response=response)\n</code></pre>"},{"location":"api/collection/#get-multivariate-event-collection-lookup-history","title":"Get Multivariate Event Collection Lookup History","text":"<p>Synchronous API Call</p> <p>Asynchronous API Call</p> <p>Synchronous Detailed Response</p> <p>Asynchronous Detailed Response</p>"},{"location":"api/collection/#kalshi_py.api.collection.get_multivariate_event_collection_lookup_history.sync","title":"<code>kalshi_py.api.collection.get_multivariate_event_collection_lookup_history.sync(collection_ticker: str, *, client: Union[AuthenticatedClient, Client]) -&gt; Optional[GithubComKalshiExchangeInfraSvcApi2ModelGetMultivariateEventCollectionLookupHistoryResponse]</code>","text":"<p>Get Multivariate Event Collection Lookup History</p> <p>Endpoint for retrieving which markets in an event collection were recently looked up.</p> <p>Parameters:</p> Name Type Description Default <code>collection_ticker</code> <code>str</code> <p>Collection ticker</p> required <p>Raises:</p> Type Description <code>UnexpectedStatus</code> <p>If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.</p> <code>TimeoutException</code> <p>If the request takes longer than Client.timeout.</p> <p>Returns:</p> Type Description <code>Optional[GithubComKalshiExchangeInfraSvcApi2ModelGetMultivariateEventCollectionLookupHistoryResponse]</code> <p>GithubComKalshiExchangeInfraSvcApi2ModelGetMultivariateEventCollectionLookupHistoryResponse</p> Source code in <code>kalshi_py/api/collection/get_multivariate_event_collection_lookup_history.py</code> <pre><code>def sync(\n    collection_ticker: str,\n    *,\n    client: Union[AuthenticatedClient, Client],\n) -&gt; Optional[GithubComKalshiExchangeInfraSvcApi2ModelGetMultivariateEventCollectionLookupHistoryResponse]:\n    \"\"\"Get Multivariate Event Collection Lookup History\n\n      Endpoint for retrieving which markets in an event collection were recently looked up.\n\n    Args:\n        collection_ticker (str): Collection ticker\n\n    Raises:\n        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.\n        httpx.TimeoutException: If the request takes longer than Client.timeout.\n\n    Returns:\n        GithubComKalshiExchangeInfraSvcApi2ModelGetMultivariateEventCollectionLookupHistoryResponse\n    \"\"\"\n\n    return sync_detailed(\n        collection_ticker=collection_ticker,\n        client=client,\n    ).parsed\n</code></pre>"},{"location":"api/collection/#kalshi_py.api.collection.get_multivariate_event_collection_lookup_history.asyncio","title":"<code>kalshi_py.api.collection.get_multivariate_event_collection_lookup_history.asyncio(collection_ticker: str, *, client: Union[AuthenticatedClient, Client]) -&gt; Optional[GithubComKalshiExchangeInfraSvcApi2ModelGetMultivariateEventCollectionLookupHistoryResponse]</code>  <code>async</code>","text":"<p>Get Multivariate Event Collection Lookup History</p> <p>Endpoint for retrieving which markets in an event collection were recently looked up.</p> <p>Parameters:</p> Name Type Description Default <code>collection_ticker</code> <code>str</code> <p>Collection ticker</p> required <p>Raises:</p> Type Description <code>UnexpectedStatus</code> <p>If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.</p> <code>TimeoutException</code> <p>If the request takes longer than Client.timeout.</p> <p>Returns:</p> Type Description <code>Optional[GithubComKalshiExchangeInfraSvcApi2ModelGetMultivariateEventCollectionLookupHistoryResponse]</code> <p>GithubComKalshiExchangeInfraSvcApi2ModelGetMultivariateEventCollectionLookupHistoryResponse</p> Source code in <code>kalshi_py/api/collection/get_multivariate_event_collection_lookup_history.py</code> <pre><code>async def asyncio(\n    collection_ticker: str,\n    *,\n    client: Union[AuthenticatedClient, Client],\n) -&gt; Optional[GithubComKalshiExchangeInfraSvcApi2ModelGetMultivariateEventCollectionLookupHistoryResponse]:\n    \"\"\"Get Multivariate Event Collection Lookup History\n\n      Endpoint for retrieving which markets in an event collection were recently looked up.\n\n    Args:\n        collection_ticker (str): Collection ticker\n\n    Raises:\n        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.\n        httpx.TimeoutException: If the request takes longer than Client.timeout.\n\n    Returns:\n        GithubComKalshiExchangeInfraSvcApi2ModelGetMultivariateEventCollectionLookupHistoryResponse\n    \"\"\"\n\n    return (\n        await asyncio_detailed(\n            collection_ticker=collection_ticker,\n            client=client,\n        )\n    ).parsed\n</code></pre>"},{"location":"api/collection/#kalshi_py.api.collection.get_multivariate_event_collection_lookup_history.sync_detailed","title":"<code>kalshi_py.api.collection.get_multivariate_event_collection_lookup_history.sync_detailed(collection_ticker: str, *, client: Union[AuthenticatedClient, Client]) -&gt; Response[GithubComKalshiExchangeInfraSvcApi2ModelGetMultivariateEventCollectionLookupHistoryResponse]</code>","text":"<p>Get Multivariate Event Collection Lookup History</p> <p>Endpoint for retrieving which markets in an event collection were recently looked up.</p> <p>Parameters:</p> Name Type Description Default <code>collection_ticker</code> <code>str</code> <p>Collection ticker</p> required <p>Raises:</p> Type Description <code>UnexpectedStatus</code> <p>If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.</p> <code>TimeoutException</code> <p>If the request takes longer than Client.timeout.</p> <p>Returns:</p> Type Description <code>Response[GithubComKalshiExchangeInfraSvcApi2ModelGetMultivariateEventCollectionLookupHistoryResponse]</code> <p>Response[GithubComKalshiExchangeInfraSvcApi2ModelGetMultivariateEventCollectionLookupHistoryResponse]</p> Source code in <code>kalshi_py/api/collection/get_multivariate_event_collection_lookup_history.py</code> <pre><code>def sync_detailed(\n    collection_ticker: str,\n    *,\n    client: Union[AuthenticatedClient, Client],\n) -&gt; Response[GithubComKalshiExchangeInfraSvcApi2ModelGetMultivariateEventCollectionLookupHistoryResponse]:\n    \"\"\"Get Multivariate Event Collection Lookup History\n\n      Endpoint for retrieving which markets in an event collection were recently looked up.\n\n    Args:\n        collection_ticker (str): Collection ticker\n\n    Raises:\n        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.\n        httpx.TimeoutException: If the request takes longer than Client.timeout.\n\n    Returns:\n        Response[GithubComKalshiExchangeInfraSvcApi2ModelGetMultivariateEventCollectionLookupHistoryResponse]\n    \"\"\"\n\n    kwargs = _get_kwargs(\n        collection_ticker=collection_ticker,\n    )\n\n    response = client.get_httpx_client().request(\n        **kwargs,\n    )\n\n    return _build_response(client=client, response=response)\n</code></pre>"},{"location":"api/collection/#kalshi_py.api.collection.get_multivariate_event_collection_lookup_history.asyncio_detailed","title":"<code>kalshi_py.api.collection.get_multivariate_event_collection_lookup_history.asyncio_detailed(collection_ticker: str, *, client: Union[AuthenticatedClient, Client]) -&gt; Response[GithubComKalshiExchangeInfraSvcApi2ModelGetMultivariateEventCollectionLookupHistoryResponse]</code>  <code>async</code>","text":"<p>Get Multivariate Event Collection Lookup History</p> <p>Endpoint for retrieving which markets in an event collection were recently looked up.</p> <p>Parameters:</p> Name Type Description Default <code>collection_ticker</code> <code>str</code> <p>Collection ticker</p> required <p>Raises:</p> Type Description <code>UnexpectedStatus</code> <p>If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.</p> <code>TimeoutException</code> <p>If the request takes longer than Client.timeout.</p> <p>Returns:</p> Type Description <code>Response[GithubComKalshiExchangeInfraSvcApi2ModelGetMultivariateEventCollectionLookupHistoryResponse]</code> <p>Response[GithubComKalshiExchangeInfraSvcApi2ModelGetMultivariateEventCollectionLookupHistoryResponse]</p> Source code in <code>kalshi_py/api/collection/get_multivariate_event_collection_lookup_history.py</code> <pre><code>async def asyncio_detailed(\n    collection_ticker: str,\n    *,\n    client: Union[AuthenticatedClient, Client],\n) -&gt; Response[GithubComKalshiExchangeInfraSvcApi2ModelGetMultivariateEventCollectionLookupHistoryResponse]:\n    \"\"\"Get Multivariate Event Collection Lookup History\n\n      Endpoint for retrieving which markets in an event collection were recently looked up.\n\n    Args:\n        collection_ticker (str): Collection ticker\n\n    Raises:\n        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.\n        httpx.TimeoutException: If the request takes longer than Client.timeout.\n\n    Returns:\n        Response[GithubComKalshiExchangeInfraSvcApi2ModelGetMultivariateEventCollectionLookupHistoryResponse]\n    \"\"\"\n\n    kwargs = _get_kwargs(\n        collection_ticker=collection_ticker,\n    )\n\n    response = await client.get_async_httpx_client().request(**kwargs)\n\n    return _build_response(client=client, response=response)\n</code></pre>"},{"location":"api/collection/#get-multivariate-event-collections","title":"Get Multivariate Event Collections","text":"<p>Synchronous API Call</p> <p>Asynchronous API Call</p> <p>Synchronous Detailed Response</p> <p>Asynchronous Detailed Response</p>"},{"location":"api/collection/#kalshi_py.api.collection.get_multivariate_event_collections.sync","title":"<code>kalshi_py.api.collection.get_multivariate_event_collections.sync(*, client: Union[AuthenticatedClient, Client]) -&gt; Optional[GithubComKalshiExchangeInfraSvcApi2ModelGetMultivariateEventCollectionsResponse]</code>","text":"<p>Get Multivariate Event Collections</p> <p>Endpoint for getting data about multivariate event collections.</p> <p>Raises:</p> Type Description <code>UnexpectedStatus</code> <p>If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.</p> <code>TimeoutException</code> <p>If the request takes longer than Client.timeout.</p> <p>Returns:</p> Type Description <code>Optional[GithubComKalshiExchangeInfraSvcApi2ModelGetMultivariateEventCollectionsResponse]</code> <p>GithubComKalshiExchangeInfraSvcApi2ModelGetMultivariateEventCollectionsResponse</p> Source code in <code>kalshi_py/api/collection/get_multivariate_event_collections.py</code> <pre><code>def sync(\n    *,\n    client: Union[AuthenticatedClient, Client],\n) -&gt; Optional[GithubComKalshiExchangeInfraSvcApi2ModelGetMultivariateEventCollectionsResponse]:\n    \"\"\"Get Multivariate Event Collections\n\n      Endpoint for getting data about multivariate event collections.\n\n    Raises:\n        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.\n        httpx.TimeoutException: If the request takes longer than Client.timeout.\n\n    Returns:\n        GithubComKalshiExchangeInfraSvcApi2ModelGetMultivariateEventCollectionsResponse\n    \"\"\"\n\n    return sync_detailed(\n        client=client,\n    ).parsed\n</code></pre>"},{"location":"api/collection/#kalshi_py.api.collection.get_multivariate_event_collections.asyncio","title":"<code>kalshi_py.api.collection.get_multivariate_event_collections.asyncio(*, client: Union[AuthenticatedClient, Client]) -&gt; Optional[GithubComKalshiExchangeInfraSvcApi2ModelGetMultivariateEventCollectionsResponse]</code>  <code>async</code>","text":"<p>Get Multivariate Event Collections</p> <p>Endpoint for getting data about multivariate event collections.</p> <p>Raises:</p> Type Description <code>UnexpectedStatus</code> <p>If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.</p> <code>TimeoutException</code> <p>If the request takes longer than Client.timeout.</p> <p>Returns:</p> Type Description <code>Optional[GithubComKalshiExchangeInfraSvcApi2ModelGetMultivariateEventCollectionsResponse]</code> <p>GithubComKalshiExchangeInfraSvcApi2ModelGetMultivariateEventCollectionsResponse</p> Source code in <code>kalshi_py/api/collection/get_multivariate_event_collections.py</code> <pre><code>async def asyncio(\n    *,\n    client: Union[AuthenticatedClient, Client],\n) -&gt; Optional[GithubComKalshiExchangeInfraSvcApi2ModelGetMultivariateEventCollectionsResponse]:\n    \"\"\"Get Multivariate Event Collections\n\n      Endpoint for getting data about multivariate event collections.\n\n    Raises:\n        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.\n        httpx.TimeoutException: If the request takes longer than Client.timeout.\n\n    Returns:\n        GithubComKalshiExchangeInfraSvcApi2ModelGetMultivariateEventCollectionsResponse\n    \"\"\"\n\n    return (\n        await asyncio_detailed(\n            client=client,\n        )\n    ).parsed\n</code></pre>"},{"location":"api/collection/#kalshi_py.api.collection.get_multivariate_event_collections.sync_detailed","title":"<code>kalshi_py.api.collection.get_multivariate_event_collections.sync_detailed(*, client: Union[AuthenticatedClient, Client]) -&gt; Response[GithubComKalshiExchangeInfraSvcApi2ModelGetMultivariateEventCollectionsResponse]</code>","text":"<p>Get Multivariate Event Collections</p> <p>Endpoint for getting data about multivariate event collections.</p> <p>Raises:</p> Type Description <code>UnexpectedStatus</code> <p>If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.</p> <code>TimeoutException</code> <p>If the request takes longer than Client.timeout.</p> <p>Returns:</p> Type Description <code>Response[GithubComKalshiExchangeInfraSvcApi2ModelGetMultivariateEventCollectionsResponse]</code> <p>Response[GithubComKalshiExchangeInfraSvcApi2ModelGetMultivariateEventCollectionsResponse]</p> Source code in <code>kalshi_py/api/collection/get_multivariate_event_collections.py</code> <pre><code>def sync_detailed(\n    *,\n    client: Union[AuthenticatedClient, Client],\n) -&gt; Response[GithubComKalshiExchangeInfraSvcApi2ModelGetMultivariateEventCollectionsResponse]:\n    \"\"\"Get Multivariate Event Collections\n\n      Endpoint for getting data about multivariate event collections.\n\n    Raises:\n        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.\n        httpx.TimeoutException: If the request takes longer than Client.timeout.\n\n    Returns:\n        Response[GithubComKalshiExchangeInfraSvcApi2ModelGetMultivariateEventCollectionsResponse]\n    \"\"\"\n\n    kwargs = _get_kwargs()\n\n    response = client.get_httpx_client().request(\n        **kwargs,\n    )\n\n    return _build_response(client=client, response=response)\n</code></pre>"},{"location":"api/collection/#kalshi_py.api.collection.get_multivariate_event_collections.asyncio_detailed","title":"<code>kalshi_py.api.collection.get_multivariate_event_collections.asyncio_detailed(*, client: Union[AuthenticatedClient, Client]) -&gt; Response[GithubComKalshiExchangeInfraSvcApi2ModelGetMultivariateEventCollectionsResponse]</code>  <code>async</code>","text":"<p>Get Multivariate Event Collections</p> <p>Endpoint for getting data about multivariate event collections.</p> <p>Raises:</p> Type Description <code>UnexpectedStatus</code> <p>If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.</p> <code>TimeoutException</code> <p>If the request takes longer than Client.timeout.</p> <p>Returns:</p> Type Description <code>Response[GithubComKalshiExchangeInfraSvcApi2ModelGetMultivariateEventCollectionsResponse]</code> <p>Response[GithubComKalshiExchangeInfraSvcApi2ModelGetMultivariateEventCollectionsResponse]</p> Source code in <code>kalshi_py/api/collection/get_multivariate_event_collections.py</code> <pre><code>async def asyncio_detailed(\n    *,\n    client: Union[AuthenticatedClient, Client],\n) -&gt; Response[GithubComKalshiExchangeInfraSvcApi2ModelGetMultivariateEventCollectionsResponse]:\n    \"\"\"Get Multivariate Event Collections\n\n      Endpoint for getting data about multivariate event collections.\n\n    Raises:\n        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.\n        httpx.TimeoutException: If the request takes longer than Client.timeout.\n\n    Returns:\n        Response[GithubComKalshiExchangeInfraSvcApi2ModelGetMultivariateEventCollectionsResponse]\n    \"\"\"\n\n    kwargs = _get_kwargs()\n\n    response = await client.get_async_httpx_client().request(**kwargs)\n\n    return _build_response(client=client, response=response)\n</code></pre>"},{"location":"api/collection/#lookup-tickers-for-market-in-multivariate-event-collection","title":"Lookup Tickers For Market In Multivariate Event Collection","text":"<p>Synchronous API Call</p> <p>Asynchronous API Call</p> <p>Synchronous Detailed Response</p> <p>Asynchronous Detailed Response</p>"},{"location":"api/collection/#kalshi_py.api.collection.lookup_tickers_for_market_in_multivariate_event_collection.sync","title":"<code>kalshi_py.api.collection.lookup_tickers_for_market_in_multivariate_event_collection.sync(collection_ticker: str, *, client: Union[AuthenticatedClient, Client], body: GithubComKalshiExchangeInfraSvcApi2ModelLookupTickersForMarketInMultivariateEventCollectionRequest) -&gt; Optional[GithubComKalshiExchangeInfraSvcApi2ModelLookupTickersForMarketInMultivariateEventCollectionResponse]</code>","text":"<p>Lookup Tickers For Market In Multivariate Event Collection</p> <p>Endpoint for looking up an individual market in a multivariate event collection. If CreateMarketInMultivariateEventCollection has never been hit with that variable combination before, this will return a 404.</p> <p>Parameters:</p> Name Type Description Default <code>collection_ticker</code> <code>str</code> <p>Collection ticker</p> required <p>Raises:</p> Type Description <code>UnexpectedStatus</code> <p>If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.</p> <code>TimeoutException</code> <p>If the request takes longer than Client.timeout.</p> <p>Returns:</p> Type Description <code>Optional[GithubComKalshiExchangeInfraSvcApi2ModelLookupTickersForMarketInMultivariateEventCollectionResponse]</code> <p>GithubComKalshiExchangeInfraSvcApi2ModelLookupTickersForMarketInMultivariateEventCollectionResponse</p> Source code in <code>kalshi_py/api/collection/lookup_tickers_for_market_in_multivariate_event_collection.py</code> <pre><code>def sync(\n    collection_ticker: str,\n    *,\n    client: Union[AuthenticatedClient, Client],\n    body: GithubComKalshiExchangeInfraSvcApi2ModelLookupTickersForMarketInMultivariateEventCollectionRequest,\n) -&gt; Optional[GithubComKalshiExchangeInfraSvcApi2ModelLookupTickersForMarketInMultivariateEventCollectionResponse]:\n    \"\"\"Lookup Tickers For Market In Multivariate Event Collection\n\n      Endpoint for looking up an individual market in a multivariate event collection. If\n    CreateMarketInMultivariateEventCollection has never been hit with that variable combination before,\n    this will return a 404.\n\n    Args:\n        collection_ticker (str): Collection ticker\n        body (GithubComKalshiExchangeInfraSvcApi2ModelLookupTickersForMarketInMultivariateEventCol\n            lectionRequest):\n\n    Raises:\n        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.\n        httpx.TimeoutException: If the request takes longer than Client.timeout.\n\n    Returns:\n        GithubComKalshiExchangeInfraSvcApi2ModelLookupTickersForMarketInMultivariateEventCollectionResponse\n    \"\"\"\n\n    return sync_detailed(\n        collection_ticker=collection_ticker,\n        client=client,\n        body=body,\n    ).parsed\n</code></pre>"},{"location":"api/collection/#kalshi_py.api.collection.lookup_tickers_for_market_in_multivariate_event_collection.asyncio","title":"<code>kalshi_py.api.collection.lookup_tickers_for_market_in_multivariate_event_collection.asyncio(collection_ticker: str, *, client: Union[AuthenticatedClient, Client], body: GithubComKalshiExchangeInfraSvcApi2ModelLookupTickersForMarketInMultivariateEventCollectionRequest) -&gt; Optional[GithubComKalshiExchangeInfraSvcApi2ModelLookupTickersForMarketInMultivariateEventCollectionResponse]</code>  <code>async</code>","text":"<p>Lookup Tickers For Market In Multivariate Event Collection</p> <p>Endpoint for looking up an individual market in a multivariate event collection. If CreateMarketInMultivariateEventCollection has never been hit with that variable combination before, this will return a 404.</p> <p>Parameters:</p> Name Type Description Default <code>collection_ticker</code> <code>str</code> <p>Collection ticker</p> required <p>Raises:</p> Type Description <code>UnexpectedStatus</code> <p>If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.</p> <code>TimeoutException</code> <p>If the request takes longer than Client.timeout.</p> <p>Returns:</p> Type Description <code>Optional[GithubComKalshiExchangeInfraSvcApi2ModelLookupTickersForMarketInMultivariateEventCollectionResponse]</code> <p>GithubComKalshiExchangeInfraSvcApi2ModelLookupTickersForMarketInMultivariateEventCollectionResponse</p> Source code in <code>kalshi_py/api/collection/lookup_tickers_for_market_in_multivariate_event_collection.py</code> <pre><code>async def asyncio(\n    collection_ticker: str,\n    *,\n    client: Union[AuthenticatedClient, Client],\n    body: GithubComKalshiExchangeInfraSvcApi2ModelLookupTickersForMarketInMultivariateEventCollectionRequest,\n) -&gt; Optional[GithubComKalshiExchangeInfraSvcApi2ModelLookupTickersForMarketInMultivariateEventCollectionResponse]:\n    \"\"\"Lookup Tickers For Market In Multivariate Event Collection\n\n      Endpoint for looking up an individual market in a multivariate event collection. If\n    CreateMarketInMultivariateEventCollection has never been hit with that variable combination before,\n    this will return a 404.\n\n    Args:\n        collection_ticker (str): Collection ticker\n        body (GithubComKalshiExchangeInfraSvcApi2ModelLookupTickersForMarketInMultivariateEventCol\n            lectionRequest):\n\n    Raises:\n        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.\n        httpx.TimeoutException: If the request takes longer than Client.timeout.\n\n    Returns:\n        GithubComKalshiExchangeInfraSvcApi2ModelLookupTickersForMarketInMultivariateEventCollectionResponse\n    \"\"\"\n\n    return (\n        await asyncio_detailed(\n            collection_ticker=collection_ticker,\n            client=client,\n            body=body,\n        )\n    ).parsed\n</code></pre>"},{"location":"api/collection/#kalshi_py.api.collection.lookup_tickers_for_market_in_multivariate_event_collection.sync_detailed","title":"<code>kalshi_py.api.collection.lookup_tickers_for_market_in_multivariate_event_collection.sync_detailed(collection_ticker: str, *, client: Union[AuthenticatedClient, Client], body: GithubComKalshiExchangeInfraSvcApi2ModelLookupTickersForMarketInMultivariateEventCollectionRequest) -&gt; Response[GithubComKalshiExchangeInfraSvcApi2ModelLookupTickersForMarketInMultivariateEventCollectionResponse]</code>","text":"<p>Lookup Tickers For Market In Multivariate Event Collection</p> <p>Endpoint for looking up an individual market in a multivariate event collection. If CreateMarketInMultivariateEventCollection has never been hit with that variable combination before, this will return a 404.</p> <p>Parameters:</p> Name Type Description Default <code>collection_ticker</code> <code>str</code> <p>Collection ticker</p> required <p>Raises:</p> Type Description <code>UnexpectedStatus</code> <p>If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.</p> <code>TimeoutException</code> <p>If the request takes longer than Client.timeout.</p> <p>Returns:</p> Type Description <code>Response[GithubComKalshiExchangeInfraSvcApi2ModelLookupTickersForMarketInMultivariateEventCollectionResponse]</code> <p>Response[GithubComKalshiExchangeInfraSvcApi2ModelLookupTickersForMarketInMultivariateEventCollectionResponse]</p> Source code in <code>kalshi_py/api/collection/lookup_tickers_for_market_in_multivariate_event_collection.py</code> <pre><code>def sync_detailed(\n    collection_ticker: str,\n    *,\n    client: Union[AuthenticatedClient, Client],\n    body: GithubComKalshiExchangeInfraSvcApi2ModelLookupTickersForMarketInMultivariateEventCollectionRequest,\n) -&gt; Response[GithubComKalshiExchangeInfraSvcApi2ModelLookupTickersForMarketInMultivariateEventCollectionResponse]:\n    \"\"\"Lookup Tickers For Market In Multivariate Event Collection\n\n      Endpoint for looking up an individual market in a multivariate event collection. If\n    CreateMarketInMultivariateEventCollection has never been hit with that variable combination before,\n    this will return a 404.\n\n    Args:\n        collection_ticker (str): Collection ticker\n        body (GithubComKalshiExchangeInfraSvcApi2ModelLookupTickersForMarketInMultivariateEventCol\n            lectionRequest):\n\n    Raises:\n        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.\n        httpx.TimeoutException: If the request takes longer than Client.timeout.\n\n    Returns:\n        Response[GithubComKalshiExchangeInfraSvcApi2ModelLookupTickersForMarketInMultivariateEventCollectionResponse]\n    \"\"\"\n\n    kwargs = _get_kwargs(\n        collection_ticker=collection_ticker,\n        body=body,\n    )\n\n    response = client.get_httpx_client().request(\n        **kwargs,\n    )\n\n    return _build_response(client=client, response=response)\n</code></pre>"},{"location":"api/collection/#kalshi_py.api.collection.lookup_tickers_for_market_in_multivariate_event_collection.asyncio_detailed","title":"<code>kalshi_py.api.collection.lookup_tickers_for_market_in_multivariate_event_collection.asyncio_detailed(collection_ticker: str, *, client: Union[AuthenticatedClient, Client], body: GithubComKalshiExchangeInfraSvcApi2ModelLookupTickersForMarketInMultivariateEventCollectionRequest) -&gt; Response[GithubComKalshiExchangeInfraSvcApi2ModelLookupTickersForMarketInMultivariateEventCollectionResponse]</code>  <code>async</code>","text":"<p>Lookup Tickers For Market In Multivariate Event Collection</p> <p>Endpoint for looking up an individual market in a multivariate event collection. If CreateMarketInMultivariateEventCollection has never been hit with that variable combination before, this will return a 404.</p> <p>Parameters:</p> Name Type Description Default <code>collection_ticker</code> <code>str</code> <p>Collection ticker</p> required <p>Raises:</p> Type Description <code>UnexpectedStatus</code> <p>If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.</p> <code>TimeoutException</code> <p>If the request takes longer than Client.timeout.</p> <p>Returns:</p> Type Description <code>Response[GithubComKalshiExchangeInfraSvcApi2ModelLookupTickersForMarketInMultivariateEventCollectionResponse]</code> <p>Response[GithubComKalshiExchangeInfraSvcApi2ModelLookupTickersForMarketInMultivariateEventCollectionResponse]</p> Source code in <code>kalshi_py/api/collection/lookup_tickers_for_market_in_multivariate_event_collection.py</code> <pre><code>async def asyncio_detailed(\n    collection_ticker: str,\n    *,\n    client: Union[AuthenticatedClient, Client],\n    body: GithubComKalshiExchangeInfraSvcApi2ModelLookupTickersForMarketInMultivariateEventCollectionRequest,\n) -&gt; Response[GithubComKalshiExchangeInfraSvcApi2ModelLookupTickersForMarketInMultivariateEventCollectionResponse]:\n    \"\"\"Lookup Tickers For Market In Multivariate Event Collection\n\n      Endpoint for looking up an individual market in a multivariate event collection. If\n    CreateMarketInMultivariateEventCollection has never been hit with that variable combination before,\n    this will return a 404.\n\n    Args:\n        collection_ticker (str): Collection ticker\n        body (GithubComKalshiExchangeInfraSvcApi2ModelLookupTickersForMarketInMultivariateEventCol\n            lectionRequest):\n\n    Raises:\n        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.\n        httpx.TimeoutException: If the request takes longer than Client.timeout.\n\n    Returns:\n        Response[GithubComKalshiExchangeInfraSvcApi2ModelLookupTickersForMarketInMultivariateEventCollectionResponse]\n    \"\"\"\n\n    kwargs = _get_kwargs(\n        collection_ticker=collection_ticker,\n        body=body,\n    )\n\n    response = await client.get_async_httpx_client().request(**kwargs)\n\n    return _build_response(client=client, response=response)\n</code></pre>"},{"location":"api/communications/","title":"Communications API Reference","text":""},{"location":"api/communications/#endpoints","title":"Endpoints","text":""},{"location":"api/communications/#accept-quote","title":"Accept Quote","text":"<p>Synchronous Detailed Response</p> <p>Asynchronous Detailed Response</p>"},{"location":"api/communications/#kalshi_py.api.communications.accept_quote.sync_detailed","title":"<code>kalshi_py.api.communications.accept_quote.sync_detailed(quote_id: str, *, client: Union[AuthenticatedClient, Client], body: GithubComKalshiExchangeInfraSvcApi2ModelAcceptQuoteRequest) -&gt; Response[Any]</code>","text":"<p>Accept Quote</p> <p>Endpoint for accepting a quote. This will require the quoter to confirm</p> <p>Parameters:</p> Name Type Description Default <code>quote_id</code> <code>str</code> <p>Quote ID</p> required <code>body</code> <code>GithubComKalshiExchangeInfraSvcApi2ModelAcceptQuoteRequest</code> required <p>Raises:</p> Type Description <code>UnexpectedStatus</code> <p>If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.</p> <code>TimeoutException</code> <p>If the request takes longer than Client.timeout.</p> <p>Returns:</p> Type Description <code>Response[Any]</code> <p>Response[Any]</p> Source code in <code>kalshi_py/api/communications/accept_quote.py</code> <pre><code>def sync_detailed(\n    quote_id: str,\n    *,\n    client: Union[AuthenticatedClient, Client],\n    body: GithubComKalshiExchangeInfraSvcApi2ModelAcceptQuoteRequest,\n) -&gt; Response[Any]:\n    \"\"\"Accept Quote\n\n      Endpoint for accepting a quote. This will require the quoter to confirm\n\n    Args:\n        quote_id (str): Quote ID\n        body (GithubComKalshiExchangeInfraSvcApi2ModelAcceptQuoteRequest):\n\n    Raises:\n        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.\n        httpx.TimeoutException: If the request takes longer than Client.timeout.\n\n    Returns:\n        Response[Any]\n    \"\"\"\n\n    kwargs = _get_kwargs(\n        quote_id=quote_id,\n        body=body,\n    )\n\n    response = client.get_httpx_client().request(\n        **kwargs,\n    )\n\n    return _build_response(client=client, response=response)\n</code></pre>"},{"location":"api/communications/#kalshi_py.api.communications.accept_quote.asyncio_detailed","title":"<code>kalshi_py.api.communications.accept_quote.asyncio_detailed(quote_id: str, *, client: Union[AuthenticatedClient, Client], body: GithubComKalshiExchangeInfraSvcApi2ModelAcceptQuoteRequest) -&gt; Response[Any]</code>  <code>async</code>","text":"<p>Accept Quote</p> <p>Endpoint for accepting a quote. This will require the quoter to confirm</p> <p>Parameters:</p> Name Type Description Default <code>quote_id</code> <code>str</code> <p>Quote ID</p> required <code>body</code> <code>GithubComKalshiExchangeInfraSvcApi2ModelAcceptQuoteRequest</code> required <p>Raises:</p> Type Description <code>UnexpectedStatus</code> <p>If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.</p> <code>TimeoutException</code> <p>If the request takes longer than Client.timeout.</p> <p>Returns:</p> Type Description <code>Response[Any]</code> <p>Response[Any]</p> Source code in <code>kalshi_py/api/communications/accept_quote.py</code> <pre><code>async def asyncio_detailed(\n    quote_id: str,\n    *,\n    client: Union[AuthenticatedClient, Client],\n    body: GithubComKalshiExchangeInfraSvcApi2ModelAcceptQuoteRequest,\n) -&gt; Response[Any]:\n    \"\"\"Accept Quote\n\n      Endpoint for accepting a quote. This will require the quoter to confirm\n\n    Args:\n        quote_id (str): Quote ID\n        body (GithubComKalshiExchangeInfraSvcApi2ModelAcceptQuoteRequest):\n\n    Raises:\n        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.\n        httpx.TimeoutException: If the request takes longer than Client.timeout.\n\n    Returns:\n        Response[Any]\n    \"\"\"\n\n    kwargs = _get_kwargs(\n        quote_id=quote_id,\n        body=body,\n    )\n\n    response = await client.get_async_httpx_client().request(**kwargs)\n\n    return _build_response(client=client, response=response)\n</code></pre>"},{"location":"api/communications/#confirm-quote","title":"Confirm Quote","text":"<p>Synchronous Detailed Response</p> <p>Asynchronous Detailed Response</p>"},{"location":"api/communications/#kalshi_py.api.communications.confirm_quote.sync_detailed","title":"<code>kalshi_py.api.communications.confirm_quote.sync_detailed(quote_id: str, *, client: Union[AuthenticatedClient, Client]) -&gt; Response[Any]</code>","text":"<p>Confirm Quote</p> <p>Endpoint for confirming a quote. This will start a timer for order execution</p> <p>Parameters:</p> Name Type Description Default <code>quote_id</code> <code>str</code> <p>Quote ID</p> required <p>Raises:</p> Type Description <code>UnexpectedStatus</code> <p>If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.</p> <code>TimeoutException</code> <p>If the request takes longer than Client.timeout.</p> <p>Returns:</p> Type Description <code>Response[Any]</code> <p>Response[Any]</p> Source code in <code>kalshi_py/api/communications/confirm_quote.py</code> <pre><code>def sync_detailed(\n    quote_id: str,\n    *,\n    client: Union[AuthenticatedClient, Client],\n) -&gt; Response[Any]:\n    \"\"\"Confirm Quote\n\n      Endpoint for confirming a quote. This will start a timer for order execution\n\n    Args:\n        quote_id (str): Quote ID\n\n    Raises:\n        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.\n        httpx.TimeoutException: If the request takes longer than Client.timeout.\n\n    Returns:\n        Response[Any]\n    \"\"\"\n\n    kwargs = _get_kwargs(\n        quote_id=quote_id,\n    )\n\n    response = client.get_httpx_client().request(\n        **kwargs,\n    )\n\n    return _build_response(client=client, response=response)\n</code></pre>"},{"location":"api/communications/#kalshi_py.api.communications.confirm_quote.asyncio_detailed","title":"<code>kalshi_py.api.communications.confirm_quote.asyncio_detailed(quote_id: str, *, client: Union[AuthenticatedClient, Client]) -&gt; Response[Any]</code>  <code>async</code>","text":"<p>Confirm Quote</p> <p>Endpoint for confirming a quote. This will start a timer for order execution</p> <p>Parameters:</p> Name Type Description Default <code>quote_id</code> <code>str</code> <p>Quote ID</p> required <p>Raises:</p> Type Description <code>UnexpectedStatus</code> <p>If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.</p> <code>TimeoutException</code> <p>If the request takes longer than Client.timeout.</p> <p>Returns:</p> Type Description <code>Response[Any]</code> <p>Response[Any]</p> Source code in <code>kalshi_py/api/communications/confirm_quote.py</code> <pre><code>async def asyncio_detailed(\n    quote_id: str,\n    *,\n    client: Union[AuthenticatedClient, Client],\n) -&gt; Response[Any]:\n    \"\"\"Confirm Quote\n\n      Endpoint for confirming a quote. This will start a timer for order execution\n\n    Args:\n        quote_id (str): Quote ID\n\n    Raises:\n        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.\n        httpx.TimeoutException: If the request takes longer than Client.timeout.\n\n    Returns:\n        Response[Any]\n    \"\"\"\n\n    kwargs = _get_kwargs(\n        quote_id=quote_id,\n    )\n\n    response = await client.get_async_httpx_client().request(**kwargs)\n\n    return _build_response(client=client, response=response)\n</code></pre>"},{"location":"api/communications/#create-quote","title":"Create Quote","text":"<p>Synchronous API Call</p> <p>Asynchronous API Call</p> <p>Synchronous Detailed Response</p> <p>Asynchronous Detailed Response</p>"},{"location":"api/communications/#kalshi_py.api.communications.create_quote.sync","title":"<code>kalshi_py.api.communications.create_quote.sync(*, client: Union[AuthenticatedClient, Client], body: GithubComKalshiExchangeInfraSvcApi2ModelCreateQuoteRequest) -&gt; Optional[GithubComKalshiExchangeInfraSvcApi2ModelCreateQuoteResponse]</code>","text":"<p>Create Quote</p> <p>Endpoint for creating a quote in response to an RFQ</p> <p>Parameters:</p> Name Type Description Default <code>body</code> <code>GithubComKalshiExchangeInfraSvcApi2ModelCreateQuoteRequest</code> required <p>Raises:</p> Type Description <code>UnexpectedStatus</code> <p>If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.</p> <code>TimeoutException</code> <p>If the request takes longer than Client.timeout.</p> <p>Returns:</p> Type Description <code>Optional[GithubComKalshiExchangeInfraSvcApi2ModelCreateQuoteResponse]</code> <p>GithubComKalshiExchangeInfraSvcApi2ModelCreateQuoteResponse</p> Source code in <code>kalshi_py/api/communications/create_quote.py</code> <pre><code>def sync(\n    *,\n    client: Union[AuthenticatedClient, Client],\n    body: GithubComKalshiExchangeInfraSvcApi2ModelCreateQuoteRequest,\n) -&gt; Optional[GithubComKalshiExchangeInfraSvcApi2ModelCreateQuoteResponse]:\n    \"\"\"Create Quote\n\n      Endpoint for creating a quote in response to an RFQ\n\n    Args:\n        body (GithubComKalshiExchangeInfraSvcApi2ModelCreateQuoteRequest):\n\n    Raises:\n        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.\n        httpx.TimeoutException: If the request takes longer than Client.timeout.\n\n    Returns:\n        GithubComKalshiExchangeInfraSvcApi2ModelCreateQuoteResponse\n    \"\"\"\n\n    return sync_detailed(\n        client=client,\n        body=body,\n    ).parsed\n</code></pre>"},{"location":"api/communications/#kalshi_py.api.communications.create_quote.asyncio","title":"<code>kalshi_py.api.communications.create_quote.asyncio(*, client: Union[AuthenticatedClient, Client], body: GithubComKalshiExchangeInfraSvcApi2ModelCreateQuoteRequest) -&gt; Optional[GithubComKalshiExchangeInfraSvcApi2ModelCreateQuoteResponse]</code>  <code>async</code>","text":"<p>Create Quote</p> <p>Endpoint for creating a quote in response to an RFQ</p> <p>Parameters:</p> Name Type Description Default <code>body</code> <code>GithubComKalshiExchangeInfraSvcApi2ModelCreateQuoteRequest</code> required <p>Raises:</p> Type Description <code>UnexpectedStatus</code> <p>If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.</p> <code>TimeoutException</code> <p>If the request takes longer than Client.timeout.</p> <p>Returns:</p> Type Description <code>Optional[GithubComKalshiExchangeInfraSvcApi2ModelCreateQuoteResponse]</code> <p>GithubComKalshiExchangeInfraSvcApi2ModelCreateQuoteResponse</p> Source code in <code>kalshi_py/api/communications/create_quote.py</code> <pre><code>async def asyncio(\n    *,\n    client: Union[AuthenticatedClient, Client],\n    body: GithubComKalshiExchangeInfraSvcApi2ModelCreateQuoteRequest,\n) -&gt; Optional[GithubComKalshiExchangeInfraSvcApi2ModelCreateQuoteResponse]:\n    \"\"\"Create Quote\n\n      Endpoint for creating a quote in response to an RFQ\n\n    Args:\n        body (GithubComKalshiExchangeInfraSvcApi2ModelCreateQuoteRequest):\n\n    Raises:\n        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.\n        httpx.TimeoutException: If the request takes longer than Client.timeout.\n\n    Returns:\n        GithubComKalshiExchangeInfraSvcApi2ModelCreateQuoteResponse\n    \"\"\"\n\n    return (\n        await asyncio_detailed(\n            client=client,\n            body=body,\n        )\n    ).parsed\n</code></pre>"},{"location":"api/communications/#kalshi_py.api.communications.create_quote.sync_detailed","title":"<code>kalshi_py.api.communications.create_quote.sync_detailed(*, client: Union[AuthenticatedClient, Client], body: GithubComKalshiExchangeInfraSvcApi2ModelCreateQuoteRequest) -&gt; Response[GithubComKalshiExchangeInfraSvcApi2ModelCreateQuoteResponse]</code>","text":"<p>Create Quote</p> <p>Endpoint for creating a quote in response to an RFQ</p> <p>Parameters:</p> Name Type Description Default <code>body</code> <code>GithubComKalshiExchangeInfraSvcApi2ModelCreateQuoteRequest</code> required <p>Raises:</p> Type Description <code>UnexpectedStatus</code> <p>If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.</p> <code>TimeoutException</code> <p>If the request takes longer than Client.timeout.</p> <p>Returns:</p> Type Description <code>Response[GithubComKalshiExchangeInfraSvcApi2ModelCreateQuoteResponse]</code> <p>Response[GithubComKalshiExchangeInfraSvcApi2ModelCreateQuoteResponse]</p> Source code in <code>kalshi_py/api/communications/create_quote.py</code> <pre><code>def sync_detailed(\n    *,\n    client: Union[AuthenticatedClient, Client],\n    body: GithubComKalshiExchangeInfraSvcApi2ModelCreateQuoteRequest,\n) -&gt; Response[GithubComKalshiExchangeInfraSvcApi2ModelCreateQuoteResponse]:\n    \"\"\"Create Quote\n\n      Endpoint for creating a quote in response to an RFQ\n\n    Args:\n        body (GithubComKalshiExchangeInfraSvcApi2ModelCreateQuoteRequest):\n\n    Raises:\n        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.\n        httpx.TimeoutException: If the request takes longer than Client.timeout.\n\n    Returns:\n        Response[GithubComKalshiExchangeInfraSvcApi2ModelCreateQuoteResponse]\n    \"\"\"\n\n    kwargs = _get_kwargs(\n        body=body,\n    )\n\n    response = client.get_httpx_client().request(\n        **kwargs,\n    )\n\n    return _build_response(client=client, response=response)\n</code></pre>"},{"location":"api/communications/#kalshi_py.api.communications.create_quote.asyncio_detailed","title":"<code>kalshi_py.api.communications.create_quote.asyncio_detailed(*, client: Union[AuthenticatedClient, Client], body: GithubComKalshiExchangeInfraSvcApi2ModelCreateQuoteRequest) -&gt; Response[GithubComKalshiExchangeInfraSvcApi2ModelCreateQuoteResponse]</code>  <code>async</code>","text":"<p>Create Quote</p> <p>Endpoint for creating a quote in response to an RFQ</p> <p>Parameters:</p> Name Type Description Default <code>body</code> <code>GithubComKalshiExchangeInfraSvcApi2ModelCreateQuoteRequest</code> required <p>Raises:</p> Type Description <code>UnexpectedStatus</code> <p>If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.</p> <code>TimeoutException</code> <p>If the request takes longer than Client.timeout.</p> <p>Returns:</p> Type Description <code>Response[GithubComKalshiExchangeInfraSvcApi2ModelCreateQuoteResponse]</code> <p>Response[GithubComKalshiExchangeInfraSvcApi2ModelCreateQuoteResponse]</p> Source code in <code>kalshi_py/api/communications/create_quote.py</code> <pre><code>async def asyncio_detailed(\n    *,\n    client: Union[AuthenticatedClient, Client],\n    body: GithubComKalshiExchangeInfraSvcApi2ModelCreateQuoteRequest,\n) -&gt; Response[GithubComKalshiExchangeInfraSvcApi2ModelCreateQuoteResponse]:\n    \"\"\"Create Quote\n\n      Endpoint for creating a quote in response to an RFQ\n\n    Args:\n        body (GithubComKalshiExchangeInfraSvcApi2ModelCreateQuoteRequest):\n\n    Raises:\n        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.\n        httpx.TimeoutException: If the request takes longer than Client.timeout.\n\n    Returns:\n        Response[GithubComKalshiExchangeInfraSvcApi2ModelCreateQuoteResponse]\n    \"\"\"\n\n    kwargs = _get_kwargs(\n        body=body,\n    )\n\n    response = await client.get_async_httpx_client().request(**kwargs)\n\n    return _build_response(client=client, response=response)\n</code></pre>"},{"location":"api/communications/#create-rfq","title":"Create Rfq","text":"<p>Synchronous API Call</p> <p>Asynchronous API Call</p> <p>Synchronous Detailed Response</p> <p>Asynchronous Detailed Response</p>"},{"location":"api/communications/#kalshi_py.api.communications.create_rfq.sync","title":"<code>kalshi_py.api.communications.create_rfq.sync(*, client: Union[AuthenticatedClient, Client], body: GithubComKalshiExchangeInfraSvcApi2ModelCreateRFQRequest) -&gt; Optional[GithubComKalshiExchangeInfraSvcApi2ModelCreateRFQResponse]</code>","text":"<p>Create RFQ</p> <p>Endpoint for creating a new RFQ</p> <p>Parameters:</p> Name Type Description Default <code>body</code> <code>GithubComKalshiExchangeInfraSvcApi2ModelCreateRFQRequest</code> required <p>Raises:</p> Type Description <code>UnexpectedStatus</code> <p>If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.</p> <code>TimeoutException</code> <p>If the request takes longer than Client.timeout.</p> <p>Returns:</p> Type Description <code>Optional[GithubComKalshiExchangeInfraSvcApi2ModelCreateRFQResponse]</code> <p>GithubComKalshiExchangeInfraSvcApi2ModelCreateRFQResponse</p> Source code in <code>kalshi_py/api/communications/create_rfq.py</code> <pre><code>def sync(\n    *,\n    client: Union[AuthenticatedClient, Client],\n    body: GithubComKalshiExchangeInfraSvcApi2ModelCreateRFQRequest,\n) -&gt; Optional[GithubComKalshiExchangeInfraSvcApi2ModelCreateRFQResponse]:\n    \"\"\"Create RFQ\n\n      Endpoint for creating a new RFQ\n\n    Args:\n        body (GithubComKalshiExchangeInfraSvcApi2ModelCreateRFQRequest):\n\n    Raises:\n        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.\n        httpx.TimeoutException: If the request takes longer than Client.timeout.\n\n    Returns:\n        GithubComKalshiExchangeInfraSvcApi2ModelCreateRFQResponse\n    \"\"\"\n\n    return sync_detailed(\n        client=client,\n        body=body,\n    ).parsed\n</code></pre>"},{"location":"api/communications/#kalshi_py.api.communications.create_rfq.asyncio","title":"<code>kalshi_py.api.communications.create_rfq.asyncio(*, client: Union[AuthenticatedClient, Client], body: GithubComKalshiExchangeInfraSvcApi2ModelCreateRFQRequest) -&gt; Optional[GithubComKalshiExchangeInfraSvcApi2ModelCreateRFQResponse]</code>  <code>async</code>","text":"<p>Create RFQ</p> <p>Endpoint for creating a new RFQ</p> <p>Parameters:</p> Name Type Description Default <code>body</code> <code>GithubComKalshiExchangeInfraSvcApi2ModelCreateRFQRequest</code> required <p>Raises:</p> Type Description <code>UnexpectedStatus</code> <p>If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.</p> <code>TimeoutException</code> <p>If the request takes longer than Client.timeout.</p> <p>Returns:</p> Type Description <code>Optional[GithubComKalshiExchangeInfraSvcApi2ModelCreateRFQResponse]</code> <p>GithubComKalshiExchangeInfraSvcApi2ModelCreateRFQResponse</p> Source code in <code>kalshi_py/api/communications/create_rfq.py</code> <pre><code>async def asyncio(\n    *,\n    client: Union[AuthenticatedClient, Client],\n    body: GithubComKalshiExchangeInfraSvcApi2ModelCreateRFQRequest,\n) -&gt; Optional[GithubComKalshiExchangeInfraSvcApi2ModelCreateRFQResponse]:\n    \"\"\"Create RFQ\n\n      Endpoint for creating a new RFQ\n\n    Args:\n        body (GithubComKalshiExchangeInfraSvcApi2ModelCreateRFQRequest):\n\n    Raises:\n        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.\n        httpx.TimeoutException: If the request takes longer than Client.timeout.\n\n    Returns:\n        GithubComKalshiExchangeInfraSvcApi2ModelCreateRFQResponse\n    \"\"\"\n\n    return (\n        await asyncio_detailed(\n            client=client,\n            body=body,\n        )\n    ).parsed\n</code></pre>"},{"location":"api/communications/#kalshi_py.api.communications.create_rfq.sync_detailed","title":"<code>kalshi_py.api.communications.create_rfq.sync_detailed(*, client: Union[AuthenticatedClient, Client], body: GithubComKalshiExchangeInfraSvcApi2ModelCreateRFQRequest) -&gt; Response[GithubComKalshiExchangeInfraSvcApi2ModelCreateRFQResponse]</code>","text":"<p>Create RFQ</p> <p>Endpoint for creating a new RFQ</p> <p>Parameters:</p> Name Type Description Default <code>body</code> <code>GithubComKalshiExchangeInfraSvcApi2ModelCreateRFQRequest</code> required <p>Raises:</p> Type Description <code>UnexpectedStatus</code> <p>If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.</p> <code>TimeoutException</code> <p>If the request takes longer than Client.timeout.</p> <p>Returns:</p> Type Description <code>Response[GithubComKalshiExchangeInfraSvcApi2ModelCreateRFQResponse]</code> <p>Response[GithubComKalshiExchangeInfraSvcApi2ModelCreateRFQResponse]</p> Source code in <code>kalshi_py/api/communications/create_rfq.py</code> <pre><code>def sync_detailed(\n    *,\n    client: Union[AuthenticatedClient, Client],\n    body: GithubComKalshiExchangeInfraSvcApi2ModelCreateRFQRequest,\n) -&gt; Response[GithubComKalshiExchangeInfraSvcApi2ModelCreateRFQResponse]:\n    \"\"\"Create RFQ\n\n      Endpoint for creating a new RFQ\n\n    Args:\n        body (GithubComKalshiExchangeInfraSvcApi2ModelCreateRFQRequest):\n\n    Raises:\n        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.\n        httpx.TimeoutException: If the request takes longer than Client.timeout.\n\n    Returns:\n        Response[GithubComKalshiExchangeInfraSvcApi2ModelCreateRFQResponse]\n    \"\"\"\n\n    kwargs = _get_kwargs(\n        body=body,\n    )\n\n    response = client.get_httpx_client().request(\n        **kwargs,\n    )\n\n    return _build_response(client=client, response=response)\n</code></pre>"},{"location":"api/communications/#kalshi_py.api.communications.create_rfq.asyncio_detailed","title":"<code>kalshi_py.api.communications.create_rfq.asyncio_detailed(*, client: Union[AuthenticatedClient, Client], body: GithubComKalshiExchangeInfraSvcApi2ModelCreateRFQRequest) -&gt; Response[GithubComKalshiExchangeInfraSvcApi2ModelCreateRFQResponse]</code>  <code>async</code>","text":"<p>Create RFQ</p> <p>Endpoint for creating a new RFQ</p> <p>Parameters:</p> Name Type Description Default <code>body</code> <code>GithubComKalshiExchangeInfraSvcApi2ModelCreateRFQRequest</code> required <p>Raises:</p> Type Description <code>UnexpectedStatus</code> <p>If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.</p> <code>TimeoutException</code> <p>If the request takes longer than Client.timeout.</p> <p>Returns:</p> Type Description <code>Response[GithubComKalshiExchangeInfraSvcApi2ModelCreateRFQResponse]</code> <p>Response[GithubComKalshiExchangeInfraSvcApi2ModelCreateRFQResponse]</p> Source code in <code>kalshi_py/api/communications/create_rfq.py</code> <pre><code>async def asyncio_detailed(\n    *,\n    client: Union[AuthenticatedClient, Client],\n    body: GithubComKalshiExchangeInfraSvcApi2ModelCreateRFQRequest,\n) -&gt; Response[GithubComKalshiExchangeInfraSvcApi2ModelCreateRFQResponse]:\n    \"\"\"Create RFQ\n\n      Endpoint for creating a new RFQ\n\n    Args:\n        body (GithubComKalshiExchangeInfraSvcApi2ModelCreateRFQRequest):\n\n    Raises:\n        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.\n        httpx.TimeoutException: If the request takes longer than Client.timeout.\n\n    Returns:\n        Response[GithubComKalshiExchangeInfraSvcApi2ModelCreateRFQResponse]\n    \"\"\"\n\n    kwargs = _get_kwargs(\n        body=body,\n    )\n\n    response = await client.get_async_httpx_client().request(**kwargs)\n\n    return _build_response(client=client, response=response)\n</code></pre>"},{"location":"api/communications/#delete-quote","title":"Delete Quote","text":"<p>Synchronous Detailed Response</p> <p>Asynchronous Detailed Response</p>"},{"location":"api/communications/#kalshi_py.api.communications.delete_quote.sync_detailed","title":"<code>kalshi_py.api.communications.delete_quote.sync_detailed(quote_id: str, *, client: Union[AuthenticatedClient, Client]) -&gt; Response[Any]</code>","text":"<p>Delete Quote</p> <p>Endpoint for deleting a quote, which means it can no longer be accepted.</p> <p>Parameters:</p> Name Type Description Default <code>quote_id</code> <code>str</code> <p>Quote ID</p> required <p>Raises:</p> Type Description <code>UnexpectedStatus</code> <p>If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.</p> <code>TimeoutException</code> <p>If the request takes longer than Client.timeout.</p> <p>Returns:</p> Type Description <code>Response[Any]</code> <p>Response[Any]</p> Source code in <code>kalshi_py/api/communications/delete_quote.py</code> <pre><code>def sync_detailed(\n    quote_id: str,\n    *,\n    client: Union[AuthenticatedClient, Client],\n) -&gt; Response[Any]:\n    \"\"\"Delete Quote\n\n      Endpoint for deleting a quote, which means it can no longer be accepted.\n\n    Args:\n        quote_id (str): Quote ID\n\n    Raises:\n        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.\n        httpx.TimeoutException: If the request takes longer than Client.timeout.\n\n    Returns:\n        Response[Any]\n    \"\"\"\n\n    kwargs = _get_kwargs(\n        quote_id=quote_id,\n    )\n\n    response = client.get_httpx_client().request(\n        **kwargs,\n    )\n\n    return _build_response(client=client, response=response)\n</code></pre>"},{"location":"api/communications/#kalshi_py.api.communications.delete_quote.asyncio_detailed","title":"<code>kalshi_py.api.communications.delete_quote.asyncio_detailed(quote_id: str, *, client: Union[AuthenticatedClient, Client]) -&gt; Response[Any]</code>  <code>async</code>","text":"<p>Delete Quote</p> <p>Endpoint for deleting a quote, which means it can no longer be accepted.</p> <p>Parameters:</p> Name Type Description Default <code>quote_id</code> <code>str</code> <p>Quote ID</p> required <p>Raises:</p> Type Description <code>UnexpectedStatus</code> <p>If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.</p> <code>TimeoutException</code> <p>If the request takes longer than Client.timeout.</p> <p>Returns:</p> Type Description <code>Response[Any]</code> <p>Response[Any]</p> Source code in <code>kalshi_py/api/communications/delete_quote.py</code> <pre><code>async def asyncio_detailed(\n    quote_id: str,\n    *,\n    client: Union[AuthenticatedClient, Client],\n) -&gt; Response[Any]:\n    \"\"\"Delete Quote\n\n      Endpoint for deleting a quote, which means it can no longer be accepted.\n\n    Args:\n        quote_id (str): Quote ID\n\n    Raises:\n        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.\n        httpx.TimeoutException: If the request takes longer than Client.timeout.\n\n    Returns:\n        Response[Any]\n    \"\"\"\n\n    kwargs = _get_kwargs(\n        quote_id=quote_id,\n    )\n\n    response = await client.get_async_httpx_client().request(**kwargs)\n\n    return _build_response(client=client, response=response)\n</code></pre>"},{"location":"api/communications/#delete-rfq","title":"Delete Rfq","text":"<p>Synchronous Detailed Response</p> <p>Asynchronous Detailed Response</p>"},{"location":"api/communications/#kalshi_py.api.communications.delete_rfq.sync_detailed","title":"<code>kalshi_py.api.communications.delete_rfq.sync_detailed(rfq_id: str, *, client: Union[AuthenticatedClient, Client]) -&gt; Response[Any]</code>","text":"<p>Delete RFQ</p> <p>Endpoint for deleting an RFQ by ID</p> <p>Parameters:</p> Name Type Description Default <code>rfq_id</code> <code>str</code> <p>RFQ ID</p> required <p>Raises:</p> Type Description <code>UnexpectedStatus</code> <p>If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.</p> <code>TimeoutException</code> <p>If the request takes longer than Client.timeout.</p> <p>Returns:</p> Type Description <code>Response[Any]</code> <p>Response[Any]</p> Source code in <code>kalshi_py/api/communications/delete_rfq.py</code> <pre><code>def sync_detailed(\n    rfq_id: str,\n    *,\n    client: Union[AuthenticatedClient, Client],\n) -&gt; Response[Any]:\n    \"\"\"Delete RFQ\n\n      Endpoint for deleting an RFQ by ID\n\n    Args:\n        rfq_id (str): RFQ ID\n\n    Raises:\n        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.\n        httpx.TimeoutException: If the request takes longer than Client.timeout.\n\n    Returns:\n        Response[Any]\n    \"\"\"\n\n    kwargs = _get_kwargs(\n        rfq_id=rfq_id,\n    )\n\n    response = client.get_httpx_client().request(\n        **kwargs,\n    )\n\n    return _build_response(client=client, response=response)\n</code></pre>"},{"location":"api/communications/#kalshi_py.api.communications.delete_rfq.asyncio_detailed","title":"<code>kalshi_py.api.communications.delete_rfq.asyncio_detailed(rfq_id: str, *, client: Union[AuthenticatedClient, Client]) -&gt; Response[Any]</code>  <code>async</code>","text":"<p>Delete RFQ</p> <p>Endpoint for deleting an RFQ by ID</p> <p>Parameters:</p> Name Type Description Default <code>rfq_id</code> <code>str</code> <p>RFQ ID</p> required <p>Raises:</p> Type Description <code>UnexpectedStatus</code> <p>If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.</p> <code>TimeoutException</code> <p>If the request takes longer than Client.timeout.</p> <p>Returns:</p> Type Description <code>Response[Any]</code> <p>Response[Any]</p> Source code in <code>kalshi_py/api/communications/delete_rfq.py</code> <pre><code>async def asyncio_detailed(\n    rfq_id: str,\n    *,\n    client: Union[AuthenticatedClient, Client],\n) -&gt; Response[Any]:\n    \"\"\"Delete RFQ\n\n      Endpoint for deleting an RFQ by ID\n\n    Args:\n        rfq_id (str): RFQ ID\n\n    Raises:\n        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.\n        httpx.TimeoutException: If the request takes longer than Client.timeout.\n\n    Returns:\n        Response[Any]\n    \"\"\"\n\n    kwargs = _get_kwargs(\n        rfq_id=rfq_id,\n    )\n\n    response = await client.get_async_httpx_client().request(**kwargs)\n\n    return _build_response(client=client, response=response)\n</code></pre>"},{"location":"api/communications/#get-communications-id","title":"Get Communications Id","text":"<p>Synchronous API Call</p> <p>Asynchronous API Call</p> <p>Synchronous Detailed Response</p> <p>Asynchronous Detailed Response</p>"},{"location":"api/communications/#kalshi_py.api.communications.get_communications_id.sync","title":"<code>kalshi_py.api.communications.get_communications_id.sync(*, client: Union[AuthenticatedClient, Client]) -&gt; Optional[GithubComKalshiExchangeInfraSvcApi2ModelGetCommunicationsIDResponse]</code>","text":"<p>Get Communications ID</p> <p>Endpoint for getting the communications ID of the logged-in user.</p> <p>Raises:</p> Type Description <code>UnexpectedStatus</code> <p>If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.</p> <code>TimeoutException</code> <p>If the request takes longer than Client.timeout.</p> <p>Returns:</p> Type Description <code>Optional[GithubComKalshiExchangeInfraSvcApi2ModelGetCommunicationsIDResponse]</code> <p>GithubComKalshiExchangeInfraSvcApi2ModelGetCommunicationsIDResponse</p> Source code in <code>kalshi_py/api/communications/get_communications_id.py</code> <pre><code>def sync(\n    *,\n    client: Union[AuthenticatedClient, Client],\n) -&gt; Optional[GithubComKalshiExchangeInfraSvcApi2ModelGetCommunicationsIDResponse]:\n    \"\"\"Get Communications ID\n\n      Endpoint for getting the communications ID of the logged-in user.\n\n    Raises:\n        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.\n        httpx.TimeoutException: If the request takes longer than Client.timeout.\n\n    Returns:\n        GithubComKalshiExchangeInfraSvcApi2ModelGetCommunicationsIDResponse\n    \"\"\"\n\n    return sync_detailed(\n        client=client,\n    ).parsed\n</code></pre>"},{"location":"api/communications/#kalshi_py.api.communications.get_communications_id.asyncio","title":"<code>kalshi_py.api.communications.get_communications_id.asyncio(*, client: Union[AuthenticatedClient, Client]) -&gt; Optional[GithubComKalshiExchangeInfraSvcApi2ModelGetCommunicationsIDResponse]</code>  <code>async</code>","text":"<p>Get Communications ID</p> <p>Endpoint for getting the communications ID of the logged-in user.</p> <p>Raises:</p> Type Description <code>UnexpectedStatus</code> <p>If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.</p> <code>TimeoutException</code> <p>If the request takes longer than Client.timeout.</p> <p>Returns:</p> Type Description <code>Optional[GithubComKalshiExchangeInfraSvcApi2ModelGetCommunicationsIDResponse]</code> <p>GithubComKalshiExchangeInfraSvcApi2ModelGetCommunicationsIDResponse</p> Source code in <code>kalshi_py/api/communications/get_communications_id.py</code> <pre><code>async def asyncio(\n    *,\n    client: Union[AuthenticatedClient, Client],\n) -&gt; Optional[GithubComKalshiExchangeInfraSvcApi2ModelGetCommunicationsIDResponse]:\n    \"\"\"Get Communications ID\n\n      Endpoint for getting the communications ID of the logged-in user.\n\n    Raises:\n        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.\n        httpx.TimeoutException: If the request takes longer than Client.timeout.\n\n    Returns:\n        GithubComKalshiExchangeInfraSvcApi2ModelGetCommunicationsIDResponse\n    \"\"\"\n\n    return (\n        await asyncio_detailed(\n            client=client,\n        )\n    ).parsed\n</code></pre>"},{"location":"api/communications/#kalshi_py.api.communications.get_communications_id.sync_detailed","title":"<code>kalshi_py.api.communications.get_communications_id.sync_detailed(*, client: Union[AuthenticatedClient, Client]) -&gt; Response[GithubComKalshiExchangeInfraSvcApi2ModelGetCommunicationsIDResponse]</code>","text":"<p>Get Communications ID</p> <p>Endpoint for getting the communications ID of the logged-in user.</p> <p>Raises:</p> Type Description <code>UnexpectedStatus</code> <p>If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.</p> <code>TimeoutException</code> <p>If the request takes longer than Client.timeout.</p> <p>Returns:</p> Type Description <code>Response[GithubComKalshiExchangeInfraSvcApi2ModelGetCommunicationsIDResponse]</code> <p>Response[GithubComKalshiExchangeInfraSvcApi2ModelGetCommunicationsIDResponse]</p> Source code in <code>kalshi_py/api/communications/get_communications_id.py</code> <pre><code>def sync_detailed(\n    *,\n    client: Union[AuthenticatedClient, Client],\n) -&gt; Response[GithubComKalshiExchangeInfraSvcApi2ModelGetCommunicationsIDResponse]:\n    \"\"\"Get Communications ID\n\n      Endpoint for getting the communications ID of the logged-in user.\n\n    Raises:\n        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.\n        httpx.TimeoutException: If the request takes longer than Client.timeout.\n\n    Returns:\n        Response[GithubComKalshiExchangeInfraSvcApi2ModelGetCommunicationsIDResponse]\n    \"\"\"\n\n    kwargs = _get_kwargs()\n\n    response = client.get_httpx_client().request(\n        **kwargs,\n    )\n\n    return _build_response(client=client, response=response)\n</code></pre>"},{"location":"api/communications/#kalshi_py.api.communications.get_communications_id.asyncio_detailed","title":"<code>kalshi_py.api.communications.get_communications_id.asyncio_detailed(*, client: Union[AuthenticatedClient, Client]) -&gt; Response[GithubComKalshiExchangeInfraSvcApi2ModelGetCommunicationsIDResponse]</code>  <code>async</code>","text":"<p>Get Communications ID</p> <p>Endpoint for getting the communications ID of the logged-in user.</p> <p>Raises:</p> Type Description <code>UnexpectedStatus</code> <p>If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.</p> <code>TimeoutException</code> <p>If the request takes longer than Client.timeout.</p> <p>Returns:</p> Type Description <code>Response[GithubComKalshiExchangeInfraSvcApi2ModelGetCommunicationsIDResponse]</code> <p>Response[GithubComKalshiExchangeInfraSvcApi2ModelGetCommunicationsIDResponse]</p> Source code in <code>kalshi_py/api/communications/get_communications_id.py</code> <pre><code>async def asyncio_detailed(\n    *,\n    client: Union[AuthenticatedClient, Client],\n) -&gt; Response[GithubComKalshiExchangeInfraSvcApi2ModelGetCommunicationsIDResponse]:\n    \"\"\"Get Communications ID\n\n      Endpoint for getting the communications ID of the logged-in user.\n\n    Raises:\n        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.\n        httpx.TimeoutException: If the request takes longer than Client.timeout.\n\n    Returns:\n        Response[GithubComKalshiExchangeInfraSvcApi2ModelGetCommunicationsIDResponse]\n    \"\"\"\n\n    kwargs = _get_kwargs()\n\n    response = await client.get_async_httpx_client().request(**kwargs)\n\n    return _build_response(client=client, response=response)\n</code></pre>"},{"location":"api/communications/#get-quote","title":"Get Quote","text":"<p>Synchronous API Call</p> <p>Asynchronous API Call</p> <p>Synchronous Detailed Response</p> <p>Asynchronous Detailed Response</p>"},{"location":"api/communications/#kalshi_py.api.communications.get_quote.sync","title":"<code>kalshi_py.api.communications.get_quote.sync(quote_id: str, *, client: Union[AuthenticatedClient, Client]) -&gt; Optional[GithubComKalshiExchangeInfraSvcApi2ModelGetQuoteResponse]</code>","text":"<p>Get Quote</p> <p>Endpoint for getting a particular quote</p> <p>Parameters:</p> Name Type Description Default <code>quote_id</code> <code>str</code> <p>Quote ID</p> required <p>Raises:</p> Type Description <code>UnexpectedStatus</code> <p>If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.</p> <code>TimeoutException</code> <p>If the request takes longer than Client.timeout.</p> <p>Returns:</p> Type Description <code>Optional[GithubComKalshiExchangeInfraSvcApi2ModelGetQuoteResponse]</code> <p>GithubComKalshiExchangeInfraSvcApi2ModelGetQuoteResponse</p> Source code in <code>kalshi_py/api/communications/get_quote.py</code> <pre><code>def sync(\n    quote_id: str,\n    *,\n    client: Union[AuthenticatedClient, Client],\n) -&gt; Optional[GithubComKalshiExchangeInfraSvcApi2ModelGetQuoteResponse]:\n    \"\"\"Get Quote\n\n      Endpoint for getting a particular quote\n\n    Args:\n        quote_id (str): Quote ID\n\n    Raises:\n        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.\n        httpx.TimeoutException: If the request takes longer than Client.timeout.\n\n    Returns:\n        GithubComKalshiExchangeInfraSvcApi2ModelGetQuoteResponse\n    \"\"\"\n\n    return sync_detailed(\n        quote_id=quote_id,\n        client=client,\n    ).parsed\n</code></pre>"},{"location":"api/communications/#kalshi_py.api.communications.get_quote.asyncio","title":"<code>kalshi_py.api.communications.get_quote.asyncio(quote_id: str, *, client: Union[AuthenticatedClient, Client]) -&gt; Optional[GithubComKalshiExchangeInfraSvcApi2ModelGetQuoteResponse]</code>  <code>async</code>","text":"<p>Get Quote</p> <p>Endpoint for getting a particular quote</p> <p>Parameters:</p> Name Type Description Default <code>quote_id</code> <code>str</code> <p>Quote ID</p> required <p>Raises:</p> Type Description <code>UnexpectedStatus</code> <p>If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.</p> <code>TimeoutException</code> <p>If the request takes longer than Client.timeout.</p> <p>Returns:</p> Type Description <code>Optional[GithubComKalshiExchangeInfraSvcApi2ModelGetQuoteResponse]</code> <p>GithubComKalshiExchangeInfraSvcApi2ModelGetQuoteResponse</p> Source code in <code>kalshi_py/api/communications/get_quote.py</code> <pre><code>async def asyncio(\n    quote_id: str,\n    *,\n    client: Union[AuthenticatedClient, Client],\n) -&gt; Optional[GithubComKalshiExchangeInfraSvcApi2ModelGetQuoteResponse]:\n    \"\"\"Get Quote\n\n      Endpoint for getting a particular quote\n\n    Args:\n        quote_id (str): Quote ID\n\n    Raises:\n        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.\n        httpx.TimeoutException: If the request takes longer than Client.timeout.\n\n    Returns:\n        GithubComKalshiExchangeInfraSvcApi2ModelGetQuoteResponse\n    \"\"\"\n\n    return (\n        await asyncio_detailed(\n            quote_id=quote_id,\n            client=client,\n        )\n    ).parsed\n</code></pre>"},{"location":"api/communications/#kalshi_py.api.communications.get_quote.sync_detailed","title":"<code>kalshi_py.api.communications.get_quote.sync_detailed(quote_id: str, *, client: Union[AuthenticatedClient, Client]) -&gt; Response[GithubComKalshiExchangeInfraSvcApi2ModelGetQuoteResponse]</code>","text":"<p>Get Quote</p> <p>Endpoint for getting a particular quote</p> <p>Parameters:</p> Name Type Description Default <code>quote_id</code> <code>str</code> <p>Quote ID</p> required <p>Raises:</p> Type Description <code>UnexpectedStatus</code> <p>If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.</p> <code>TimeoutException</code> <p>If the request takes longer than Client.timeout.</p> <p>Returns:</p> Type Description <code>Response[GithubComKalshiExchangeInfraSvcApi2ModelGetQuoteResponse]</code> <p>Response[GithubComKalshiExchangeInfraSvcApi2ModelGetQuoteResponse]</p> Source code in <code>kalshi_py/api/communications/get_quote.py</code> <pre><code>def sync_detailed(\n    quote_id: str,\n    *,\n    client: Union[AuthenticatedClient, Client],\n) -&gt; Response[GithubComKalshiExchangeInfraSvcApi2ModelGetQuoteResponse]:\n    \"\"\"Get Quote\n\n      Endpoint for getting a particular quote\n\n    Args:\n        quote_id (str): Quote ID\n\n    Raises:\n        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.\n        httpx.TimeoutException: If the request takes longer than Client.timeout.\n\n    Returns:\n        Response[GithubComKalshiExchangeInfraSvcApi2ModelGetQuoteResponse]\n    \"\"\"\n\n    kwargs = _get_kwargs(\n        quote_id=quote_id,\n    )\n\n    response = client.get_httpx_client().request(\n        **kwargs,\n    )\n\n    return _build_response(client=client, response=response)\n</code></pre>"},{"location":"api/communications/#kalshi_py.api.communications.get_quote.asyncio_detailed","title":"<code>kalshi_py.api.communications.get_quote.asyncio_detailed(quote_id: str, *, client: Union[AuthenticatedClient, Client]) -&gt; Response[GithubComKalshiExchangeInfraSvcApi2ModelGetQuoteResponse]</code>  <code>async</code>","text":"<p>Get Quote</p> <p>Endpoint for getting a particular quote</p> <p>Parameters:</p> Name Type Description Default <code>quote_id</code> <code>str</code> <p>Quote ID</p> required <p>Raises:</p> Type Description <code>UnexpectedStatus</code> <p>If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.</p> <code>TimeoutException</code> <p>If the request takes longer than Client.timeout.</p> <p>Returns:</p> Type Description <code>Response[GithubComKalshiExchangeInfraSvcApi2ModelGetQuoteResponse]</code> <p>Response[GithubComKalshiExchangeInfraSvcApi2ModelGetQuoteResponse]</p> Source code in <code>kalshi_py/api/communications/get_quote.py</code> <pre><code>async def asyncio_detailed(\n    quote_id: str,\n    *,\n    client: Union[AuthenticatedClient, Client],\n) -&gt; Response[GithubComKalshiExchangeInfraSvcApi2ModelGetQuoteResponse]:\n    \"\"\"Get Quote\n\n      Endpoint for getting a particular quote\n\n    Args:\n        quote_id (str): Quote ID\n\n    Raises:\n        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.\n        httpx.TimeoutException: If the request takes longer than Client.timeout.\n\n    Returns:\n        Response[GithubComKalshiExchangeInfraSvcApi2ModelGetQuoteResponse]\n    \"\"\"\n\n    kwargs = _get_kwargs(\n        quote_id=quote_id,\n    )\n\n    response = await client.get_async_httpx_client().request(**kwargs)\n\n    return _build_response(client=client, response=response)\n</code></pre>"},{"location":"api/communications/#get-quotes","title":"Get Quotes","text":"<p>Synchronous API Call</p> <p>Asynchronous API Call</p> <p>Synchronous Detailed Response</p> <p>Asynchronous Detailed Response</p>"},{"location":"api/communications/#kalshi_py.api.communications.get_quotes.sync","title":"<code>kalshi_py.api.communications.get_quotes.sync(*, client: Union[AuthenticatedClient, Client]) -&gt; Optional[GithubComKalshiExchangeInfraSvcApi2ModelGetQuotesResponse]</code>","text":"<p>Get Quotes</p> <p>Endpoint for getting quotes</p> <p>Raises:</p> Type Description <code>UnexpectedStatus</code> <p>If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.</p> <code>TimeoutException</code> <p>If the request takes longer than Client.timeout.</p> <p>Returns:</p> Type Description <code>Optional[GithubComKalshiExchangeInfraSvcApi2ModelGetQuotesResponse]</code> <p>GithubComKalshiExchangeInfraSvcApi2ModelGetQuotesResponse</p> Source code in <code>kalshi_py/api/communications/get_quotes.py</code> <pre><code>def sync(\n    *,\n    client: Union[AuthenticatedClient, Client],\n) -&gt; Optional[GithubComKalshiExchangeInfraSvcApi2ModelGetQuotesResponse]:\n    \"\"\"Get Quotes\n\n      Endpoint for getting quotes\n\n    Raises:\n        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.\n        httpx.TimeoutException: If the request takes longer than Client.timeout.\n\n    Returns:\n        GithubComKalshiExchangeInfraSvcApi2ModelGetQuotesResponse\n    \"\"\"\n\n    return sync_detailed(\n        client=client,\n    ).parsed\n</code></pre>"},{"location":"api/communications/#kalshi_py.api.communications.get_quotes.asyncio","title":"<code>kalshi_py.api.communications.get_quotes.asyncio(*, client: Union[AuthenticatedClient, Client]) -&gt; Optional[GithubComKalshiExchangeInfraSvcApi2ModelGetQuotesResponse]</code>  <code>async</code>","text":"<p>Get Quotes</p> <p>Endpoint for getting quotes</p> <p>Raises:</p> Type Description <code>UnexpectedStatus</code> <p>If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.</p> <code>TimeoutException</code> <p>If the request takes longer than Client.timeout.</p> <p>Returns:</p> Type Description <code>Optional[GithubComKalshiExchangeInfraSvcApi2ModelGetQuotesResponse]</code> <p>GithubComKalshiExchangeInfraSvcApi2ModelGetQuotesResponse</p> Source code in <code>kalshi_py/api/communications/get_quotes.py</code> <pre><code>async def asyncio(\n    *,\n    client: Union[AuthenticatedClient, Client],\n) -&gt; Optional[GithubComKalshiExchangeInfraSvcApi2ModelGetQuotesResponse]:\n    \"\"\"Get Quotes\n\n      Endpoint for getting quotes\n\n    Raises:\n        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.\n        httpx.TimeoutException: If the request takes longer than Client.timeout.\n\n    Returns:\n        GithubComKalshiExchangeInfraSvcApi2ModelGetQuotesResponse\n    \"\"\"\n\n    return (\n        await asyncio_detailed(\n            client=client,\n        )\n    ).parsed\n</code></pre>"},{"location":"api/communications/#kalshi_py.api.communications.get_quotes.sync_detailed","title":"<code>kalshi_py.api.communications.get_quotes.sync_detailed(*, client: Union[AuthenticatedClient, Client]) -&gt; Response[GithubComKalshiExchangeInfraSvcApi2ModelGetQuotesResponse]</code>","text":"<p>Get Quotes</p> <p>Endpoint for getting quotes</p> <p>Raises:</p> Type Description <code>UnexpectedStatus</code> <p>If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.</p> <code>TimeoutException</code> <p>If the request takes longer than Client.timeout.</p> <p>Returns:</p> Type Description <code>Response[GithubComKalshiExchangeInfraSvcApi2ModelGetQuotesResponse]</code> <p>Response[GithubComKalshiExchangeInfraSvcApi2ModelGetQuotesResponse]</p> Source code in <code>kalshi_py/api/communications/get_quotes.py</code> <pre><code>def sync_detailed(\n    *,\n    client: Union[AuthenticatedClient, Client],\n) -&gt; Response[GithubComKalshiExchangeInfraSvcApi2ModelGetQuotesResponse]:\n    \"\"\"Get Quotes\n\n      Endpoint for getting quotes\n\n    Raises:\n        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.\n        httpx.TimeoutException: If the request takes longer than Client.timeout.\n\n    Returns:\n        Response[GithubComKalshiExchangeInfraSvcApi2ModelGetQuotesResponse]\n    \"\"\"\n\n    kwargs = _get_kwargs()\n\n    response = client.get_httpx_client().request(\n        **kwargs,\n    )\n\n    return _build_response(client=client, response=response)\n</code></pre>"},{"location":"api/communications/#kalshi_py.api.communications.get_quotes.asyncio_detailed","title":"<code>kalshi_py.api.communications.get_quotes.asyncio_detailed(*, client: Union[AuthenticatedClient, Client]) -&gt; Response[GithubComKalshiExchangeInfraSvcApi2ModelGetQuotesResponse]</code>  <code>async</code>","text":"<p>Get Quotes</p> <p>Endpoint for getting quotes</p> <p>Raises:</p> Type Description <code>UnexpectedStatus</code> <p>If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.</p> <code>TimeoutException</code> <p>If the request takes longer than Client.timeout.</p> <p>Returns:</p> Type Description <code>Response[GithubComKalshiExchangeInfraSvcApi2ModelGetQuotesResponse]</code> <p>Response[GithubComKalshiExchangeInfraSvcApi2ModelGetQuotesResponse]</p> Source code in <code>kalshi_py/api/communications/get_quotes.py</code> <pre><code>async def asyncio_detailed(\n    *,\n    client: Union[AuthenticatedClient, Client],\n) -&gt; Response[GithubComKalshiExchangeInfraSvcApi2ModelGetQuotesResponse]:\n    \"\"\"Get Quotes\n\n      Endpoint for getting quotes\n\n    Raises:\n        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.\n        httpx.TimeoutException: If the request takes longer than Client.timeout.\n\n    Returns:\n        Response[GithubComKalshiExchangeInfraSvcApi2ModelGetQuotesResponse]\n    \"\"\"\n\n    kwargs = _get_kwargs()\n\n    response = await client.get_async_httpx_client().request(**kwargs)\n\n    return _build_response(client=client, response=response)\n</code></pre>"},{"location":"api/communications/#get-rf-qs","title":"Get Rf Qs","text":"<p>Synchronous API Call</p> <p>Asynchronous API Call</p> <p>Synchronous Detailed Response</p> <p>Asynchronous Detailed Response</p>"},{"location":"api/communications/#kalshi_py.api.communications.get_rf_qs.sync","title":"<code>kalshi_py.api.communications.get_rf_qs.sync(*, client: Union[AuthenticatedClient, Client]) -&gt; Optional[GithubComKalshiExchangeInfraSvcApi2ModelGetRFQsResponse]</code>","text":"<p>Get RFQs</p> <p>Endpoint for getting RFQs</p> <p>Raises:</p> Type Description <code>UnexpectedStatus</code> <p>If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.</p> <code>TimeoutException</code> <p>If the request takes longer than Client.timeout.</p> <p>Returns:</p> Type Description <code>Optional[GithubComKalshiExchangeInfraSvcApi2ModelGetRFQsResponse]</code> <p>GithubComKalshiExchangeInfraSvcApi2ModelGetRFQsResponse</p> Source code in <code>kalshi_py/api/communications/get_rf_qs.py</code> <pre><code>def sync(\n    *,\n    client: Union[AuthenticatedClient, Client],\n) -&gt; Optional[GithubComKalshiExchangeInfraSvcApi2ModelGetRFQsResponse]:\n    \"\"\"Get RFQs\n\n      Endpoint for getting RFQs\n\n    Raises:\n        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.\n        httpx.TimeoutException: If the request takes longer than Client.timeout.\n\n    Returns:\n        GithubComKalshiExchangeInfraSvcApi2ModelGetRFQsResponse\n    \"\"\"\n\n    return sync_detailed(\n        client=client,\n    ).parsed\n</code></pre>"},{"location":"api/communications/#kalshi_py.api.communications.get_rf_qs.asyncio","title":"<code>kalshi_py.api.communications.get_rf_qs.asyncio(*, client: Union[AuthenticatedClient, Client]) -&gt; Optional[GithubComKalshiExchangeInfraSvcApi2ModelGetRFQsResponse]</code>  <code>async</code>","text":"<p>Get RFQs</p> <p>Endpoint for getting RFQs</p> <p>Raises:</p> Type Description <code>UnexpectedStatus</code> <p>If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.</p> <code>TimeoutException</code> <p>If the request takes longer than Client.timeout.</p> <p>Returns:</p> Type Description <code>Optional[GithubComKalshiExchangeInfraSvcApi2ModelGetRFQsResponse]</code> <p>GithubComKalshiExchangeInfraSvcApi2ModelGetRFQsResponse</p> Source code in <code>kalshi_py/api/communications/get_rf_qs.py</code> <pre><code>async def asyncio(\n    *,\n    client: Union[AuthenticatedClient, Client],\n) -&gt; Optional[GithubComKalshiExchangeInfraSvcApi2ModelGetRFQsResponse]:\n    \"\"\"Get RFQs\n\n      Endpoint for getting RFQs\n\n    Raises:\n        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.\n        httpx.TimeoutException: If the request takes longer than Client.timeout.\n\n    Returns:\n        GithubComKalshiExchangeInfraSvcApi2ModelGetRFQsResponse\n    \"\"\"\n\n    return (\n        await asyncio_detailed(\n            client=client,\n        )\n    ).parsed\n</code></pre>"},{"location":"api/communications/#kalshi_py.api.communications.get_rf_qs.sync_detailed","title":"<code>kalshi_py.api.communications.get_rf_qs.sync_detailed(*, client: Union[AuthenticatedClient, Client]) -&gt; Response[GithubComKalshiExchangeInfraSvcApi2ModelGetRFQsResponse]</code>","text":"<p>Get RFQs</p> <p>Endpoint for getting RFQs</p> <p>Raises:</p> Type Description <code>UnexpectedStatus</code> <p>If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.</p> <code>TimeoutException</code> <p>If the request takes longer than Client.timeout.</p> <p>Returns:</p> Type Description <code>Response[GithubComKalshiExchangeInfraSvcApi2ModelGetRFQsResponse]</code> <p>Response[GithubComKalshiExchangeInfraSvcApi2ModelGetRFQsResponse]</p> Source code in <code>kalshi_py/api/communications/get_rf_qs.py</code> <pre><code>def sync_detailed(\n    *,\n    client: Union[AuthenticatedClient, Client],\n) -&gt; Response[GithubComKalshiExchangeInfraSvcApi2ModelGetRFQsResponse]:\n    \"\"\"Get RFQs\n\n      Endpoint for getting RFQs\n\n    Raises:\n        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.\n        httpx.TimeoutException: If the request takes longer than Client.timeout.\n\n    Returns:\n        Response[GithubComKalshiExchangeInfraSvcApi2ModelGetRFQsResponse]\n    \"\"\"\n\n    kwargs = _get_kwargs()\n\n    response = client.get_httpx_client().request(\n        **kwargs,\n    )\n\n    return _build_response(client=client, response=response)\n</code></pre>"},{"location":"api/communications/#kalshi_py.api.communications.get_rf_qs.asyncio_detailed","title":"<code>kalshi_py.api.communications.get_rf_qs.asyncio_detailed(*, client: Union[AuthenticatedClient, Client]) -&gt; Response[GithubComKalshiExchangeInfraSvcApi2ModelGetRFQsResponse]</code>  <code>async</code>","text":"<p>Get RFQs</p> <p>Endpoint for getting RFQs</p> <p>Raises:</p> Type Description <code>UnexpectedStatus</code> <p>If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.</p> <code>TimeoutException</code> <p>If the request takes longer than Client.timeout.</p> <p>Returns:</p> Type Description <code>Response[GithubComKalshiExchangeInfraSvcApi2ModelGetRFQsResponse]</code> <p>Response[GithubComKalshiExchangeInfraSvcApi2ModelGetRFQsResponse]</p> Source code in <code>kalshi_py/api/communications/get_rf_qs.py</code> <pre><code>async def asyncio_detailed(\n    *,\n    client: Union[AuthenticatedClient, Client],\n) -&gt; Response[GithubComKalshiExchangeInfraSvcApi2ModelGetRFQsResponse]:\n    \"\"\"Get RFQs\n\n      Endpoint for getting RFQs\n\n    Raises:\n        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.\n        httpx.TimeoutException: If the request takes longer than Client.timeout.\n\n    Returns:\n        Response[GithubComKalshiExchangeInfraSvcApi2ModelGetRFQsResponse]\n    \"\"\"\n\n    kwargs = _get_kwargs()\n\n    response = await client.get_async_httpx_client().request(**kwargs)\n\n    return _build_response(client=client, response=response)\n</code></pre>"},{"location":"api/communications/#get-rfq","title":"Get Rfq","text":"<p>Synchronous API Call</p> <p>Asynchronous API Call</p> <p>Synchronous Detailed Response</p> <p>Asynchronous Detailed Response</p>"},{"location":"api/communications/#kalshi_py.api.communications.get_rfq.sync","title":"<code>kalshi_py.api.communications.get_rfq.sync(rfq_id: str, *, client: Union[AuthenticatedClient, Client]) -&gt; Optional[GithubComKalshiExchangeInfraSvcApi2ModelGetRFQResponse]</code>","text":"<p>Get RFQ</p> <p>Endpoint for getting a single RFQ by id</p> <p>Parameters:</p> Name Type Description Default <code>rfq_id</code> <code>str</code> <p>RFQ ID</p> required <p>Raises:</p> Type Description <code>UnexpectedStatus</code> <p>If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.</p> <code>TimeoutException</code> <p>If the request takes longer than Client.timeout.</p> <p>Returns:</p> Type Description <code>Optional[GithubComKalshiExchangeInfraSvcApi2ModelGetRFQResponse]</code> <p>GithubComKalshiExchangeInfraSvcApi2ModelGetRFQResponse</p> Source code in <code>kalshi_py/api/communications/get_rfq.py</code> <pre><code>def sync(\n    rfq_id: str,\n    *,\n    client: Union[AuthenticatedClient, Client],\n) -&gt; Optional[GithubComKalshiExchangeInfraSvcApi2ModelGetRFQResponse]:\n    \"\"\"Get RFQ\n\n      Endpoint for getting a single RFQ by id\n\n    Args:\n        rfq_id (str): RFQ ID\n\n    Raises:\n        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.\n        httpx.TimeoutException: If the request takes longer than Client.timeout.\n\n    Returns:\n        GithubComKalshiExchangeInfraSvcApi2ModelGetRFQResponse\n    \"\"\"\n\n    return sync_detailed(\n        rfq_id=rfq_id,\n        client=client,\n    ).parsed\n</code></pre>"},{"location":"api/communications/#kalshi_py.api.communications.get_rfq.asyncio","title":"<code>kalshi_py.api.communications.get_rfq.asyncio(rfq_id: str, *, client: Union[AuthenticatedClient, Client]) -&gt; Optional[GithubComKalshiExchangeInfraSvcApi2ModelGetRFQResponse]</code>  <code>async</code>","text":"<p>Get RFQ</p> <p>Endpoint for getting a single RFQ by id</p> <p>Parameters:</p> Name Type Description Default <code>rfq_id</code> <code>str</code> <p>RFQ ID</p> required <p>Raises:</p> Type Description <code>UnexpectedStatus</code> <p>If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.</p> <code>TimeoutException</code> <p>If the request takes longer than Client.timeout.</p> <p>Returns:</p> Type Description <code>Optional[GithubComKalshiExchangeInfraSvcApi2ModelGetRFQResponse]</code> <p>GithubComKalshiExchangeInfraSvcApi2ModelGetRFQResponse</p> Source code in <code>kalshi_py/api/communications/get_rfq.py</code> <pre><code>async def asyncio(\n    rfq_id: str,\n    *,\n    client: Union[AuthenticatedClient, Client],\n) -&gt; Optional[GithubComKalshiExchangeInfraSvcApi2ModelGetRFQResponse]:\n    \"\"\"Get RFQ\n\n      Endpoint for getting a single RFQ by id\n\n    Args:\n        rfq_id (str): RFQ ID\n\n    Raises:\n        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.\n        httpx.TimeoutException: If the request takes longer than Client.timeout.\n\n    Returns:\n        GithubComKalshiExchangeInfraSvcApi2ModelGetRFQResponse\n    \"\"\"\n\n    return (\n        await asyncio_detailed(\n            rfq_id=rfq_id,\n            client=client,\n        )\n    ).parsed\n</code></pre>"},{"location":"api/communications/#kalshi_py.api.communications.get_rfq.sync_detailed","title":"<code>kalshi_py.api.communications.get_rfq.sync_detailed(rfq_id: str, *, client: Union[AuthenticatedClient, Client]) -&gt; Response[GithubComKalshiExchangeInfraSvcApi2ModelGetRFQResponse]</code>","text":"<p>Get RFQ</p> <p>Endpoint for getting a single RFQ by id</p> <p>Parameters:</p> Name Type Description Default <code>rfq_id</code> <code>str</code> <p>RFQ ID</p> required <p>Raises:</p> Type Description <code>UnexpectedStatus</code> <p>If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.</p> <code>TimeoutException</code> <p>If the request takes longer than Client.timeout.</p> <p>Returns:</p> Type Description <code>Response[GithubComKalshiExchangeInfraSvcApi2ModelGetRFQResponse]</code> <p>Response[GithubComKalshiExchangeInfraSvcApi2ModelGetRFQResponse]</p> Source code in <code>kalshi_py/api/communications/get_rfq.py</code> <pre><code>def sync_detailed(\n    rfq_id: str,\n    *,\n    client: Union[AuthenticatedClient, Client],\n) -&gt; Response[GithubComKalshiExchangeInfraSvcApi2ModelGetRFQResponse]:\n    \"\"\"Get RFQ\n\n      Endpoint for getting a single RFQ by id\n\n    Args:\n        rfq_id (str): RFQ ID\n\n    Raises:\n        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.\n        httpx.TimeoutException: If the request takes longer than Client.timeout.\n\n    Returns:\n        Response[GithubComKalshiExchangeInfraSvcApi2ModelGetRFQResponse]\n    \"\"\"\n\n    kwargs = _get_kwargs(\n        rfq_id=rfq_id,\n    )\n\n    response = client.get_httpx_client().request(\n        **kwargs,\n    )\n\n    return _build_response(client=client, response=response)\n</code></pre>"},{"location":"api/communications/#kalshi_py.api.communications.get_rfq.asyncio_detailed","title":"<code>kalshi_py.api.communications.get_rfq.asyncio_detailed(rfq_id: str, *, client: Union[AuthenticatedClient, Client]) -&gt; Response[GithubComKalshiExchangeInfraSvcApi2ModelGetRFQResponse]</code>  <code>async</code>","text":"<p>Get RFQ</p> <p>Endpoint for getting a single RFQ by id</p> <p>Parameters:</p> Name Type Description Default <code>rfq_id</code> <code>str</code> <p>RFQ ID</p> required <p>Raises:</p> Type Description <code>UnexpectedStatus</code> <p>If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.</p> <code>TimeoutException</code> <p>If the request takes longer than Client.timeout.</p> <p>Returns:</p> Type Description <code>Response[GithubComKalshiExchangeInfraSvcApi2ModelGetRFQResponse]</code> <p>Response[GithubComKalshiExchangeInfraSvcApi2ModelGetRFQResponse]</p> Source code in <code>kalshi_py/api/communications/get_rfq.py</code> <pre><code>async def asyncio_detailed(\n    rfq_id: str,\n    *,\n    client: Union[AuthenticatedClient, Client],\n) -&gt; Response[GithubComKalshiExchangeInfraSvcApi2ModelGetRFQResponse]:\n    \"\"\"Get RFQ\n\n      Endpoint for getting a single RFQ by id\n\n    Args:\n        rfq_id (str): RFQ ID\n\n    Raises:\n        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.\n        httpx.TimeoutException: If the request takes longer than Client.timeout.\n\n    Returns:\n        Response[GithubComKalshiExchangeInfraSvcApi2ModelGetRFQResponse]\n    \"\"\"\n\n    kwargs = _get_kwargs(\n        rfq_id=rfq_id,\n    )\n\n    response = await client.get_async_httpx_client().request(**kwargs)\n\n    return _build_response(client=client, response=response)\n</code></pre>"},{"location":"api/default/","title":"Default API Reference","text":""},{"location":"api/default/#endpoints","title":"Endpoints","text":""},{"location":"api/default/#get-exchange-announcements","title":"Get Exchange Announcements","text":"<p>Synchronous API Call</p> <p>Asynchronous API Call</p> <p>Synchronous Detailed Response</p> <p>Asynchronous Detailed Response</p>"},{"location":"api/default/#kalshi_py.api.default.get_exchange_announcements.sync","title":"<code>kalshi_py.api.default.get_exchange_announcements.sync(*, client: Union[AuthenticatedClient, Client]) -&gt; Optional[GithubComKalshiExchangeInfraSvcApi2ModelGetExchangeAnnouncementsResponse]</code>","text":"<p>Get Exchange Announcements</p> <p>Endpoint for getting all exchange-wide announcements.</p> <p>Raises:</p> Type Description <code>UnexpectedStatus</code> <p>If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.</p> <code>TimeoutException</code> <p>If the request takes longer than Client.timeout.</p> <p>Returns:</p> Type Description <code>Optional[GithubComKalshiExchangeInfraSvcApi2ModelGetExchangeAnnouncementsResponse]</code> <p>GithubComKalshiExchangeInfraSvcApi2ModelGetExchangeAnnouncementsResponse</p> Source code in <code>kalshi_py/api/default/get_exchange_announcements.py</code> <pre><code>def sync(\n    *,\n    client: Union[AuthenticatedClient, Client],\n) -&gt; Optional[GithubComKalshiExchangeInfraSvcApi2ModelGetExchangeAnnouncementsResponse]:\n    \"\"\"Get Exchange Announcements\n\n      Endpoint for getting all exchange-wide announcements.\n\n    Raises:\n        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.\n        httpx.TimeoutException: If the request takes longer than Client.timeout.\n\n    Returns:\n        GithubComKalshiExchangeInfraSvcApi2ModelGetExchangeAnnouncementsResponse\n    \"\"\"\n\n    return sync_detailed(\n        client=client,\n    ).parsed\n</code></pre>"},{"location":"api/default/#kalshi_py.api.default.get_exchange_announcements.asyncio","title":"<code>kalshi_py.api.default.get_exchange_announcements.asyncio(*, client: Union[AuthenticatedClient, Client]) -&gt; Optional[GithubComKalshiExchangeInfraSvcApi2ModelGetExchangeAnnouncementsResponse]</code>  <code>async</code>","text":"<p>Get Exchange Announcements</p> <p>Endpoint for getting all exchange-wide announcements.</p> <p>Raises:</p> Type Description <code>UnexpectedStatus</code> <p>If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.</p> <code>TimeoutException</code> <p>If the request takes longer than Client.timeout.</p> <p>Returns:</p> Type Description <code>Optional[GithubComKalshiExchangeInfraSvcApi2ModelGetExchangeAnnouncementsResponse]</code> <p>GithubComKalshiExchangeInfraSvcApi2ModelGetExchangeAnnouncementsResponse</p> Source code in <code>kalshi_py/api/default/get_exchange_announcements.py</code> <pre><code>async def asyncio(\n    *,\n    client: Union[AuthenticatedClient, Client],\n) -&gt; Optional[GithubComKalshiExchangeInfraSvcApi2ModelGetExchangeAnnouncementsResponse]:\n    \"\"\"Get Exchange Announcements\n\n      Endpoint for getting all exchange-wide announcements.\n\n    Raises:\n        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.\n        httpx.TimeoutException: If the request takes longer than Client.timeout.\n\n    Returns:\n        GithubComKalshiExchangeInfraSvcApi2ModelGetExchangeAnnouncementsResponse\n    \"\"\"\n\n    return (\n        await asyncio_detailed(\n            client=client,\n        )\n    ).parsed\n</code></pre>"},{"location":"api/default/#kalshi_py.api.default.get_exchange_announcements.sync_detailed","title":"<code>kalshi_py.api.default.get_exchange_announcements.sync_detailed(*, client: Union[AuthenticatedClient, Client]) -&gt; Response[GithubComKalshiExchangeInfraSvcApi2ModelGetExchangeAnnouncementsResponse]</code>","text":"<p>Get Exchange Announcements</p> <p>Endpoint for getting all exchange-wide announcements.</p> <p>Raises:</p> Type Description <code>UnexpectedStatus</code> <p>If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.</p> <code>TimeoutException</code> <p>If the request takes longer than Client.timeout.</p> <p>Returns:</p> Type Description <code>Response[GithubComKalshiExchangeInfraSvcApi2ModelGetExchangeAnnouncementsResponse]</code> <p>Response[GithubComKalshiExchangeInfraSvcApi2ModelGetExchangeAnnouncementsResponse]</p> Source code in <code>kalshi_py/api/default/get_exchange_announcements.py</code> <pre><code>def sync_detailed(\n    *,\n    client: Union[AuthenticatedClient, Client],\n) -&gt; Response[GithubComKalshiExchangeInfraSvcApi2ModelGetExchangeAnnouncementsResponse]:\n    \"\"\"Get Exchange Announcements\n\n      Endpoint for getting all exchange-wide announcements.\n\n    Raises:\n        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.\n        httpx.TimeoutException: If the request takes longer than Client.timeout.\n\n    Returns:\n        Response[GithubComKalshiExchangeInfraSvcApi2ModelGetExchangeAnnouncementsResponse]\n    \"\"\"\n\n    kwargs = _get_kwargs()\n\n    response = client.get_httpx_client().request(\n        **kwargs,\n    )\n\n    return _build_response(client=client, response=response)\n</code></pre>"},{"location":"api/default/#kalshi_py.api.default.get_exchange_announcements.asyncio_detailed","title":"<code>kalshi_py.api.default.get_exchange_announcements.asyncio_detailed(*, client: Union[AuthenticatedClient, Client]) -&gt; Response[GithubComKalshiExchangeInfraSvcApi2ModelGetExchangeAnnouncementsResponse]</code>  <code>async</code>","text":"<p>Get Exchange Announcements</p> <p>Endpoint for getting all exchange-wide announcements.</p> <p>Raises:</p> Type Description <code>UnexpectedStatus</code> <p>If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.</p> <code>TimeoutException</code> <p>If the request takes longer than Client.timeout.</p> <p>Returns:</p> Type Description <code>Response[GithubComKalshiExchangeInfraSvcApi2ModelGetExchangeAnnouncementsResponse]</code> <p>Response[GithubComKalshiExchangeInfraSvcApi2ModelGetExchangeAnnouncementsResponse]</p> Source code in <code>kalshi_py/api/default/get_exchange_announcements.py</code> <pre><code>async def asyncio_detailed(\n    *,\n    client: Union[AuthenticatedClient, Client],\n) -&gt; Response[GithubComKalshiExchangeInfraSvcApi2ModelGetExchangeAnnouncementsResponse]:\n    \"\"\"Get Exchange Announcements\n\n      Endpoint for getting all exchange-wide announcements.\n\n    Raises:\n        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.\n        httpx.TimeoutException: If the request takes longer than Client.timeout.\n\n    Returns:\n        Response[GithubComKalshiExchangeInfraSvcApi2ModelGetExchangeAnnouncementsResponse]\n    \"\"\"\n\n    kwargs = _get_kwargs()\n\n    response = await client.get_async_httpx_client().request(**kwargs)\n\n    return _build_response(client=client, response=response)\n</code></pre>"},{"location":"api/default/#get-exchange-schedule","title":"Get Exchange Schedule","text":"<p>Synchronous API Call</p> <p>Asynchronous API Call</p> <p>Synchronous Detailed Response</p> <p>Asynchronous Detailed Response</p>"},{"location":"api/default/#kalshi_py.api.default.get_exchange_schedule.sync","title":"<code>kalshi_py.api.default.get_exchange_schedule.sync(*, client: Union[AuthenticatedClient, Client]) -&gt; Optional[GithubComKalshiExchangeInfraSvcApi2ModelGetExchangeScheduleResponse]</code>","text":"<p>Get Exchange Schedule</p> <p>Endpoint for getting the exchange schedule.</p> <p>Raises:</p> Type Description <code>UnexpectedStatus</code> <p>If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.</p> <code>TimeoutException</code> <p>If the request takes longer than Client.timeout.</p> <p>Returns:</p> Type Description <code>Optional[GithubComKalshiExchangeInfraSvcApi2ModelGetExchangeScheduleResponse]</code> <p>GithubComKalshiExchangeInfraSvcApi2ModelGetExchangeScheduleResponse</p> Source code in <code>kalshi_py/api/default/get_exchange_schedule.py</code> <pre><code>def sync(\n    *,\n    client: Union[AuthenticatedClient, Client],\n) -&gt; Optional[GithubComKalshiExchangeInfraSvcApi2ModelGetExchangeScheduleResponse]:\n    \"\"\"Get Exchange Schedule\n\n      Endpoint for getting the exchange schedule.\n\n    Raises:\n        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.\n        httpx.TimeoutException: If the request takes longer than Client.timeout.\n\n    Returns:\n        GithubComKalshiExchangeInfraSvcApi2ModelGetExchangeScheduleResponse\n    \"\"\"\n\n    return sync_detailed(\n        client=client,\n    ).parsed\n</code></pre>"},{"location":"api/default/#kalshi_py.api.default.get_exchange_schedule.asyncio","title":"<code>kalshi_py.api.default.get_exchange_schedule.asyncio(*, client: Union[AuthenticatedClient, Client]) -&gt; Optional[GithubComKalshiExchangeInfraSvcApi2ModelGetExchangeScheduleResponse]</code>  <code>async</code>","text":"<p>Get Exchange Schedule</p> <p>Endpoint for getting the exchange schedule.</p> <p>Raises:</p> Type Description <code>UnexpectedStatus</code> <p>If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.</p> <code>TimeoutException</code> <p>If the request takes longer than Client.timeout.</p> <p>Returns:</p> Type Description <code>Optional[GithubComKalshiExchangeInfraSvcApi2ModelGetExchangeScheduleResponse]</code> <p>GithubComKalshiExchangeInfraSvcApi2ModelGetExchangeScheduleResponse</p> Source code in <code>kalshi_py/api/default/get_exchange_schedule.py</code> <pre><code>async def asyncio(\n    *,\n    client: Union[AuthenticatedClient, Client],\n) -&gt; Optional[GithubComKalshiExchangeInfraSvcApi2ModelGetExchangeScheduleResponse]:\n    \"\"\"Get Exchange Schedule\n\n      Endpoint for getting the exchange schedule.\n\n    Raises:\n        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.\n        httpx.TimeoutException: If the request takes longer than Client.timeout.\n\n    Returns:\n        GithubComKalshiExchangeInfraSvcApi2ModelGetExchangeScheduleResponse\n    \"\"\"\n\n    return (\n        await asyncio_detailed(\n            client=client,\n        )\n    ).parsed\n</code></pre>"},{"location":"api/default/#kalshi_py.api.default.get_exchange_schedule.sync_detailed","title":"<code>kalshi_py.api.default.get_exchange_schedule.sync_detailed(*, client: Union[AuthenticatedClient, Client]) -&gt; Response[GithubComKalshiExchangeInfraSvcApi2ModelGetExchangeScheduleResponse]</code>","text":"<p>Get Exchange Schedule</p> <p>Endpoint for getting the exchange schedule.</p> <p>Raises:</p> Type Description <code>UnexpectedStatus</code> <p>If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.</p> <code>TimeoutException</code> <p>If the request takes longer than Client.timeout.</p> <p>Returns:</p> Type Description <code>Response[GithubComKalshiExchangeInfraSvcApi2ModelGetExchangeScheduleResponse]</code> <p>Response[GithubComKalshiExchangeInfraSvcApi2ModelGetExchangeScheduleResponse]</p> Source code in <code>kalshi_py/api/default/get_exchange_schedule.py</code> <pre><code>def sync_detailed(\n    *,\n    client: Union[AuthenticatedClient, Client],\n) -&gt; Response[GithubComKalshiExchangeInfraSvcApi2ModelGetExchangeScheduleResponse]:\n    \"\"\"Get Exchange Schedule\n\n      Endpoint for getting the exchange schedule.\n\n    Raises:\n        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.\n        httpx.TimeoutException: If the request takes longer than Client.timeout.\n\n    Returns:\n        Response[GithubComKalshiExchangeInfraSvcApi2ModelGetExchangeScheduleResponse]\n    \"\"\"\n\n    kwargs = _get_kwargs()\n\n    response = client.get_httpx_client().request(\n        **kwargs,\n    )\n\n    return _build_response(client=client, response=response)\n</code></pre>"},{"location":"api/default/#kalshi_py.api.default.get_exchange_schedule.asyncio_detailed","title":"<code>kalshi_py.api.default.get_exchange_schedule.asyncio_detailed(*, client: Union[AuthenticatedClient, Client]) -&gt; Response[GithubComKalshiExchangeInfraSvcApi2ModelGetExchangeScheduleResponse]</code>  <code>async</code>","text":"<p>Get Exchange Schedule</p> <p>Endpoint for getting the exchange schedule.</p> <p>Raises:</p> Type Description <code>UnexpectedStatus</code> <p>If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.</p> <code>TimeoutException</code> <p>If the request takes longer than Client.timeout.</p> <p>Returns:</p> Type Description <code>Response[GithubComKalshiExchangeInfraSvcApi2ModelGetExchangeScheduleResponse]</code> <p>Response[GithubComKalshiExchangeInfraSvcApi2ModelGetExchangeScheduleResponse]</p> Source code in <code>kalshi_py/api/default/get_exchange_schedule.py</code> <pre><code>async def asyncio_detailed(\n    *,\n    client: Union[AuthenticatedClient, Client],\n) -&gt; Response[GithubComKalshiExchangeInfraSvcApi2ModelGetExchangeScheduleResponse]:\n    \"\"\"Get Exchange Schedule\n\n      Endpoint for getting the exchange schedule.\n\n    Raises:\n        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.\n        httpx.TimeoutException: If the request takes longer than Client.timeout.\n\n    Returns:\n        Response[GithubComKalshiExchangeInfraSvcApi2ModelGetExchangeScheduleResponse]\n    \"\"\"\n\n    kwargs = _get_kwargs()\n\n    response = await client.get_async_httpx_client().request(**kwargs)\n\n    return _build_response(client=client, response=response)\n</code></pre>"},{"location":"api/default/#get-exchange-status","title":"Get Exchange Status","text":"<p>Synchronous API Call</p> <p>Asynchronous API Call</p> <p>Synchronous Detailed Response</p> <p>Asynchronous Detailed Response</p>"},{"location":"api/default/#kalshi_py.api.default.get_exchange_status.sync","title":"<code>kalshi_py.api.default.get_exchange_status.sync(*, client: Union[AuthenticatedClient, Client]) -&gt; Optional[GithubComKalshiExchangeInfraSvcApi2ModelExchangeStatus]</code>","text":"<p>Get Exchange Status</p> <p>Endpoint for getting the exchange status.</p> <p>Raises:</p> Type Description <code>UnexpectedStatus</code> <p>If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.</p> <code>TimeoutException</code> <p>If the request takes longer than Client.timeout.</p> <p>Returns:</p> Type Description <code>Optional[GithubComKalshiExchangeInfraSvcApi2ModelExchangeStatus]</code> <p>GithubComKalshiExchangeInfraSvcApi2ModelExchangeStatus</p> Source code in <code>kalshi_py/api/default/get_exchange_status.py</code> <pre><code>def sync(\n    *,\n    client: Union[AuthenticatedClient, Client],\n) -&gt; Optional[GithubComKalshiExchangeInfraSvcApi2ModelExchangeStatus]:\n    \"\"\"Get Exchange Status\n\n      Endpoint for getting the exchange status.\n\n    Raises:\n        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.\n        httpx.TimeoutException: If the request takes longer than Client.timeout.\n\n    Returns:\n        GithubComKalshiExchangeInfraSvcApi2ModelExchangeStatus\n    \"\"\"\n\n    return sync_detailed(\n        client=client,\n    ).parsed\n</code></pre>"},{"location":"api/default/#kalshi_py.api.default.get_exchange_status.asyncio","title":"<code>kalshi_py.api.default.get_exchange_status.asyncio(*, client: Union[AuthenticatedClient, Client]) -&gt; Optional[GithubComKalshiExchangeInfraSvcApi2ModelExchangeStatus]</code>  <code>async</code>","text":"<p>Get Exchange Status</p> <p>Endpoint for getting the exchange status.</p> <p>Raises:</p> Type Description <code>UnexpectedStatus</code> <p>If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.</p> <code>TimeoutException</code> <p>If the request takes longer than Client.timeout.</p> <p>Returns:</p> Type Description <code>Optional[GithubComKalshiExchangeInfraSvcApi2ModelExchangeStatus]</code> <p>GithubComKalshiExchangeInfraSvcApi2ModelExchangeStatus</p> Source code in <code>kalshi_py/api/default/get_exchange_status.py</code> <pre><code>async def asyncio(\n    *,\n    client: Union[AuthenticatedClient, Client],\n) -&gt; Optional[GithubComKalshiExchangeInfraSvcApi2ModelExchangeStatus]:\n    \"\"\"Get Exchange Status\n\n      Endpoint for getting the exchange status.\n\n    Raises:\n        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.\n        httpx.TimeoutException: If the request takes longer than Client.timeout.\n\n    Returns:\n        GithubComKalshiExchangeInfraSvcApi2ModelExchangeStatus\n    \"\"\"\n\n    return (\n        await asyncio_detailed(\n            client=client,\n        )\n    ).parsed\n</code></pre>"},{"location":"api/default/#kalshi_py.api.default.get_exchange_status.sync_detailed","title":"<code>kalshi_py.api.default.get_exchange_status.sync_detailed(*, client: Union[AuthenticatedClient, Client]) -&gt; Response[GithubComKalshiExchangeInfraSvcApi2ModelExchangeStatus]</code>","text":"<p>Get Exchange Status</p> <p>Endpoint for getting the exchange status.</p> <p>Raises:</p> Type Description <code>UnexpectedStatus</code> <p>If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.</p> <code>TimeoutException</code> <p>If the request takes longer than Client.timeout.</p> <p>Returns:</p> Type Description <code>Response[GithubComKalshiExchangeInfraSvcApi2ModelExchangeStatus]</code> <p>Response[GithubComKalshiExchangeInfraSvcApi2ModelExchangeStatus]</p> Source code in <code>kalshi_py/api/default/get_exchange_status.py</code> <pre><code>def sync_detailed(\n    *,\n    client: Union[AuthenticatedClient, Client],\n) -&gt; Response[GithubComKalshiExchangeInfraSvcApi2ModelExchangeStatus]:\n    \"\"\"Get Exchange Status\n\n      Endpoint for getting the exchange status.\n\n    Raises:\n        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.\n        httpx.TimeoutException: If the request takes longer than Client.timeout.\n\n    Returns:\n        Response[GithubComKalshiExchangeInfraSvcApi2ModelExchangeStatus]\n    \"\"\"\n\n    kwargs = _get_kwargs()\n\n    response = client.get_httpx_client().request(\n        **kwargs,\n    )\n\n    return _build_response(client=client, response=response)\n</code></pre>"},{"location":"api/default/#kalshi_py.api.default.get_exchange_status.asyncio_detailed","title":"<code>kalshi_py.api.default.get_exchange_status.asyncio_detailed(*, client: Union[AuthenticatedClient, Client]) -&gt; Response[GithubComKalshiExchangeInfraSvcApi2ModelExchangeStatus]</code>  <code>async</code>","text":"<p>Get Exchange Status</p> <p>Endpoint for getting the exchange status.</p> <p>Raises:</p> Type Description <code>UnexpectedStatus</code> <p>If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.</p> <code>TimeoutException</code> <p>If the request takes longer than Client.timeout.</p> <p>Returns:</p> Type Description <code>Response[GithubComKalshiExchangeInfraSvcApi2ModelExchangeStatus]</code> <p>Response[GithubComKalshiExchangeInfraSvcApi2ModelExchangeStatus]</p> Source code in <code>kalshi_py/api/default/get_exchange_status.py</code> <pre><code>async def asyncio_detailed(\n    *,\n    client: Union[AuthenticatedClient, Client],\n) -&gt; Response[GithubComKalshiExchangeInfraSvcApi2ModelExchangeStatus]:\n    \"\"\"Get Exchange Status\n\n      Endpoint for getting the exchange status.\n\n    Raises:\n        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.\n        httpx.TimeoutException: If the request takes longer than Client.timeout.\n\n    Returns:\n        Response[GithubComKalshiExchangeInfraSvcApi2ModelExchangeStatus]\n    \"\"\"\n\n    kwargs = _get_kwargs()\n\n    response = await client.get_async_httpx_client().request(**kwargs)\n\n    return _build_response(client=client, response=response)\n</code></pre>"},{"location":"api/default/#get-user-data-timestamp","title":"Get User Data Timestamp","text":"<p>Synchronous API Call</p> <p>Asynchronous API Call</p> <p>Synchronous Detailed Response</p> <p>Asynchronous Detailed Response</p>"},{"location":"api/default/#kalshi_py.api.default.get_user_data_timestamp.sync","title":"<code>kalshi_py.api.default.get_user_data_timestamp.sync(*, client: Union[AuthenticatedClient, Client]) -&gt; Optional[GithubComKalshiExchangeInfraSvcApi2ModelGetUserDataTimestampResponse]</code>","text":"<p>Get User Data Timestamp</p> <p>There is typically a short delay before exchange events are reflected in the API endpoints. Whenever possible, combine API responses to PUT/POST/DELETE requests with websocket data to obtain the most accurate view of the exchange state. This endpoint provides an approximate indication of when the data from the following endpoints was last validated: GetBalance, GetOrder(s), GetFills, GetPositions</p> <p>Raises:</p> Type Description <code>UnexpectedStatus</code> <p>If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.</p> <code>TimeoutException</code> <p>If the request takes longer than Client.timeout.</p> <p>Returns:</p> Type Description <code>Optional[GithubComKalshiExchangeInfraSvcApi2ModelGetUserDataTimestampResponse]</code> <p>GithubComKalshiExchangeInfraSvcApi2ModelGetUserDataTimestampResponse</p> Source code in <code>kalshi_py/api/default/get_user_data_timestamp.py</code> <pre><code>def sync(\n    *,\n    client: Union[AuthenticatedClient, Client],\n) -&gt; Optional[GithubComKalshiExchangeInfraSvcApi2ModelGetUserDataTimestampResponse]:\n    \"\"\"Get User Data Timestamp\n\n      There is typically a short delay before exchange events are reflected in the API endpoints.\n    Whenever possible, combine API responses to PUT/POST/DELETE requests with websocket data to obtain\n    the most accurate view of the exchange state. This endpoint provides an approximate indication of\n    when the data from the following endpoints was last validated: GetBalance, GetOrder(s), GetFills,\n    GetPositions\n\n    Raises:\n        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.\n        httpx.TimeoutException: If the request takes longer than Client.timeout.\n\n    Returns:\n        GithubComKalshiExchangeInfraSvcApi2ModelGetUserDataTimestampResponse\n    \"\"\"\n\n    return sync_detailed(\n        client=client,\n    ).parsed\n</code></pre>"},{"location":"api/default/#kalshi_py.api.default.get_user_data_timestamp.asyncio","title":"<code>kalshi_py.api.default.get_user_data_timestamp.asyncio(*, client: Union[AuthenticatedClient, Client]) -&gt; Optional[GithubComKalshiExchangeInfraSvcApi2ModelGetUserDataTimestampResponse]</code>  <code>async</code>","text":"<p>Get User Data Timestamp</p> <p>There is typically a short delay before exchange events are reflected in the API endpoints. Whenever possible, combine API responses to PUT/POST/DELETE requests with websocket data to obtain the most accurate view of the exchange state. This endpoint provides an approximate indication of when the data from the following endpoints was last validated: GetBalance, GetOrder(s), GetFills, GetPositions</p> <p>Raises:</p> Type Description <code>UnexpectedStatus</code> <p>If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.</p> <code>TimeoutException</code> <p>If the request takes longer than Client.timeout.</p> <p>Returns:</p> Type Description <code>Optional[GithubComKalshiExchangeInfraSvcApi2ModelGetUserDataTimestampResponse]</code> <p>GithubComKalshiExchangeInfraSvcApi2ModelGetUserDataTimestampResponse</p> Source code in <code>kalshi_py/api/default/get_user_data_timestamp.py</code> <pre><code>async def asyncio(\n    *,\n    client: Union[AuthenticatedClient, Client],\n) -&gt; Optional[GithubComKalshiExchangeInfraSvcApi2ModelGetUserDataTimestampResponse]:\n    \"\"\"Get User Data Timestamp\n\n      There is typically a short delay before exchange events are reflected in the API endpoints.\n    Whenever possible, combine API responses to PUT/POST/DELETE requests with websocket data to obtain\n    the most accurate view of the exchange state. This endpoint provides an approximate indication of\n    when the data from the following endpoints was last validated: GetBalance, GetOrder(s), GetFills,\n    GetPositions\n\n    Raises:\n        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.\n        httpx.TimeoutException: If the request takes longer than Client.timeout.\n\n    Returns:\n        GithubComKalshiExchangeInfraSvcApi2ModelGetUserDataTimestampResponse\n    \"\"\"\n\n    return (\n        await asyncio_detailed(\n            client=client,\n        )\n    ).parsed\n</code></pre>"},{"location":"api/default/#kalshi_py.api.default.get_user_data_timestamp.sync_detailed","title":"<code>kalshi_py.api.default.get_user_data_timestamp.sync_detailed(*, client: Union[AuthenticatedClient, Client]) -&gt; Response[GithubComKalshiExchangeInfraSvcApi2ModelGetUserDataTimestampResponse]</code>","text":"<p>Get User Data Timestamp</p> <p>There is typically a short delay before exchange events are reflected in the API endpoints. Whenever possible, combine API responses to PUT/POST/DELETE requests with websocket data to obtain the most accurate view of the exchange state. This endpoint provides an approximate indication of when the data from the following endpoints was last validated: GetBalance, GetOrder(s), GetFills, GetPositions</p> <p>Raises:</p> Type Description <code>UnexpectedStatus</code> <p>If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.</p> <code>TimeoutException</code> <p>If the request takes longer than Client.timeout.</p> <p>Returns:</p> Type Description <code>Response[GithubComKalshiExchangeInfraSvcApi2ModelGetUserDataTimestampResponse]</code> <p>Response[GithubComKalshiExchangeInfraSvcApi2ModelGetUserDataTimestampResponse]</p> Source code in <code>kalshi_py/api/default/get_user_data_timestamp.py</code> <pre><code>def sync_detailed(\n    *,\n    client: Union[AuthenticatedClient, Client],\n) -&gt; Response[GithubComKalshiExchangeInfraSvcApi2ModelGetUserDataTimestampResponse]:\n    \"\"\"Get User Data Timestamp\n\n      There is typically a short delay before exchange events are reflected in the API endpoints.\n    Whenever possible, combine API responses to PUT/POST/DELETE requests with websocket data to obtain\n    the most accurate view of the exchange state. This endpoint provides an approximate indication of\n    when the data from the following endpoints was last validated: GetBalance, GetOrder(s), GetFills,\n    GetPositions\n\n    Raises:\n        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.\n        httpx.TimeoutException: If the request takes longer than Client.timeout.\n\n    Returns:\n        Response[GithubComKalshiExchangeInfraSvcApi2ModelGetUserDataTimestampResponse]\n    \"\"\"\n\n    kwargs = _get_kwargs()\n\n    response = client.get_httpx_client().request(\n        **kwargs,\n    )\n\n    return _build_response(client=client, response=response)\n</code></pre>"},{"location":"api/default/#kalshi_py.api.default.get_user_data_timestamp.asyncio_detailed","title":"<code>kalshi_py.api.default.get_user_data_timestamp.asyncio_detailed(*, client: Union[AuthenticatedClient, Client]) -&gt; Response[GithubComKalshiExchangeInfraSvcApi2ModelGetUserDataTimestampResponse]</code>  <code>async</code>","text":"<p>Get User Data Timestamp</p> <p>There is typically a short delay before exchange events are reflected in the API endpoints. Whenever possible, combine API responses to PUT/POST/DELETE requests with websocket data to obtain the most accurate view of the exchange state. This endpoint provides an approximate indication of when the data from the following endpoints was last validated: GetBalance, GetOrder(s), GetFills, GetPositions</p> <p>Raises:</p> Type Description <code>UnexpectedStatus</code> <p>If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.</p> <code>TimeoutException</code> <p>If the request takes longer than Client.timeout.</p> <p>Returns:</p> Type Description <code>Response[GithubComKalshiExchangeInfraSvcApi2ModelGetUserDataTimestampResponse]</code> <p>Response[GithubComKalshiExchangeInfraSvcApi2ModelGetUserDataTimestampResponse]</p> Source code in <code>kalshi_py/api/default/get_user_data_timestamp.py</code> <pre><code>async def asyncio_detailed(\n    *,\n    client: Union[AuthenticatedClient, Client],\n) -&gt; Response[GithubComKalshiExchangeInfraSvcApi2ModelGetUserDataTimestampResponse]:\n    \"\"\"Get User Data Timestamp\n\n      There is typically a short delay before exchange events are reflected in the API endpoints.\n    Whenever possible, combine API responses to PUT/POST/DELETE requests with websocket data to obtain\n    the most accurate view of the exchange state. This endpoint provides an approximate indication of\n    when the data from the following endpoints was last validated: GetBalance, GetOrder(s), GetFills,\n    GetPositions\n\n    Raises:\n        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.\n        httpx.TimeoutException: If the request takes longer than Client.timeout.\n\n    Returns:\n        Response[GithubComKalshiExchangeInfraSvcApi2ModelGetUserDataTimestampResponse]\n    \"\"\"\n\n    kwargs = _get_kwargs()\n\n    response = await client.get_async_httpx_client().request(**kwargs)\n\n    return _build_response(client=client, response=response)\n</code></pre>"},{"location":"api/market/","title":"Market API Reference","text":""},{"location":"api/market/#endpoints","title":"Endpoints","text":""},{"location":"api/market/#get-event","title":"Get Event","text":"<p>Synchronous API Call</p> <p>Asynchronous API Call</p> <p>Synchronous Detailed Response</p> <p>Asynchronous Detailed Response</p>"},{"location":"api/market/#kalshi_py.api.market.get_event.sync","title":"<code>kalshi_py.api.market.get_event.sync(event_ticker: str, *, client: Union[AuthenticatedClient, Client], with_nested_markets: Union[Unset, bool] = UNSET) -&gt; Optional[GithubComKalshiExchangeInfraSvcApi2ModelGetEventResponse]</code>","text":"<p>Get Event</p> <p>Endpoint for getting data about an event by its ticker.  An event represents a real-world occurrence that can be traded on, such as an election, sports game, or economic indicator release. Events contain one or more markets where users can place trades on different outcomes.</p> <p>Parameters:</p> Name Type Description Default <code>event_ticker</code> <code>str</code> <p>Event ticker</p> required <code>with_nested_markets</code> <code>Union[Unset, bool]</code> <p>If true, markets are included within the event object. If false (default), markets are returned as a separate top-level field in the response.</p> <code>UNSET</code> <p>Raises:</p> Type Description <code>UnexpectedStatus</code> <p>If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.</p> <code>TimeoutException</code> <p>If the request takes longer than Client.timeout.</p> <p>Returns:</p> Type Description <code>Optional[GithubComKalshiExchangeInfraSvcApi2ModelGetEventResponse]</code> <p>GithubComKalshiExchangeInfraSvcApi2ModelGetEventResponse</p> Source code in <code>kalshi_py/api/market/get_event.py</code> <pre><code>def sync(\n    event_ticker: str,\n    *,\n    client: Union[AuthenticatedClient, Client],\n    with_nested_markets: Union[Unset, bool] = UNSET,\n) -&gt; Optional[GithubComKalshiExchangeInfraSvcApi2ModelGetEventResponse]:\n    \"\"\"Get Event\n\n      Endpoint for getting data about an event by its ticker.  An event represents a real-world\n    occurrence that can be traded on, such as an election, sports game, or economic indicator release.\n    Events contain one or more markets where users can place trades on different outcomes.\n\n    Args:\n        event_ticker (str): Event ticker\n        with_nested_markets (Union[Unset, bool]): If true, markets are included within the event\n            object. If false (default), markets are returned as a separate top-level field in the\n            response.\n\n    Raises:\n        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.\n        httpx.TimeoutException: If the request takes longer than Client.timeout.\n\n    Returns:\n        GithubComKalshiExchangeInfraSvcApi2ModelGetEventResponse\n    \"\"\"\n\n    return sync_detailed(\n        event_ticker=event_ticker,\n        client=client,\n        with_nested_markets=with_nested_markets,\n    ).parsed\n</code></pre>"},{"location":"api/market/#kalshi_py.api.market.get_event.asyncio","title":"<code>kalshi_py.api.market.get_event.asyncio(event_ticker: str, *, client: Union[AuthenticatedClient, Client], with_nested_markets: Union[Unset, bool] = UNSET) -&gt; Optional[GithubComKalshiExchangeInfraSvcApi2ModelGetEventResponse]</code>  <code>async</code>","text":"<p>Get Event</p> <p>Endpoint for getting data about an event by its ticker.  An event represents a real-world occurrence that can be traded on, such as an election, sports game, or economic indicator release. Events contain one or more markets where users can place trades on different outcomes.</p> <p>Parameters:</p> Name Type Description Default <code>event_ticker</code> <code>str</code> <p>Event ticker</p> required <code>with_nested_markets</code> <code>Union[Unset, bool]</code> <p>If true, markets are included within the event object. If false (default), markets are returned as a separate top-level field in the response.</p> <code>UNSET</code> <p>Raises:</p> Type Description <code>UnexpectedStatus</code> <p>If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.</p> <code>TimeoutException</code> <p>If the request takes longer than Client.timeout.</p> <p>Returns:</p> Type Description <code>Optional[GithubComKalshiExchangeInfraSvcApi2ModelGetEventResponse]</code> <p>GithubComKalshiExchangeInfraSvcApi2ModelGetEventResponse</p> Source code in <code>kalshi_py/api/market/get_event.py</code> <pre><code>async def asyncio(\n    event_ticker: str,\n    *,\n    client: Union[AuthenticatedClient, Client],\n    with_nested_markets: Union[Unset, bool] = UNSET,\n) -&gt; Optional[GithubComKalshiExchangeInfraSvcApi2ModelGetEventResponse]:\n    \"\"\"Get Event\n\n      Endpoint for getting data about an event by its ticker.  An event represents a real-world\n    occurrence that can be traded on, such as an election, sports game, or economic indicator release.\n    Events contain one or more markets where users can place trades on different outcomes.\n\n    Args:\n        event_ticker (str): Event ticker\n        with_nested_markets (Union[Unset, bool]): If true, markets are included within the event\n            object. If false (default), markets are returned as a separate top-level field in the\n            response.\n\n    Raises:\n        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.\n        httpx.TimeoutException: If the request takes longer than Client.timeout.\n\n    Returns:\n        GithubComKalshiExchangeInfraSvcApi2ModelGetEventResponse\n    \"\"\"\n\n    return (\n        await asyncio_detailed(\n            event_ticker=event_ticker,\n            client=client,\n            with_nested_markets=with_nested_markets,\n        )\n    ).parsed\n</code></pre>"},{"location":"api/market/#kalshi_py.api.market.get_event.sync_detailed","title":"<code>kalshi_py.api.market.get_event.sync_detailed(event_ticker: str, *, client: Union[AuthenticatedClient, Client], with_nested_markets: Union[Unset, bool] = UNSET) -&gt; Response[GithubComKalshiExchangeInfraSvcApi2ModelGetEventResponse]</code>","text":"<p>Get Event</p> <p>Endpoint for getting data about an event by its ticker.  An event represents a real-world occurrence that can be traded on, such as an election, sports game, or economic indicator release. Events contain one or more markets where users can place trades on different outcomes.</p> <p>Parameters:</p> Name Type Description Default <code>event_ticker</code> <code>str</code> <p>Event ticker</p> required <code>with_nested_markets</code> <code>Union[Unset, bool]</code> <p>If true, markets are included within the event object. If false (default), markets are returned as a separate top-level field in the response.</p> <code>UNSET</code> <p>Raises:</p> Type Description <code>UnexpectedStatus</code> <p>If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.</p> <code>TimeoutException</code> <p>If the request takes longer than Client.timeout.</p> <p>Returns:</p> Type Description <code>Response[GithubComKalshiExchangeInfraSvcApi2ModelGetEventResponse]</code> <p>Response[GithubComKalshiExchangeInfraSvcApi2ModelGetEventResponse]</p> Source code in <code>kalshi_py/api/market/get_event.py</code> <pre><code>def sync_detailed(\n    event_ticker: str,\n    *,\n    client: Union[AuthenticatedClient, Client],\n    with_nested_markets: Union[Unset, bool] = UNSET,\n) -&gt; Response[GithubComKalshiExchangeInfraSvcApi2ModelGetEventResponse]:\n    \"\"\"Get Event\n\n      Endpoint for getting data about an event by its ticker.  An event represents a real-world\n    occurrence that can be traded on, such as an election, sports game, or economic indicator release.\n    Events contain one or more markets where users can place trades on different outcomes.\n\n    Args:\n        event_ticker (str): Event ticker\n        with_nested_markets (Union[Unset, bool]): If true, markets are included within the event\n            object. If false (default), markets are returned as a separate top-level field in the\n            response.\n\n    Raises:\n        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.\n        httpx.TimeoutException: If the request takes longer than Client.timeout.\n\n    Returns:\n        Response[GithubComKalshiExchangeInfraSvcApi2ModelGetEventResponse]\n    \"\"\"\n\n    kwargs = _get_kwargs(\n        event_ticker=event_ticker,\n        with_nested_markets=with_nested_markets,\n    )\n\n    response = client.get_httpx_client().request(\n        **kwargs,\n    )\n\n    return _build_response(client=client, response=response)\n</code></pre>"},{"location":"api/market/#kalshi_py.api.market.get_event.asyncio_detailed","title":"<code>kalshi_py.api.market.get_event.asyncio_detailed(event_ticker: str, *, client: Union[AuthenticatedClient, Client], with_nested_markets: Union[Unset, bool] = UNSET) -&gt; Response[GithubComKalshiExchangeInfraSvcApi2ModelGetEventResponse]</code>  <code>async</code>","text":"<p>Get Event</p> <p>Endpoint for getting data about an event by its ticker.  An event represents a real-world occurrence that can be traded on, such as an election, sports game, or economic indicator release. Events contain one or more markets where users can place trades on different outcomes.</p> <p>Parameters:</p> Name Type Description Default <code>event_ticker</code> <code>str</code> <p>Event ticker</p> required <code>with_nested_markets</code> <code>Union[Unset, bool]</code> <p>If true, markets are included within the event object. If false (default), markets are returned as a separate top-level field in the response.</p> <code>UNSET</code> <p>Raises:</p> Type Description <code>UnexpectedStatus</code> <p>If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.</p> <code>TimeoutException</code> <p>If the request takes longer than Client.timeout.</p> <p>Returns:</p> Type Description <code>Response[GithubComKalshiExchangeInfraSvcApi2ModelGetEventResponse]</code> <p>Response[GithubComKalshiExchangeInfraSvcApi2ModelGetEventResponse]</p> Source code in <code>kalshi_py/api/market/get_event.py</code> <pre><code>async def asyncio_detailed(\n    event_ticker: str,\n    *,\n    client: Union[AuthenticatedClient, Client],\n    with_nested_markets: Union[Unset, bool] = UNSET,\n) -&gt; Response[GithubComKalshiExchangeInfraSvcApi2ModelGetEventResponse]:\n    \"\"\"Get Event\n\n      Endpoint for getting data about an event by its ticker.  An event represents a real-world\n    occurrence that can be traded on, such as an election, sports game, or economic indicator release.\n    Events contain one or more markets where users can place trades on different outcomes.\n\n    Args:\n        event_ticker (str): Event ticker\n        with_nested_markets (Union[Unset, bool]): If true, markets are included within the event\n            object. If false (default), markets are returned as a separate top-level field in the\n            response.\n\n    Raises:\n        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.\n        httpx.TimeoutException: If the request takes longer than Client.timeout.\n\n    Returns:\n        Response[GithubComKalshiExchangeInfraSvcApi2ModelGetEventResponse]\n    \"\"\"\n\n    kwargs = _get_kwargs(\n        event_ticker=event_ticker,\n        with_nested_markets=with_nested_markets,\n    )\n\n    response = await client.get_async_httpx_client().request(**kwargs)\n\n    return _build_response(client=client, response=response)\n</code></pre>"},{"location":"api/market/#get-event-metadata","title":"Get Event Metadata","text":"<p>Synchronous API Call</p> <p>Asynchronous API Call</p> <p>Synchronous Detailed Response</p> <p>Asynchronous Detailed Response</p>"},{"location":"api/market/#kalshi_py.api.market.get_event_metadata.sync","title":"<code>kalshi_py.api.market.get_event_metadata.sync(event_ticker: str, *, client: Union[AuthenticatedClient, Client]) -&gt; Optional[GithubComKalshiExchangeInfraSvcApi2ModelGetEventMetadataResponse]</code>","text":"<p>Get Event Metadata</p> <p>Endpoint for getting metadata about an event by its ticker.  Returns only the metadata information for an event.</p> <p>Parameters:</p> Name Type Description Default <code>event_ticker</code> <code>str</code> <p>Event ticker</p> required <p>Raises:</p> Type Description <code>UnexpectedStatus</code> <p>If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.</p> <code>TimeoutException</code> <p>If the request takes longer than Client.timeout.</p> <p>Returns:</p> Type Description <code>Optional[GithubComKalshiExchangeInfraSvcApi2ModelGetEventMetadataResponse]</code> <p>GithubComKalshiExchangeInfraSvcApi2ModelGetEventMetadataResponse</p> Source code in <code>kalshi_py/api/market/get_event_metadata.py</code> <pre><code>def sync(\n    event_ticker: str,\n    *,\n    client: Union[AuthenticatedClient, Client],\n) -&gt; Optional[GithubComKalshiExchangeInfraSvcApi2ModelGetEventMetadataResponse]:\n    \"\"\"Get Event Metadata\n\n      Endpoint for getting metadata about an event by its ticker.  Returns only the metadata information\n    for an event.\n\n    Args:\n        event_ticker (str): Event ticker\n\n    Raises:\n        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.\n        httpx.TimeoutException: If the request takes longer than Client.timeout.\n\n    Returns:\n        GithubComKalshiExchangeInfraSvcApi2ModelGetEventMetadataResponse\n    \"\"\"\n\n    return sync_detailed(\n        event_ticker=event_ticker,\n        client=client,\n    ).parsed\n</code></pre>"},{"location":"api/market/#kalshi_py.api.market.get_event_metadata.asyncio","title":"<code>kalshi_py.api.market.get_event_metadata.asyncio(event_ticker: str, *, client: Union[AuthenticatedClient, Client]) -&gt; Optional[GithubComKalshiExchangeInfraSvcApi2ModelGetEventMetadataResponse]</code>  <code>async</code>","text":"<p>Get Event Metadata</p> <p>Endpoint for getting metadata about an event by its ticker.  Returns only the metadata information for an event.</p> <p>Parameters:</p> Name Type Description Default <code>event_ticker</code> <code>str</code> <p>Event ticker</p> required <p>Raises:</p> Type Description <code>UnexpectedStatus</code> <p>If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.</p> <code>TimeoutException</code> <p>If the request takes longer than Client.timeout.</p> <p>Returns:</p> Type Description <code>Optional[GithubComKalshiExchangeInfraSvcApi2ModelGetEventMetadataResponse]</code> <p>GithubComKalshiExchangeInfraSvcApi2ModelGetEventMetadataResponse</p> Source code in <code>kalshi_py/api/market/get_event_metadata.py</code> <pre><code>async def asyncio(\n    event_ticker: str,\n    *,\n    client: Union[AuthenticatedClient, Client],\n) -&gt; Optional[GithubComKalshiExchangeInfraSvcApi2ModelGetEventMetadataResponse]:\n    \"\"\"Get Event Metadata\n\n      Endpoint for getting metadata about an event by its ticker.  Returns only the metadata information\n    for an event.\n\n    Args:\n        event_ticker (str): Event ticker\n\n    Raises:\n        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.\n        httpx.TimeoutException: If the request takes longer than Client.timeout.\n\n    Returns:\n        GithubComKalshiExchangeInfraSvcApi2ModelGetEventMetadataResponse\n    \"\"\"\n\n    return (\n        await asyncio_detailed(\n            event_ticker=event_ticker,\n            client=client,\n        )\n    ).parsed\n</code></pre>"},{"location":"api/market/#kalshi_py.api.market.get_event_metadata.sync_detailed","title":"<code>kalshi_py.api.market.get_event_metadata.sync_detailed(event_ticker: str, *, client: Union[AuthenticatedClient, Client]) -&gt; Response[GithubComKalshiExchangeInfraSvcApi2ModelGetEventMetadataResponse]</code>","text":"<p>Get Event Metadata</p> <p>Endpoint for getting metadata about an event by its ticker.  Returns only the metadata information for an event.</p> <p>Parameters:</p> Name Type Description Default <code>event_ticker</code> <code>str</code> <p>Event ticker</p> required <p>Raises:</p> Type Description <code>UnexpectedStatus</code> <p>If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.</p> <code>TimeoutException</code> <p>If the request takes longer than Client.timeout.</p> <p>Returns:</p> Type Description <code>Response[GithubComKalshiExchangeInfraSvcApi2ModelGetEventMetadataResponse]</code> <p>Response[GithubComKalshiExchangeInfraSvcApi2ModelGetEventMetadataResponse]</p> Source code in <code>kalshi_py/api/market/get_event_metadata.py</code> <pre><code>def sync_detailed(\n    event_ticker: str,\n    *,\n    client: Union[AuthenticatedClient, Client],\n) -&gt; Response[GithubComKalshiExchangeInfraSvcApi2ModelGetEventMetadataResponse]:\n    \"\"\"Get Event Metadata\n\n      Endpoint for getting metadata about an event by its ticker.  Returns only the metadata information\n    for an event.\n\n    Args:\n        event_ticker (str): Event ticker\n\n    Raises:\n        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.\n        httpx.TimeoutException: If the request takes longer than Client.timeout.\n\n    Returns:\n        Response[GithubComKalshiExchangeInfraSvcApi2ModelGetEventMetadataResponse]\n    \"\"\"\n\n    kwargs = _get_kwargs(\n        event_ticker=event_ticker,\n    )\n\n    response = client.get_httpx_client().request(\n        **kwargs,\n    )\n\n    return _build_response(client=client, response=response)\n</code></pre>"},{"location":"api/market/#kalshi_py.api.market.get_event_metadata.asyncio_detailed","title":"<code>kalshi_py.api.market.get_event_metadata.asyncio_detailed(event_ticker: str, *, client: Union[AuthenticatedClient, Client]) -&gt; Response[GithubComKalshiExchangeInfraSvcApi2ModelGetEventMetadataResponse]</code>  <code>async</code>","text":"<p>Get Event Metadata</p> <p>Endpoint for getting metadata about an event by its ticker.  Returns only the metadata information for an event.</p> <p>Parameters:</p> Name Type Description Default <code>event_ticker</code> <code>str</code> <p>Event ticker</p> required <p>Raises:</p> Type Description <code>UnexpectedStatus</code> <p>If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.</p> <code>TimeoutException</code> <p>If the request takes longer than Client.timeout.</p> <p>Returns:</p> Type Description <code>Response[GithubComKalshiExchangeInfraSvcApi2ModelGetEventMetadataResponse]</code> <p>Response[GithubComKalshiExchangeInfraSvcApi2ModelGetEventMetadataResponse]</p> Source code in <code>kalshi_py/api/market/get_event_metadata.py</code> <pre><code>async def asyncio_detailed(\n    event_ticker: str,\n    *,\n    client: Union[AuthenticatedClient, Client],\n) -&gt; Response[GithubComKalshiExchangeInfraSvcApi2ModelGetEventMetadataResponse]:\n    \"\"\"Get Event Metadata\n\n      Endpoint for getting metadata about an event by its ticker.  Returns only the metadata information\n    for an event.\n\n    Args:\n        event_ticker (str): Event ticker\n\n    Raises:\n        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.\n        httpx.TimeoutException: If the request takes longer than Client.timeout.\n\n    Returns:\n        Response[GithubComKalshiExchangeInfraSvcApi2ModelGetEventMetadataResponse]\n    \"\"\"\n\n    kwargs = _get_kwargs(\n        event_ticker=event_ticker,\n    )\n\n    response = await client.get_async_httpx_client().request(**kwargs)\n\n    return _build_response(client=client, response=response)\n</code></pre>"},{"location":"api/market/#get-events","title":"Get Events","text":"<p>Synchronous API Call</p> <p>Asynchronous API Call</p> <p>Synchronous Detailed Response</p> <p>Asynchronous Detailed Response</p>"},{"location":"api/market/#kalshi_py.api.market.get_events.sync","title":"<code>kalshi_py.api.market.get_events.sync(*, client: Union[AuthenticatedClient, Client], limit: Union[Unset, int] = UNSET, cursor: Union[Unset, str] = UNSET, with_nested_markets: Union[Unset, bool] = UNSET, status: Union[Unset, str] = UNSET, series_ticker: Union[Unset, str] = UNSET) -&gt; Optional[GithubComKalshiExchangeInfraSvcApi2ModelGetEventsResponse]</code>","text":"<p>Get Events</p> <p>Endpoint for getting data about all events.  An event represents a real-world occurrence that can be traded on, such as an election, sports game, or economic indicator release. Events contain one or more markets where users can place trades on different outcomes.  This endpoint returns a paginated response. Use the 'limit' parameter to control page size (1-200, defaults to 100). The response includes a 'cursor' field - pass this value in the 'cursor' parameter of your next request to get the next page. An empty cursor indicates no more pages are available.</p> <p>Parameters:</p> Name Type Description Default <code>limit</code> <code>Union[Unset, int]</code> <p>Parameter to specify the number of results per page. Defaults to 100. Maximum value is 200.</p> <code>UNSET</code> <code>cursor</code> <code>Union[Unset, str]</code> <p>Parameter to specify the pagination cursor. Use the cursor value returned from the previous response to get the next page of results. Leave empty for the first page.</p> <code>UNSET</code> <code>with_nested_markets</code> <code>Union[Unset, bool]</code> <p>Parameter to specify if nested markets should be included in the response. When true, each event will include a 'markets' field containing a list of Market objects associated with that event.</p> <code>UNSET</code> <code>status</code> <code>Union[Unset, str]</code> <p>Filter by event status. Possible values: 'open', 'closed', 'settled'. Leave empty to return events with any status.</p> <code>UNSET</code> <code>series_ticker</code> <code>Union[Unset, str]</code> <p>Filter events by series ticker. Returns only events belonging to the specified series.</p> <code>UNSET</code> <p>Raises:</p> Type Description <code>UnexpectedStatus</code> <p>If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.</p> <code>TimeoutException</code> <p>If the request takes longer than Client.timeout.</p> <p>Returns:</p> Type Description <code>Optional[GithubComKalshiExchangeInfraSvcApi2ModelGetEventsResponse]</code> <p>GithubComKalshiExchangeInfraSvcApi2ModelGetEventsResponse</p> Source code in <code>kalshi_py/api/market/get_events.py</code> <pre><code>def sync(\n    *,\n    client: Union[AuthenticatedClient, Client],\n    limit: Union[Unset, int] = UNSET,\n    cursor: Union[Unset, str] = UNSET,\n    with_nested_markets: Union[Unset, bool] = UNSET,\n    status: Union[Unset, str] = UNSET,\n    series_ticker: Union[Unset, str] = UNSET,\n) -&gt; Optional[GithubComKalshiExchangeInfraSvcApi2ModelGetEventsResponse]:\n    \"\"\"Get Events\n\n      Endpoint for getting data about all events.  An event represents a real-world occurrence that can\n    be traded on, such as an election, sports game, or economic indicator release. Events contain one or\n    more markets where users can place trades on different outcomes.  This endpoint returns a paginated\n    response. Use the 'limit' parameter to control page size (1-200, defaults to 100). The response\n    includes a 'cursor' field - pass this value in the 'cursor' parameter of your next request to get\n    the next page. An empty cursor indicates no more pages are available.\n\n    Args:\n        limit (Union[Unset, int]): Parameter to specify the number of results per page. Defaults\n            to 100. Maximum value is 200.\n        cursor (Union[Unset, str]): Parameter to specify the pagination cursor. Use the cursor\n            value returned from the previous response to get the next page of results. Leave empty for\n            the first page.\n        with_nested_markets (Union[Unset, bool]): Parameter to specify if nested markets should be\n            included in the response. When true, each event will include a 'markets' field containing\n            a list of Market objects associated with that event.\n        status (Union[Unset, str]): Filter by event status. Possible values: 'open', 'closed',\n            'settled'. Leave empty to return events with any status.\n        series_ticker (Union[Unset, str]): Filter events by series ticker. Returns only events\n            belonging to the specified series.\n\n    Raises:\n        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.\n        httpx.TimeoutException: If the request takes longer than Client.timeout.\n\n    Returns:\n        GithubComKalshiExchangeInfraSvcApi2ModelGetEventsResponse\n    \"\"\"\n\n    return sync_detailed(\n        client=client,\n        limit=limit,\n        cursor=cursor,\n        with_nested_markets=with_nested_markets,\n        status=status,\n        series_ticker=series_ticker,\n    ).parsed\n</code></pre>"},{"location":"api/market/#kalshi_py.api.market.get_events.asyncio","title":"<code>kalshi_py.api.market.get_events.asyncio(*, client: Union[AuthenticatedClient, Client], limit: Union[Unset, int] = UNSET, cursor: Union[Unset, str] = UNSET, with_nested_markets: Union[Unset, bool] = UNSET, status: Union[Unset, str] = UNSET, series_ticker: Union[Unset, str] = UNSET) -&gt; Optional[GithubComKalshiExchangeInfraSvcApi2ModelGetEventsResponse]</code>  <code>async</code>","text":"<p>Get Events</p> <p>Endpoint for getting data about all events.  An event represents a real-world occurrence that can be traded on, such as an election, sports game, or economic indicator release. Events contain one or more markets where users can place trades on different outcomes.  This endpoint returns a paginated response. Use the 'limit' parameter to control page size (1-200, defaults to 100). The response includes a 'cursor' field - pass this value in the 'cursor' parameter of your next request to get the next page. An empty cursor indicates no more pages are available.</p> <p>Parameters:</p> Name Type Description Default <code>limit</code> <code>Union[Unset, int]</code> <p>Parameter to specify the number of results per page. Defaults to 100. Maximum value is 200.</p> <code>UNSET</code> <code>cursor</code> <code>Union[Unset, str]</code> <p>Parameter to specify the pagination cursor. Use the cursor value returned from the previous response to get the next page of results. Leave empty for the first page.</p> <code>UNSET</code> <code>with_nested_markets</code> <code>Union[Unset, bool]</code> <p>Parameter to specify if nested markets should be included in the response. When true, each event will include a 'markets' field containing a list of Market objects associated with that event.</p> <code>UNSET</code> <code>status</code> <code>Union[Unset, str]</code> <p>Filter by event status. Possible values: 'open', 'closed', 'settled'. Leave empty to return events with any status.</p> <code>UNSET</code> <code>series_ticker</code> <code>Union[Unset, str]</code> <p>Filter events by series ticker. Returns only events belonging to the specified series.</p> <code>UNSET</code> <p>Raises:</p> Type Description <code>UnexpectedStatus</code> <p>If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.</p> <code>TimeoutException</code> <p>If the request takes longer than Client.timeout.</p> <p>Returns:</p> Type Description <code>Optional[GithubComKalshiExchangeInfraSvcApi2ModelGetEventsResponse]</code> <p>GithubComKalshiExchangeInfraSvcApi2ModelGetEventsResponse</p> Source code in <code>kalshi_py/api/market/get_events.py</code> <pre><code>async def asyncio(\n    *,\n    client: Union[AuthenticatedClient, Client],\n    limit: Union[Unset, int] = UNSET,\n    cursor: Union[Unset, str] = UNSET,\n    with_nested_markets: Union[Unset, bool] = UNSET,\n    status: Union[Unset, str] = UNSET,\n    series_ticker: Union[Unset, str] = UNSET,\n) -&gt; Optional[GithubComKalshiExchangeInfraSvcApi2ModelGetEventsResponse]:\n    \"\"\"Get Events\n\n      Endpoint for getting data about all events.  An event represents a real-world occurrence that can\n    be traded on, such as an election, sports game, or economic indicator release. Events contain one or\n    more markets where users can place trades on different outcomes.  This endpoint returns a paginated\n    response. Use the 'limit' parameter to control page size (1-200, defaults to 100). The response\n    includes a 'cursor' field - pass this value in the 'cursor' parameter of your next request to get\n    the next page. An empty cursor indicates no more pages are available.\n\n    Args:\n        limit (Union[Unset, int]): Parameter to specify the number of results per page. Defaults\n            to 100. Maximum value is 200.\n        cursor (Union[Unset, str]): Parameter to specify the pagination cursor. Use the cursor\n            value returned from the previous response to get the next page of results. Leave empty for\n            the first page.\n        with_nested_markets (Union[Unset, bool]): Parameter to specify if nested markets should be\n            included in the response. When true, each event will include a 'markets' field containing\n            a list of Market objects associated with that event.\n        status (Union[Unset, str]): Filter by event status. Possible values: 'open', 'closed',\n            'settled'. Leave empty to return events with any status.\n        series_ticker (Union[Unset, str]): Filter events by series ticker. Returns only events\n            belonging to the specified series.\n\n    Raises:\n        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.\n        httpx.TimeoutException: If the request takes longer than Client.timeout.\n\n    Returns:\n        GithubComKalshiExchangeInfraSvcApi2ModelGetEventsResponse\n    \"\"\"\n\n    return (\n        await asyncio_detailed(\n            client=client,\n            limit=limit,\n            cursor=cursor,\n            with_nested_markets=with_nested_markets,\n            status=status,\n            series_ticker=series_ticker,\n        )\n    ).parsed\n</code></pre>"},{"location":"api/market/#kalshi_py.api.market.get_events.sync_detailed","title":"<code>kalshi_py.api.market.get_events.sync_detailed(*, client: Union[AuthenticatedClient, Client], limit: Union[Unset, int] = UNSET, cursor: Union[Unset, str] = UNSET, with_nested_markets: Union[Unset, bool] = UNSET, status: Union[Unset, str] = UNSET, series_ticker: Union[Unset, str] = UNSET) -&gt; Response[GithubComKalshiExchangeInfraSvcApi2ModelGetEventsResponse]</code>","text":"<p>Get Events</p> <p>Endpoint for getting data about all events.  An event represents a real-world occurrence that can be traded on, such as an election, sports game, or economic indicator release. Events contain one or more markets where users can place trades on different outcomes.  This endpoint returns a paginated response. Use the 'limit' parameter to control page size (1-200, defaults to 100). The response includes a 'cursor' field - pass this value in the 'cursor' parameter of your next request to get the next page. An empty cursor indicates no more pages are available.</p> <p>Parameters:</p> Name Type Description Default <code>limit</code> <code>Union[Unset, int]</code> <p>Parameter to specify the number of results per page. Defaults to 100. Maximum value is 200.</p> <code>UNSET</code> <code>cursor</code> <code>Union[Unset, str]</code> <p>Parameter to specify the pagination cursor. Use the cursor value returned from the previous response to get the next page of results. Leave empty for the first page.</p> <code>UNSET</code> <code>with_nested_markets</code> <code>Union[Unset, bool]</code> <p>Parameter to specify if nested markets should be included in the response. When true, each event will include a 'markets' field containing a list of Market objects associated with that event.</p> <code>UNSET</code> <code>status</code> <code>Union[Unset, str]</code> <p>Filter by event status. Possible values: 'open', 'closed', 'settled'. Leave empty to return events with any status.</p> <code>UNSET</code> <code>series_ticker</code> <code>Union[Unset, str]</code> <p>Filter events by series ticker. Returns only events belonging to the specified series.</p> <code>UNSET</code> <p>Raises:</p> Type Description <code>UnexpectedStatus</code> <p>If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.</p> <code>TimeoutException</code> <p>If the request takes longer than Client.timeout.</p> <p>Returns:</p> Type Description <code>Response[GithubComKalshiExchangeInfraSvcApi2ModelGetEventsResponse]</code> <p>Response[GithubComKalshiExchangeInfraSvcApi2ModelGetEventsResponse]</p> Source code in <code>kalshi_py/api/market/get_events.py</code> <pre><code>def sync_detailed(\n    *,\n    client: Union[AuthenticatedClient, Client],\n    limit: Union[Unset, int] = UNSET,\n    cursor: Union[Unset, str] = UNSET,\n    with_nested_markets: Union[Unset, bool] = UNSET,\n    status: Union[Unset, str] = UNSET,\n    series_ticker: Union[Unset, str] = UNSET,\n) -&gt; Response[GithubComKalshiExchangeInfraSvcApi2ModelGetEventsResponse]:\n    \"\"\"Get Events\n\n      Endpoint for getting data about all events.  An event represents a real-world occurrence that can\n    be traded on, such as an election, sports game, or economic indicator release. Events contain one or\n    more markets where users can place trades on different outcomes.  This endpoint returns a paginated\n    response. Use the 'limit' parameter to control page size (1-200, defaults to 100). The response\n    includes a 'cursor' field - pass this value in the 'cursor' parameter of your next request to get\n    the next page. An empty cursor indicates no more pages are available.\n\n    Args:\n        limit (Union[Unset, int]): Parameter to specify the number of results per page. Defaults\n            to 100. Maximum value is 200.\n        cursor (Union[Unset, str]): Parameter to specify the pagination cursor. Use the cursor\n            value returned from the previous response to get the next page of results. Leave empty for\n            the first page.\n        with_nested_markets (Union[Unset, bool]): Parameter to specify if nested markets should be\n            included in the response. When true, each event will include a 'markets' field containing\n            a list of Market objects associated with that event.\n        status (Union[Unset, str]): Filter by event status. Possible values: 'open', 'closed',\n            'settled'. Leave empty to return events with any status.\n        series_ticker (Union[Unset, str]): Filter events by series ticker. Returns only events\n            belonging to the specified series.\n\n    Raises:\n        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.\n        httpx.TimeoutException: If the request takes longer than Client.timeout.\n\n    Returns:\n        Response[GithubComKalshiExchangeInfraSvcApi2ModelGetEventsResponse]\n    \"\"\"\n\n    kwargs = _get_kwargs(\n        limit=limit,\n        cursor=cursor,\n        with_nested_markets=with_nested_markets,\n        status=status,\n        series_ticker=series_ticker,\n    )\n\n    response = client.get_httpx_client().request(\n        **kwargs,\n    )\n\n    return _build_response(client=client, response=response)\n</code></pre>"},{"location":"api/market/#kalshi_py.api.market.get_events.asyncio_detailed","title":"<code>kalshi_py.api.market.get_events.asyncio_detailed(*, client: Union[AuthenticatedClient, Client], limit: Union[Unset, int] = UNSET, cursor: Union[Unset, str] = UNSET, with_nested_markets: Union[Unset, bool] = UNSET, status: Union[Unset, str] = UNSET, series_ticker: Union[Unset, str] = UNSET) -&gt; Response[GithubComKalshiExchangeInfraSvcApi2ModelGetEventsResponse]</code>  <code>async</code>","text":"<p>Get Events</p> <p>Endpoint for getting data about all events.  An event represents a real-world occurrence that can be traded on, such as an election, sports game, or economic indicator release. Events contain one or more markets where users can place trades on different outcomes.  This endpoint returns a paginated response. Use the 'limit' parameter to control page size (1-200, defaults to 100). The response includes a 'cursor' field - pass this value in the 'cursor' parameter of your next request to get the next page. An empty cursor indicates no more pages are available.</p> <p>Parameters:</p> Name Type Description Default <code>limit</code> <code>Union[Unset, int]</code> <p>Parameter to specify the number of results per page. Defaults to 100. Maximum value is 200.</p> <code>UNSET</code> <code>cursor</code> <code>Union[Unset, str]</code> <p>Parameter to specify the pagination cursor. Use the cursor value returned from the previous response to get the next page of results. Leave empty for the first page.</p> <code>UNSET</code> <code>with_nested_markets</code> <code>Union[Unset, bool]</code> <p>Parameter to specify if nested markets should be included in the response. When true, each event will include a 'markets' field containing a list of Market objects associated with that event.</p> <code>UNSET</code> <code>status</code> <code>Union[Unset, str]</code> <p>Filter by event status. Possible values: 'open', 'closed', 'settled'. Leave empty to return events with any status.</p> <code>UNSET</code> <code>series_ticker</code> <code>Union[Unset, str]</code> <p>Filter events by series ticker. Returns only events belonging to the specified series.</p> <code>UNSET</code> <p>Raises:</p> Type Description <code>UnexpectedStatus</code> <p>If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.</p> <code>TimeoutException</code> <p>If the request takes longer than Client.timeout.</p> <p>Returns:</p> Type Description <code>Response[GithubComKalshiExchangeInfraSvcApi2ModelGetEventsResponse]</code> <p>Response[GithubComKalshiExchangeInfraSvcApi2ModelGetEventsResponse]</p> Source code in <code>kalshi_py/api/market/get_events.py</code> <pre><code>async def asyncio_detailed(\n    *,\n    client: Union[AuthenticatedClient, Client],\n    limit: Union[Unset, int] = UNSET,\n    cursor: Union[Unset, str] = UNSET,\n    with_nested_markets: Union[Unset, bool] = UNSET,\n    status: Union[Unset, str] = UNSET,\n    series_ticker: Union[Unset, str] = UNSET,\n) -&gt; Response[GithubComKalshiExchangeInfraSvcApi2ModelGetEventsResponse]:\n    \"\"\"Get Events\n\n      Endpoint for getting data about all events.  An event represents a real-world occurrence that can\n    be traded on, such as an election, sports game, or economic indicator release. Events contain one or\n    more markets where users can place trades on different outcomes.  This endpoint returns a paginated\n    response. Use the 'limit' parameter to control page size (1-200, defaults to 100). The response\n    includes a 'cursor' field - pass this value in the 'cursor' parameter of your next request to get\n    the next page. An empty cursor indicates no more pages are available.\n\n    Args:\n        limit (Union[Unset, int]): Parameter to specify the number of results per page. Defaults\n            to 100. Maximum value is 200.\n        cursor (Union[Unset, str]): Parameter to specify the pagination cursor. Use the cursor\n            value returned from the previous response to get the next page of results. Leave empty for\n            the first page.\n        with_nested_markets (Union[Unset, bool]): Parameter to specify if nested markets should be\n            included in the response. When true, each event will include a 'markets' field containing\n            a list of Market objects associated with that event.\n        status (Union[Unset, str]): Filter by event status. Possible values: 'open', 'closed',\n            'settled'. Leave empty to return events with any status.\n        series_ticker (Union[Unset, str]): Filter events by series ticker. Returns only events\n            belonging to the specified series.\n\n    Raises:\n        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.\n        httpx.TimeoutException: If the request takes longer than Client.timeout.\n\n    Returns:\n        Response[GithubComKalshiExchangeInfraSvcApi2ModelGetEventsResponse]\n    \"\"\"\n\n    kwargs = _get_kwargs(\n        limit=limit,\n        cursor=cursor,\n        with_nested_markets=with_nested_markets,\n        status=status,\n        series_ticker=series_ticker,\n    )\n\n    response = await client.get_async_httpx_client().request(**kwargs)\n\n    return _build_response(client=client, response=response)\n</code></pre>"},{"location":"api/market/#get-market","title":"Get Market","text":"<p>Synchronous API Call</p> <p>Asynchronous API Call</p> <p>Synchronous Detailed Response</p> <p>Asynchronous Detailed Response</p>"},{"location":"api/market/#kalshi_py.api.market.get_market.sync","title":"<code>kalshi_py.api.market.get_market.sync(ticker: str, *, client: Union[AuthenticatedClient, Client]) -&gt; Optional[GithubComKalshiExchangeInfraSvcApi2ModelGetMarketResponse]</code>","text":"<p>Get Market</p> <p>Endpoint for getting data about a specific market by its ticker. A market represents a specific binary outcome within an event that users can trade on (e.g., \\\"Will candidate X win?\\\"). Markets have yes/no positions, current prices, volume, and settlement rules.</p> <p>Parameters:</p> Name Type Description Default <code>ticker</code> <code>str</code> <p>Market ticker - unique identifier for the specific market</p> required <p>Raises:</p> Type Description <code>UnexpectedStatus</code> <p>If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.</p> <code>TimeoutException</code> <p>If the request takes longer than Client.timeout.</p> <p>Returns:</p> Type Description <code>Optional[GithubComKalshiExchangeInfraSvcApi2ModelGetMarketResponse]</code> <p>GithubComKalshiExchangeInfraSvcApi2ModelGetMarketResponse</p> Source code in <code>kalshi_py/api/market/get_market.py</code> <pre><code>def sync(\n    ticker: str,\n    *,\n    client: Union[AuthenticatedClient, Client],\n) -&gt; Optional[GithubComKalshiExchangeInfraSvcApi2ModelGetMarketResponse]:\n    r\"\"\"Get Market\n\n      Endpoint for getting data about a specific market by its ticker. A market represents a specific\n    binary outcome within an event that users can trade on (e.g., \\\"Will candidate X win?\\\"). Markets\n    have yes/no positions, current prices, volume, and settlement rules.\n\n    Args:\n        ticker (str): Market ticker - unique identifier for the specific market\n\n    Raises:\n        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.\n        httpx.TimeoutException: If the request takes longer than Client.timeout.\n\n    Returns:\n        GithubComKalshiExchangeInfraSvcApi2ModelGetMarketResponse\n    \"\"\"\n\n    return sync_detailed(\n        ticker=ticker,\n        client=client,\n    ).parsed\n</code></pre>"},{"location":"api/market/#kalshi_py.api.market.get_market.asyncio","title":"<code>kalshi_py.api.market.get_market.asyncio(ticker: str, *, client: Union[AuthenticatedClient, Client]) -&gt; Optional[GithubComKalshiExchangeInfraSvcApi2ModelGetMarketResponse]</code>  <code>async</code>","text":"<p>Get Market</p> <p>Endpoint for getting data about a specific market by its ticker. A market represents a specific binary outcome within an event that users can trade on (e.g., \\\"Will candidate X win?\\\"). Markets have yes/no positions, current prices, volume, and settlement rules.</p> <p>Parameters:</p> Name Type Description Default <code>ticker</code> <code>str</code> <p>Market ticker - unique identifier for the specific market</p> required <p>Raises:</p> Type Description <code>UnexpectedStatus</code> <p>If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.</p> <code>TimeoutException</code> <p>If the request takes longer than Client.timeout.</p> <p>Returns:</p> Type Description <code>Optional[GithubComKalshiExchangeInfraSvcApi2ModelGetMarketResponse]</code> <p>GithubComKalshiExchangeInfraSvcApi2ModelGetMarketResponse</p> Source code in <code>kalshi_py/api/market/get_market.py</code> <pre><code>async def asyncio(\n    ticker: str,\n    *,\n    client: Union[AuthenticatedClient, Client],\n) -&gt; Optional[GithubComKalshiExchangeInfraSvcApi2ModelGetMarketResponse]:\n    r\"\"\"Get Market\n\n      Endpoint for getting data about a specific market by its ticker. A market represents a specific\n    binary outcome within an event that users can trade on (e.g., \\\"Will candidate X win?\\\"). Markets\n    have yes/no positions, current prices, volume, and settlement rules.\n\n    Args:\n        ticker (str): Market ticker - unique identifier for the specific market\n\n    Raises:\n        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.\n        httpx.TimeoutException: If the request takes longer than Client.timeout.\n\n    Returns:\n        GithubComKalshiExchangeInfraSvcApi2ModelGetMarketResponse\n    \"\"\"\n\n    return (\n        await asyncio_detailed(\n            ticker=ticker,\n            client=client,\n        )\n    ).parsed\n</code></pre>"},{"location":"api/market/#kalshi_py.api.market.get_market.sync_detailed","title":"<code>kalshi_py.api.market.get_market.sync_detailed(ticker: str, *, client: Union[AuthenticatedClient, Client]) -&gt; Response[GithubComKalshiExchangeInfraSvcApi2ModelGetMarketResponse]</code>","text":"<p>Get Market</p> <p>Endpoint for getting data about a specific market by its ticker. A market represents a specific binary outcome within an event that users can trade on (e.g., \\\"Will candidate X win?\\\"). Markets have yes/no positions, current prices, volume, and settlement rules.</p> <p>Parameters:</p> Name Type Description Default <code>ticker</code> <code>str</code> <p>Market ticker - unique identifier for the specific market</p> required <p>Raises:</p> Type Description <code>UnexpectedStatus</code> <p>If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.</p> <code>TimeoutException</code> <p>If the request takes longer than Client.timeout.</p> <p>Returns:</p> Type Description <code>Response[GithubComKalshiExchangeInfraSvcApi2ModelGetMarketResponse]</code> <p>Response[GithubComKalshiExchangeInfraSvcApi2ModelGetMarketResponse]</p> Source code in <code>kalshi_py/api/market/get_market.py</code> <pre><code>def sync_detailed(\n    ticker: str,\n    *,\n    client: Union[AuthenticatedClient, Client],\n) -&gt; Response[GithubComKalshiExchangeInfraSvcApi2ModelGetMarketResponse]:\n    r\"\"\"Get Market\n\n      Endpoint for getting data about a specific market by its ticker. A market represents a specific\n    binary outcome within an event that users can trade on (e.g., \\\"Will candidate X win?\\\"). Markets\n    have yes/no positions, current prices, volume, and settlement rules.\n\n    Args:\n        ticker (str): Market ticker - unique identifier for the specific market\n\n    Raises:\n        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.\n        httpx.TimeoutException: If the request takes longer than Client.timeout.\n\n    Returns:\n        Response[GithubComKalshiExchangeInfraSvcApi2ModelGetMarketResponse]\n    \"\"\"\n\n    kwargs = _get_kwargs(\n        ticker=ticker,\n    )\n\n    response = client.get_httpx_client().request(\n        **kwargs,\n    )\n\n    return _build_response(client=client, response=response)\n</code></pre>"},{"location":"api/market/#kalshi_py.api.market.get_market.asyncio_detailed","title":"<code>kalshi_py.api.market.get_market.asyncio_detailed(ticker: str, *, client: Union[AuthenticatedClient, Client]) -&gt; Response[GithubComKalshiExchangeInfraSvcApi2ModelGetMarketResponse]</code>  <code>async</code>","text":"<p>Get Market</p> <p>Endpoint for getting data about a specific market by its ticker. A market represents a specific binary outcome within an event that users can trade on (e.g., \\\"Will candidate X win?\\\"). Markets have yes/no positions, current prices, volume, and settlement rules.</p> <p>Parameters:</p> Name Type Description Default <code>ticker</code> <code>str</code> <p>Market ticker - unique identifier for the specific market</p> required <p>Raises:</p> Type Description <code>UnexpectedStatus</code> <p>If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.</p> <code>TimeoutException</code> <p>If the request takes longer than Client.timeout.</p> <p>Returns:</p> Type Description <code>Response[GithubComKalshiExchangeInfraSvcApi2ModelGetMarketResponse]</code> <p>Response[GithubComKalshiExchangeInfraSvcApi2ModelGetMarketResponse]</p> Source code in <code>kalshi_py/api/market/get_market.py</code> <pre><code>async def asyncio_detailed(\n    ticker: str,\n    *,\n    client: Union[AuthenticatedClient, Client],\n) -&gt; Response[GithubComKalshiExchangeInfraSvcApi2ModelGetMarketResponse]:\n    r\"\"\"Get Market\n\n      Endpoint for getting data about a specific market by its ticker. A market represents a specific\n    binary outcome within an event that users can trade on (e.g., \\\"Will candidate X win?\\\"). Markets\n    have yes/no positions, current prices, volume, and settlement rules.\n\n    Args:\n        ticker (str): Market ticker - unique identifier for the specific market\n\n    Raises:\n        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.\n        httpx.TimeoutException: If the request takes longer than Client.timeout.\n\n    Returns:\n        Response[GithubComKalshiExchangeInfraSvcApi2ModelGetMarketResponse]\n    \"\"\"\n\n    kwargs = _get_kwargs(\n        ticker=ticker,\n    )\n\n    response = await client.get_async_httpx_client().request(**kwargs)\n\n    return _build_response(client=client, response=response)\n</code></pre>"},{"location":"api/market/#get-market-candlesticks","title":"Get Market Candlesticks","text":"<p>Synchronous API Call</p> <p>Asynchronous API Call</p> <p>Synchronous Detailed Response</p> <p>Asynchronous Detailed Response</p>"},{"location":"api/market/#kalshi_py.api.market.get_market_candlesticks.sync","title":"<code>kalshi_py.api.market.get_market_candlesticks.sync(series_ticker: str, ticker: str, *, client: Union[AuthenticatedClient, Client], start_ts: int, end_ts: int, period_interval: int) -&gt; Optional[GithubComKalshiExchangeInfraSvcApi2ModelGetMarketCandlesticksResponse]</code>","text":"<p>Get Market Candlesticks</p> <p>Endpoint for getting historical candlestick data for a specific market.  Candlesticks provide OHLC (Open, High, Low, Close) price data aggregated over specific time intervals. Each candlestick represents the price movement during that period, including opening and closing prices, as well as the highest and lowest prices reached.  The period_interval determines the time length of each candlestick and must be one of: 1 (1 minute), 60 (1 hour), or 1440 (1 day). The start_ts and end_ts parameters define the time range for the data.</p> <p>Parameters:</p> Name Type Description Default <code>series_ticker</code> <code>str</code> <p>Series ticker - the series that contains the target market</p> required <code>ticker</code> <code>str</code> <p>Market ticker - unique identifier for the specific market</p> required <code>start_ts</code> <code>int</code> <p>Start timestamp (Unix timestamp). Candlesticks will include those ending on or after this time.</p> required <code>end_ts</code> <code>int</code> <p>End timestamp (Unix timestamp). Candlesticks will include those ending on or before this time.</p> required <code>period_interval</code> <code>int</code> <p>Time period length of each candlestick in minutes. Valid values: 1 (1 minute), 60 (1 hour), 1440 (1 day).</p> required <p>Raises:</p> Type Description <code>UnexpectedStatus</code> <p>If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.</p> <code>TimeoutException</code> <p>If the request takes longer than Client.timeout.</p> <p>Returns:</p> Type Description <code>Optional[GithubComKalshiExchangeInfraSvcApi2ModelGetMarketCandlesticksResponse]</code> <p>GithubComKalshiExchangeInfraSvcApi2ModelGetMarketCandlesticksResponse</p> Source code in <code>kalshi_py/api/market/get_market_candlesticks.py</code> <pre><code>def sync(\n    series_ticker: str,\n    ticker: str,\n    *,\n    client: Union[AuthenticatedClient, Client],\n    start_ts: int,\n    end_ts: int,\n    period_interval: int,\n) -&gt; Optional[GithubComKalshiExchangeInfraSvcApi2ModelGetMarketCandlesticksResponse]:\n    \"\"\"Get Market Candlesticks\n\n      Endpoint for getting historical candlestick data for a specific market.  Candlesticks provide OHLC\n    (Open, High, Low, Close) price data aggregated over specific time intervals. Each candlestick\n    represents the price movement during that period, including opening and closing prices, as well as\n    the highest and lowest prices reached.  The period_interval determines the time length of each\n    candlestick and must be one of: 1 (1 minute), 60 (1 hour), or 1440 (1 day). The start_ts and end_ts\n    parameters define the time range for the data.\n\n    Args:\n        series_ticker (str): Series ticker - the series that contains the target market\n        ticker (str): Market ticker - unique identifier for the specific market\n        start_ts (int): Start timestamp (Unix timestamp). Candlesticks will include those ending\n            on or after this time.\n        end_ts (int): End timestamp (Unix timestamp). Candlesticks will include those ending on or\n            before this time.\n        period_interval (int): Time period length of each candlestick in minutes. Valid values: 1\n            (1 minute), 60 (1 hour), 1440 (1 day).\n\n    Raises:\n        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.\n        httpx.TimeoutException: If the request takes longer than Client.timeout.\n\n    Returns:\n        GithubComKalshiExchangeInfraSvcApi2ModelGetMarketCandlesticksResponse\n    \"\"\"\n\n    return sync_detailed(\n        series_ticker=series_ticker,\n        ticker=ticker,\n        client=client,\n        start_ts=start_ts,\n        end_ts=end_ts,\n        period_interval=period_interval,\n    ).parsed\n</code></pre>"},{"location":"api/market/#kalshi_py.api.market.get_market_candlesticks.asyncio","title":"<code>kalshi_py.api.market.get_market_candlesticks.asyncio(series_ticker: str, ticker: str, *, client: Union[AuthenticatedClient, Client], start_ts: int, end_ts: int, period_interval: int) -&gt; Optional[GithubComKalshiExchangeInfraSvcApi2ModelGetMarketCandlesticksResponse]</code>  <code>async</code>","text":"<p>Get Market Candlesticks</p> <p>Endpoint for getting historical candlestick data for a specific market.  Candlesticks provide OHLC (Open, High, Low, Close) price data aggregated over specific time intervals. Each candlestick represents the price movement during that period, including opening and closing prices, as well as the highest and lowest prices reached.  The period_interval determines the time length of each candlestick and must be one of: 1 (1 minute), 60 (1 hour), or 1440 (1 day). The start_ts and end_ts parameters define the time range for the data.</p> <p>Parameters:</p> Name Type Description Default <code>series_ticker</code> <code>str</code> <p>Series ticker - the series that contains the target market</p> required <code>ticker</code> <code>str</code> <p>Market ticker - unique identifier for the specific market</p> required <code>start_ts</code> <code>int</code> <p>Start timestamp (Unix timestamp). Candlesticks will include those ending on or after this time.</p> required <code>end_ts</code> <code>int</code> <p>End timestamp (Unix timestamp). Candlesticks will include those ending on or before this time.</p> required <code>period_interval</code> <code>int</code> <p>Time period length of each candlestick in minutes. Valid values: 1 (1 minute), 60 (1 hour), 1440 (1 day).</p> required <p>Raises:</p> Type Description <code>UnexpectedStatus</code> <p>If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.</p> <code>TimeoutException</code> <p>If the request takes longer than Client.timeout.</p> <p>Returns:</p> Type Description <code>Optional[GithubComKalshiExchangeInfraSvcApi2ModelGetMarketCandlesticksResponse]</code> <p>GithubComKalshiExchangeInfraSvcApi2ModelGetMarketCandlesticksResponse</p> Source code in <code>kalshi_py/api/market/get_market_candlesticks.py</code> <pre><code>async def asyncio(\n    series_ticker: str,\n    ticker: str,\n    *,\n    client: Union[AuthenticatedClient, Client],\n    start_ts: int,\n    end_ts: int,\n    period_interval: int,\n) -&gt; Optional[GithubComKalshiExchangeInfraSvcApi2ModelGetMarketCandlesticksResponse]:\n    \"\"\"Get Market Candlesticks\n\n      Endpoint for getting historical candlestick data for a specific market.  Candlesticks provide OHLC\n    (Open, High, Low, Close) price data aggregated over specific time intervals. Each candlestick\n    represents the price movement during that period, including opening and closing prices, as well as\n    the highest and lowest prices reached.  The period_interval determines the time length of each\n    candlestick and must be one of: 1 (1 minute), 60 (1 hour), or 1440 (1 day). The start_ts and end_ts\n    parameters define the time range for the data.\n\n    Args:\n        series_ticker (str): Series ticker - the series that contains the target market\n        ticker (str): Market ticker - unique identifier for the specific market\n        start_ts (int): Start timestamp (Unix timestamp). Candlesticks will include those ending\n            on or after this time.\n        end_ts (int): End timestamp (Unix timestamp). Candlesticks will include those ending on or\n            before this time.\n        period_interval (int): Time period length of each candlestick in minutes. Valid values: 1\n            (1 minute), 60 (1 hour), 1440 (1 day).\n\n    Raises:\n        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.\n        httpx.TimeoutException: If the request takes longer than Client.timeout.\n\n    Returns:\n        GithubComKalshiExchangeInfraSvcApi2ModelGetMarketCandlesticksResponse\n    \"\"\"\n\n    return (\n        await asyncio_detailed(\n            series_ticker=series_ticker,\n            ticker=ticker,\n            client=client,\n            start_ts=start_ts,\n            end_ts=end_ts,\n            period_interval=period_interval,\n        )\n    ).parsed\n</code></pre>"},{"location":"api/market/#kalshi_py.api.market.get_market_candlesticks.sync_detailed","title":"<code>kalshi_py.api.market.get_market_candlesticks.sync_detailed(series_ticker: str, ticker: str, *, client: Union[AuthenticatedClient, Client], start_ts: int, end_ts: int, period_interval: int) -&gt; Response[GithubComKalshiExchangeInfraSvcApi2ModelGetMarketCandlesticksResponse]</code>","text":"<p>Get Market Candlesticks</p> <p>Endpoint for getting historical candlestick data for a specific market.  Candlesticks provide OHLC (Open, High, Low, Close) price data aggregated over specific time intervals. Each candlestick represents the price movement during that period, including opening and closing prices, as well as the highest and lowest prices reached.  The period_interval determines the time length of each candlestick and must be one of: 1 (1 minute), 60 (1 hour), or 1440 (1 day). The start_ts and end_ts parameters define the time range for the data.</p> <p>Parameters:</p> Name Type Description Default <code>series_ticker</code> <code>str</code> <p>Series ticker - the series that contains the target market</p> required <code>ticker</code> <code>str</code> <p>Market ticker - unique identifier for the specific market</p> required <code>start_ts</code> <code>int</code> <p>Start timestamp (Unix timestamp). Candlesticks will include those ending on or after this time.</p> required <code>end_ts</code> <code>int</code> <p>End timestamp (Unix timestamp). Candlesticks will include those ending on or before this time.</p> required <code>period_interval</code> <code>int</code> <p>Time period length of each candlestick in minutes. Valid values: 1 (1 minute), 60 (1 hour), 1440 (1 day).</p> required <p>Raises:</p> Type Description <code>UnexpectedStatus</code> <p>If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.</p> <code>TimeoutException</code> <p>If the request takes longer than Client.timeout.</p> <p>Returns:</p> Type Description <code>Response[GithubComKalshiExchangeInfraSvcApi2ModelGetMarketCandlesticksResponse]</code> <p>Response[GithubComKalshiExchangeInfraSvcApi2ModelGetMarketCandlesticksResponse]</p> Source code in <code>kalshi_py/api/market/get_market_candlesticks.py</code> <pre><code>def sync_detailed(\n    series_ticker: str,\n    ticker: str,\n    *,\n    client: Union[AuthenticatedClient, Client],\n    start_ts: int,\n    end_ts: int,\n    period_interval: int,\n) -&gt; Response[GithubComKalshiExchangeInfraSvcApi2ModelGetMarketCandlesticksResponse]:\n    \"\"\"Get Market Candlesticks\n\n      Endpoint for getting historical candlestick data for a specific market.  Candlesticks provide OHLC\n    (Open, High, Low, Close) price data aggregated over specific time intervals. Each candlestick\n    represents the price movement during that period, including opening and closing prices, as well as\n    the highest and lowest prices reached.  The period_interval determines the time length of each\n    candlestick and must be one of: 1 (1 minute), 60 (1 hour), or 1440 (1 day). The start_ts and end_ts\n    parameters define the time range for the data.\n\n    Args:\n        series_ticker (str): Series ticker - the series that contains the target market\n        ticker (str): Market ticker - unique identifier for the specific market\n        start_ts (int): Start timestamp (Unix timestamp). Candlesticks will include those ending\n            on or after this time.\n        end_ts (int): End timestamp (Unix timestamp). Candlesticks will include those ending on or\n            before this time.\n        period_interval (int): Time period length of each candlestick in minutes. Valid values: 1\n            (1 minute), 60 (1 hour), 1440 (1 day).\n\n    Raises:\n        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.\n        httpx.TimeoutException: If the request takes longer than Client.timeout.\n\n    Returns:\n        Response[GithubComKalshiExchangeInfraSvcApi2ModelGetMarketCandlesticksResponse]\n    \"\"\"\n\n    kwargs = _get_kwargs(\n        series_ticker=series_ticker,\n        ticker=ticker,\n        start_ts=start_ts,\n        end_ts=end_ts,\n        period_interval=period_interval,\n    )\n\n    response = client.get_httpx_client().request(\n        **kwargs,\n    )\n\n    return _build_response(client=client, response=response)\n</code></pre>"},{"location":"api/market/#kalshi_py.api.market.get_market_candlesticks.asyncio_detailed","title":"<code>kalshi_py.api.market.get_market_candlesticks.asyncio_detailed(series_ticker: str, ticker: str, *, client: Union[AuthenticatedClient, Client], start_ts: int, end_ts: int, period_interval: int) -&gt; Response[GithubComKalshiExchangeInfraSvcApi2ModelGetMarketCandlesticksResponse]</code>  <code>async</code>","text":"<p>Get Market Candlesticks</p> <p>Endpoint for getting historical candlestick data for a specific market.  Candlesticks provide OHLC (Open, High, Low, Close) price data aggregated over specific time intervals. Each candlestick represents the price movement during that period, including opening and closing prices, as well as the highest and lowest prices reached.  The period_interval determines the time length of each candlestick and must be one of: 1 (1 minute), 60 (1 hour), or 1440 (1 day). The start_ts and end_ts parameters define the time range for the data.</p> <p>Parameters:</p> Name Type Description Default <code>series_ticker</code> <code>str</code> <p>Series ticker - the series that contains the target market</p> required <code>ticker</code> <code>str</code> <p>Market ticker - unique identifier for the specific market</p> required <code>start_ts</code> <code>int</code> <p>Start timestamp (Unix timestamp). Candlesticks will include those ending on or after this time.</p> required <code>end_ts</code> <code>int</code> <p>End timestamp (Unix timestamp). Candlesticks will include those ending on or before this time.</p> required <code>period_interval</code> <code>int</code> <p>Time period length of each candlestick in minutes. Valid values: 1 (1 minute), 60 (1 hour), 1440 (1 day).</p> required <p>Raises:</p> Type Description <code>UnexpectedStatus</code> <p>If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.</p> <code>TimeoutException</code> <p>If the request takes longer than Client.timeout.</p> <p>Returns:</p> Type Description <code>Response[GithubComKalshiExchangeInfraSvcApi2ModelGetMarketCandlesticksResponse]</code> <p>Response[GithubComKalshiExchangeInfraSvcApi2ModelGetMarketCandlesticksResponse]</p> Source code in <code>kalshi_py/api/market/get_market_candlesticks.py</code> <pre><code>async def asyncio_detailed(\n    series_ticker: str,\n    ticker: str,\n    *,\n    client: Union[AuthenticatedClient, Client],\n    start_ts: int,\n    end_ts: int,\n    period_interval: int,\n) -&gt; Response[GithubComKalshiExchangeInfraSvcApi2ModelGetMarketCandlesticksResponse]:\n    \"\"\"Get Market Candlesticks\n\n      Endpoint for getting historical candlestick data for a specific market.  Candlesticks provide OHLC\n    (Open, High, Low, Close) price data aggregated over specific time intervals. Each candlestick\n    represents the price movement during that period, including opening and closing prices, as well as\n    the highest and lowest prices reached.  The period_interval determines the time length of each\n    candlestick and must be one of: 1 (1 minute), 60 (1 hour), or 1440 (1 day). The start_ts and end_ts\n    parameters define the time range for the data.\n\n    Args:\n        series_ticker (str): Series ticker - the series that contains the target market\n        ticker (str): Market ticker - unique identifier for the specific market\n        start_ts (int): Start timestamp (Unix timestamp). Candlesticks will include those ending\n            on or after this time.\n        end_ts (int): End timestamp (Unix timestamp). Candlesticks will include those ending on or\n            before this time.\n        period_interval (int): Time period length of each candlestick in minutes. Valid values: 1\n            (1 minute), 60 (1 hour), 1440 (1 day).\n\n    Raises:\n        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.\n        httpx.TimeoutException: If the request takes longer than Client.timeout.\n\n    Returns:\n        Response[GithubComKalshiExchangeInfraSvcApi2ModelGetMarketCandlesticksResponse]\n    \"\"\"\n\n    kwargs = _get_kwargs(\n        series_ticker=series_ticker,\n        ticker=ticker,\n        start_ts=start_ts,\n        end_ts=end_ts,\n        period_interval=period_interval,\n    )\n\n    response = await client.get_async_httpx_client().request(**kwargs)\n\n    return _build_response(client=client, response=response)\n</code></pre>"},{"location":"api/market/#get-market-orderbook","title":"Get Market Orderbook","text":"<p>Synchronous API Call</p> <p>Asynchronous API Call</p> <p>Synchronous Detailed Response</p> <p>Asynchronous Detailed Response</p>"},{"location":"api/market/#kalshi_py.api.market.get_market_orderbook.sync","title":"<code>kalshi_py.api.market.get_market_orderbook.sync(ticker: str, *, client: Union[AuthenticatedClient, Client], depth: Union[Unset, int] = UNSET) -&gt; Optional[GithubComKalshiExchangeInfraSvcApi2ModelGetMarketOrderbookResponse]</code>","text":"<p>Get Market Order Book</p> <p>Endpoint for getting the current order book for a specific market.  The order book shows all active bid orders for both yes and no sides of a binary market. It returns yes bids and no bids only (no asks are returned). This is because in binary markets, a bid for yes at price X is equivalent to an ask for no at price (100-X). For example, a yes bid at 7\u00a2 is the same as a no ask at 93\u00a2, with identical contract sizes.  Each side shows price levels with their corresponding quantities and order counts, organized from best to worst prices.</p> <p>Parameters:</p> Name Type Description Default <code>ticker</code> <code>str</code> <p>Market ticker - unique identifier for the specific market</p> required <code>depth</code> <code>Union[Unset, int]</code> <p>Maximum number of price levels to return per side (yes bids/no bids). Defaults to all levels. Maximum value is 100.</p> <code>UNSET</code> <p>Raises:</p> Type Description <code>UnexpectedStatus</code> <p>If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.</p> <code>TimeoutException</code> <p>If the request takes longer than Client.timeout.</p> <p>Returns:</p> Type Description <code>Optional[GithubComKalshiExchangeInfraSvcApi2ModelGetMarketOrderbookResponse]</code> <p>GithubComKalshiExchangeInfraSvcApi2ModelGetMarketOrderbookResponse</p> Source code in <code>kalshi_py/api/market/get_market_orderbook.py</code> <pre><code>def sync(\n    ticker: str,\n    *,\n    client: Union[AuthenticatedClient, Client],\n    depth: Union[Unset, int] = UNSET,\n) -&gt; Optional[GithubComKalshiExchangeInfraSvcApi2ModelGetMarketOrderbookResponse]:\n    \"\"\"Get Market Order Book\n\n      Endpoint for getting the current order book for a specific market.  The order book shows all active\n    bid orders for both yes and no sides of a binary market. It returns yes bids and no bids only (no\n    asks are returned). This is because in binary markets, a bid for yes at price X is equivalent to an\n    ask for no at price (100-X). For example, a yes bid at 7\u00a2 is the same as a no ask at 93\u00a2, with\n    identical contract sizes.  Each side shows price levels with their corresponding quantities and\n    order counts, organized from best to worst prices.\n\n    Args:\n        ticker (str): Market ticker - unique identifier for the specific market\n        depth (Union[Unset, int]): Maximum number of price levels to return per side (yes bids/no\n            bids). Defaults to all levels. Maximum value is 100.\n\n    Raises:\n        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.\n        httpx.TimeoutException: If the request takes longer than Client.timeout.\n\n    Returns:\n        GithubComKalshiExchangeInfraSvcApi2ModelGetMarketOrderbookResponse\n    \"\"\"\n\n    return sync_detailed(\n        ticker=ticker,\n        client=client,\n        depth=depth,\n    ).parsed\n</code></pre>"},{"location":"api/market/#kalshi_py.api.market.get_market_orderbook.asyncio","title":"<code>kalshi_py.api.market.get_market_orderbook.asyncio(ticker: str, *, client: Union[AuthenticatedClient, Client], depth: Union[Unset, int] = UNSET) -&gt; Optional[GithubComKalshiExchangeInfraSvcApi2ModelGetMarketOrderbookResponse]</code>  <code>async</code>","text":"<p>Get Market Order Book</p> <p>Endpoint for getting the current order book for a specific market.  The order book shows all active bid orders for both yes and no sides of a binary market. It returns yes bids and no bids only (no asks are returned). This is because in binary markets, a bid for yes at price X is equivalent to an ask for no at price (100-X). For example, a yes bid at 7\u00a2 is the same as a no ask at 93\u00a2, with identical contract sizes.  Each side shows price levels with their corresponding quantities and order counts, organized from best to worst prices.</p> <p>Parameters:</p> Name Type Description Default <code>ticker</code> <code>str</code> <p>Market ticker - unique identifier for the specific market</p> required <code>depth</code> <code>Union[Unset, int]</code> <p>Maximum number of price levels to return per side (yes bids/no bids). Defaults to all levels. Maximum value is 100.</p> <code>UNSET</code> <p>Raises:</p> Type Description <code>UnexpectedStatus</code> <p>If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.</p> <code>TimeoutException</code> <p>If the request takes longer than Client.timeout.</p> <p>Returns:</p> Type Description <code>Optional[GithubComKalshiExchangeInfraSvcApi2ModelGetMarketOrderbookResponse]</code> <p>GithubComKalshiExchangeInfraSvcApi2ModelGetMarketOrderbookResponse</p> Source code in <code>kalshi_py/api/market/get_market_orderbook.py</code> <pre><code>async def asyncio(\n    ticker: str,\n    *,\n    client: Union[AuthenticatedClient, Client],\n    depth: Union[Unset, int] = UNSET,\n) -&gt; Optional[GithubComKalshiExchangeInfraSvcApi2ModelGetMarketOrderbookResponse]:\n    \"\"\"Get Market Order Book\n\n      Endpoint for getting the current order book for a specific market.  The order book shows all active\n    bid orders for both yes and no sides of a binary market. It returns yes bids and no bids only (no\n    asks are returned). This is because in binary markets, a bid for yes at price X is equivalent to an\n    ask for no at price (100-X). For example, a yes bid at 7\u00a2 is the same as a no ask at 93\u00a2, with\n    identical contract sizes.  Each side shows price levels with their corresponding quantities and\n    order counts, organized from best to worst prices.\n\n    Args:\n        ticker (str): Market ticker - unique identifier for the specific market\n        depth (Union[Unset, int]): Maximum number of price levels to return per side (yes bids/no\n            bids). Defaults to all levels. Maximum value is 100.\n\n    Raises:\n        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.\n        httpx.TimeoutException: If the request takes longer than Client.timeout.\n\n    Returns:\n        GithubComKalshiExchangeInfraSvcApi2ModelGetMarketOrderbookResponse\n    \"\"\"\n\n    return (\n        await asyncio_detailed(\n            ticker=ticker,\n            client=client,\n            depth=depth,\n        )\n    ).parsed\n</code></pre>"},{"location":"api/market/#kalshi_py.api.market.get_market_orderbook.sync_detailed","title":"<code>kalshi_py.api.market.get_market_orderbook.sync_detailed(ticker: str, *, client: Union[AuthenticatedClient, Client], depth: Union[Unset, int] = UNSET) -&gt; Response[GithubComKalshiExchangeInfraSvcApi2ModelGetMarketOrderbookResponse]</code>","text":"<p>Get Market Order Book</p> <p>Endpoint for getting the current order book for a specific market.  The order book shows all active bid orders for both yes and no sides of a binary market. It returns yes bids and no bids only (no asks are returned). This is because in binary markets, a bid for yes at price X is equivalent to an ask for no at price (100-X). For example, a yes bid at 7\u00a2 is the same as a no ask at 93\u00a2, with identical contract sizes.  Each side shows price levels with their corresponding quantities and order counts, organized from best to worst prices.</p> <p>Parameters:</p> Name Type Description Default <code>ticker</code> <code>str</code> <p>Market ticker - unique identifier for the specific market</p> required <code>depth</code> <code>Union[Unset, int]</code> <p>Maximum number of price levels to return per side (yes bids/no bids). Defaults to all levels. Maximum value is 100.</p> <code>UNSET</code> <p>Raises:</p> Type Description <code>UnexpectedStatus</code> <p>If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.</p> <code>TimeoutException</code> <p>If the request takes longer than Client.timeout.</p> <p>Returns:</p> Type Description <code>Response[GithubComKalshiExchangeInfraSvcApi2ModelGetMarketOrderbookResponse]</code> <p>Response[GithubComKalshiExchangeInfraSvcApi2ModelGetMarketOrderbookResponse]</p> Source code in <code>kalshi_py/api/market/get_market_orderbook.py</code> <pre><code>def sync_detailed(\n    ticker: str,\n    *,\n    client: Union[AuthenticatedClient, Client],\n    depth: Union[Unset, int] = UNSET,\n) -&gt; Response[GithubComKalshiExchangeInfraSvcApi2ModelGetMarketOrderbookResponse]:\n    \"\"\"Get Market Order Book\n\n      Endpoint for getting the current order book for a specific market.  The order book shows all active\n    bid orders for both yes and no sides of a binary market. It returns yes bids and no bids only (no\n    asks are returned). This is because in binary markets, a bid for yes at price X is equivalent to an\n    ask for no at price (100-X). For example, a yes bid at 7\u00a2 is the same as a no ask at 93\u00a2, with\n    identical contract sizes.  Each side shows price levels with their corresponding quantities and\n    order counts, organized from best to worst prices.\n\n    Args:\n        ticker (str): Market ticker - unique identifier for the specific market\n        depth (Union[Unset, int]): Maximum number of price levels to return per side (yes bids/no\n            bids). Defaults to all levels. Maximum value is 100.\n\n    Raises:\n        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.\n        httpx.TimeoutException: If the request takes longer than Client.timeout.\n\n    Returns:\n        Response[GithubComKalshiExchangeInfraSvcApi2ModelGetMarketOrderbookResponse]\n    \"\"\"\n\n    kwargs = _get_kwargs(\n        ticker=ticker,\n        depth=depth,\n    )\n\n    response = client.get_httpx_client().request(\n        **kwargs,\n    )\n\n    return _build_response(client=client, response=response)\n</code></pre>"},{"location":"api/market/#kalshi_py.api.market.get_market_orderbook.asyncio_detailed","title":"<code>kalshi_py.api.market.get_market_orderbook.asyncio_detailed(ticker: str, *, client: Union[AuthenticatedClient, Client], depth: Union[Unset, int] = UNSET) -&gt; Response[GithubComKalshiExchangeInfraSvcApi2ModelGetMarketOrderbookResponse]</code>  <code>async</code>","text":"<p>Get Market Order Book</p> <p>Endpoint for getting the current order book for a specific market.  The order book shows all active bid orders for both yes and no sides of a binary market. It returns yes bids and no bids only (no asks are returned). This is because in binary markets, a bid for yes at price X is equivalent to an ask for no at price (100-X). For example, a yes bid at 7\u00a2 is the same as a no ask at 93\u00a2, with identical contract sizes.  Each side shows price levels with their corresponding quantities and order counts, organized from best to worst prices.</p> <p>Parameters:</p> Name Type Description Default <code>ticker</code> <code>str</code> <p>Market ticker - unique identifier for the specific market</p> required <code>depth</code> <code>Union[Unset, int]</code> <p>Maximum number of price levels to return per side (yes bids/no bids). Defaults to all levels. Maximum value is 100.</p> <code>UNSET</code> <p>Raises:</p> Type Description <code>UnexpectedStatus</code> <p>If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.</p> <code>TimeoutException</code> <p>If the request takes longer than Client.timeout.</p> <p>Returns:</p> Type Description <code>Response[GithubComKalshiExchangeInfraSvcApi2ModelGetMarketOrderbookResponse]</code> <p>Response[GithubComKalshiExchangeInfraSvcApi2ModelGetMarketOrderbookResponse]</p> Source code in <code>kalshi_py/api/market/get_market_orderbook.py</code> <pre><code>async def asyncio_detailed(\n    ticker: str,\n    *,\n    client: Union[AuthenticatedClient, Client],\n    depth: Union[Unset, int] = UNSET,\n) -&gt; Response[GithubComKalshiExchangeInfraSvcApi2ModelGetMarketOrderbookResponse]:\n    \"\"\"Get Market Order Book\n\n      Endpoint for getting the current order book for a specific market.  The order book shows all active\n    bid orders for both yes and no sides of a binary market. It returns yes bids and no bids only (no\n    asks are returned). This is because in binary markets, a bid for yes at price X is equivalent to an\n    ask for no at price (100-X). For example, a yes bid at 7\u00a2 is the same as a no ask at 93\u00a2, with\n    identical contract sizes.  Each side shows price levels with their corresponding quantities and\n    order counts, organized from best to worst prices.\n\n    Args:\n        ticker (str): Market ticker - unique identifier for the specific market\n        depth (Union[Unset, int]): Maximum number of price levels to return per side (yes bids/no\n            bids). Defaults to all levels. Maximum value is 100.\n\n    Raises:\n        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.\n        httpx.TimeoutException: If the request takes longer than Client.timeout.\n\n    Returns:\n        Response[GithubComKalshiExchangeInfraSvcApi2ModelGetMarketOrderbookResponse]\n    \"\"\"\n\n    kwargs = _get_kwargs(\n        ticker=ticker,\n        depth=depth,\n    )\n\n    response = await client.get_async_httpx_client().request(**kwargs)\n\n    return _build_response(client=client, response=response)\n</code></pre>"},{"location":"api/market/#get-markets","title":"Get Markets","text":"<p>Synchronous API Call</p> <p>Asynchronous API Call</p> <p>Synchronous Detailed Response</p> <p>Asynchronous Detailed Response</p>"},{"location":"api/market/#kalshi_py.api.market.get_markets.sync","title":"<code>kalshi_py.api.market.get_markets.sync(*, client: Union[AuthenticatedClient, Client], limit: Union[Unset, int] = UNSET, cursor: Union[Unset, str] = UNSET, event_ticker: Union[Unset, str] = UNSET, series_ticker: Union[Unset, str] = UNSET, max_close_ts: Union[Unset, int] = UNSET, min_close_ts: Union[Unset, int] = UNSET, status: Union[Unset, str] = UNSET, tickers: Union[Unset, str] = UNSET) -&gt; Optional[GithubComKalshiExchangeInfraSvcApi2ModelGetMarketsResponse]</code>","text":"<p>Get Markets</p> <p>Endpoint for listing and discovering markets on Kalshi. A market represents a specific binary outcome within an event that users can trade on (e.g., \\\"Will candidate X win?\\\"). Markets have yes/no positions, current prices, volume, and settlement rules. This endpoint returns a paginated response. Use the 'limit' parameter to control page size (1-1000, defaults to 100). The response includes a 'cursor' field - pass this value in the 'cursor' parameter of your next request to get the next page. An empty cursor indicates no more pages are available.</p> <p>Parameters:</p> Name Type Description Default <code>limit</code> <code>Union[Unset, int]</code> <p>Number of results per page. Defaults to 100. Maximum value is 1000.</p> <code>UNSET</code> <code>cursor</code> <code>Union[Unset, str]</code> <p>Pagination cursor. Use the cursor value returned from the previous response to get the next page of results. Leave empty for the first page.</p> <code>UNSET</code> <code>event_ticker</code> <code>Union[Unset, str]</code> <p>Filter markets by event ticker. Returns only markets belonging to the specified event.</p> <code>UNSET</code> <code>series_ticker</code> <code>Union[Unset, str]</code> <p>Filter markets by series ticker. Returns only markets belonging to events in the specified series.</p> <code>UNSET</code> <code>max_close_ts</code> <code>Union[Unset, int]</code> <p>Filter markets that close before this Unix timestamp.</p> <code>UNSET</code> <code>min_close_ts</code> <code>Union[Unset, int]</code> <p>Filter markets that close after this Unix timestamp.</p> <code>UNSET</code> <code>status</code> <code>Union[Unset, str]</code> <p>Filter by market status. Comma-separated list. Possible values: 'unopened', 'open', 'closed', 'settled'. Leave empty to return markets with any status.</p> <code>UNSET</code> <code>tickers</code> <code>Union[Unset, str]</code> <p>Filter by specific market tickers. Comma-separated list of market tickers to retrieve.</p> <code>UNSET</code> <p>Raises:</p> Type Description <code>UnexpectedStatus</code> <p>If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.</p> <code>TimeoutException</code> <p>If the request takes longer than Client.timeout.</p> <p>Returns:</p> Type Description <code>Optional[GithubComKalshiExchangeInfraSvcApi2ModelGetMarketsResponse]</code> <p>GithubComKalshiExchangeInfraSvcApi2ModelGetMarketsResponse</p> Source code in <code>kalshi_py/api/market/get_markets.py</code> <pre><code>def sync(\n    *,\n    client: Union[AuthenticatedClient, Client],\n    limit: Union[Unset, int] = UNSET,\n    cursor: Union[Unset, str] = UNSET,\n    event_ticker: Union[Unset, str] = UNSET,\n    series_ticker: Union[Unset, str] = UNSET,\n    max_close_ts: Union[Unset, int] = UNSET,\n    min_close_ts: Union[Unset, int] = UNSET,\n    status: Union[Unset, str] = UNSET,\n    tickers: Union[Unset, str] = UNSET,\n) -&gt; Optional[GithubComKalshiExchangeInfraSvcApi2ModelGetMarketsResponse]:\n    r\"\"\"Get Markets\n\n      Endpoint for listing and discovering markets on Kalshi. A market represents a specific binary\n    outcome within an event that users can trade on (e.g., \\\"Will candidate X win?\\\"). Markets have\n    yes/no positions, current prices, volume, and settlement rules. This endpoint returns a paginated\n    response. Use the 'limit' parameter to control page size (1-1000, defaults to 100). The response\n    includes a 'cursor' field - pass this value in the 'cursor' parameter of your next request to get\n    the next page. An empty cursor indicates no more pages are available.\n\n    Args:\n        limit (Union[Unset, int]): Number of results per page. Defaults to 100. Maximum value is\n            1000.\n        cursor (Union[Unset, str]): Pagination cursor. Use the cursor value returned from the\n            previous response to get the next page of results. Leave empty for the first page.\n        event_ticker (Union[Unset, str]): Filter markets by event ticker. Returns only markets\n            belonging to the specified event.\n        series_ticker (Union[Unset, str]): Filter markets by series ticker. Returns only markets\n            belonging to events in the specified series.\n        max_close_ts (Union[Unset, int]): Filter markets that close before this Unix timestamp.\n        min_close_ts (Union[Unset, int]): Filter markets that close after this Unix timestamp.\n        status (Union[Unset, str]): Filter by market status. Comma-separated list. Possible\n            values: 'unopened', 'open', 'closed', 'settled'. Leave empty to return markets with any\n            status.\n        tickers (Union[Unset, str]): Filter by specific market tickers. Comma-separated list of\n            market tickers to retrieve.\n\n    Raises:\n        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.\n        httpx.TimeoutException: If the request takes longer than Client.timeout.\n\n    Returns:\n        GithubComKalshiExchangeInfraSvcApi2ModelGetMarketsResponse\n    \"\"\"\n\n    return sync_detailed(\n        client=client,\n        limit=limit,\n        cursor=cursor,\n        event_ticker=event_ticker,\n        series_ticker=series_ticker,\n        max_close_ts=max_close_ts,\n        min_close_ts=min_close_ts,\n        status=status,\n        tickers=tickers,\n    ).parsed\n</code></pre>"},{"location":"api/market/#kalshi_py.api.market.get_markets.asyncio","title":"<code>kalshi_py.api.market.get_markets.asyncio(*, client: Union[AuthenticatedClient, Client], limit: Union[Unset, int] = UNSET, cursor: Union[Unset, str] = UNSET, event_ticker: Union[Unset, str] = UNSET, series_ticker: Union[Unset, str] = UNSET, max_close_ts: Union[Unset, int] = UNSET, min_close_ts: Union[Unset, int] = UNSET, status: Union[Unset, str] = UNSET, tickers: Union[Unset, str] = UNSET) -&gt; Optional[GithubComKalshiExchangeInfraSvcApi2ModelGetMarketsResponse]</code>  <code>async</code>","text":"<p>Get Markets</p> <p>Endpoint for listing and discovering markets on Kalshi. A market represents a specific binary outcome within an event that users can trade on (e.g., \\\"Will candidate X win?\\\"). Markets have yes/no positions, current prices, volume, and settlement rules. This endpoint returns a paginated response. Use the 'limit' parameter to control page size (1-1000, defaults to 100). The response includes a 'cursor' field - pass this value in the 'cursor' parameter of your next request to get the next page. An empty cursor indicates no more pages are available.</p> <p>Parameters:</p> Name Type Description Default <code>limit</code> <code>Union[Unset, int]</code> <p>Number of results per page. Defaults to 100. Maximum value is 1000.</p> <code>UNSET</code> <code>cursor</code> <code>Union[Unset, str]</code> <p>Pagination cursor. Use the cursor value returned from the previous response to get the next page of results. Leave empty for the first page.</p> <code>UNSET</code> <code>event_ticker</code> <code>Union[Unset, str]</code> <p>Filter markets by event ticker. Returns only markets belonging to the specified event.</p> <code>UNSET</code> <code>series_ticker</code> <code>Union[Unset, str]</code> <p>Filter markets by series ticker. Returns only markets belonging to events in the specified series.</p> <code>UNSET</code> <code>max_close_ts</code> <code>Union[Unset, int]</code> <p>Filter markets that close before this Unix timestamp.</p> <code>UNSET</code> <code>min_close_ts</code> <code>Union[Unset, int]</code> <p>Filter markets that close after this Unix timestamp.</p> <code>UNSET</code> <code>status</code> <code>Union[Unset, str]</code> <p>Filter by market status. Comma-separated list. Possible values: 'unopened', 'open', 'closed', 'settled'. Leave empty to return markets with any status.</p> <code>UNSET</code> <code>tickers</code> <code>Union[Unset, str]</code> <p>Filter by specific market tickers. Comma-separated list of market tickers to retrieve.</p> <code>UNSET</code> <p>Raises:</p> Type Description <code>UnexpectedStatus</code> <p>If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.</p> <code>TimeoutException</code> <p>If the request takes longer than Client.timeout.</p> <p>Returns:</p> Type Description <code>Optional[GithubComKalshiExchangeInfraSvcApi2ModelGetMarketsResponse]</code> <p>GithubComKalshiExchangeInfraSvcApi2ModelGetMarketsResponse</p> Source code in <code>kalshi_py/api/market/get_markets.py</code> <pre><code>async def asyncio(\n    *,\n    client: Union[AuthenticatedClient, Client],\n    limit: Union[Unset, int] = UNSET,\n    cursor: Union[Unset, str] = UNSET,\n    event_ticker: Union[Unset, str] = UNSET,\n    series_ticker: Union[Unset, str] = UNSET,\n    max_close_ts: Union[Unset, int] = UNSET,\n    min_close_ts: Union[Unset, int] = UNSET,\n    status: Union[Unset, str] = UNSET,\n    tickers: Union[Unset, str] = UNSET,\n) -&gt; Optional[GithubComKalshiExchangeInfraSvcApi2ModelGetMarketsResponse]:\n    r\"\"\"Get Markets\n\n      Endpoint for listing and discovering markets on Kalshi. A market represents a specific binary\n    outcome within an event that users can trade on (e.g., \\\"Will candidate X win?\\\"). Markets have\n    yes/no positions, current prices, volume, and settlement rules. This endpoint returns a paginated\n    response. Use the 'limit' parameter to control page size (1-1000, defaults to 100). The response\n    includes a 'cursor' field - pass this value in the 'cursor' parameter of your next request to get\n    the next page. An empty cursor indicates no more pages are available.\n\n    Args:\n        limit (Union[Unset, int]): Number of results per page. Defaults to 100. Maximum value is\n            1000.\n        cursor (Union[Unset, str]): Pagination cursor. Use the cursor value returned from the\n            previous response to get the next page of results. Leave empty for the first page.\n        event_ticker (Union[Unset, str]): Filter markets by event ticker. Returns only markets\n            belonging to the specified event.\n        series_ticker (Union[Unset, str]): Filter markets by series ticker. Returns only markets\n            belonging to events in the specified series.\n        max_close_ts (Union[Unset, int]): Filter markets that close before this Unix timestamp.\n        min_close_ts (Union[Unset, int]): Filter markets that close after this Unix timestamp.\n        status (Union[Unset, str]): Filter by market status. Comma-separated list. Possible\n            values: 'unopened', 'open', 'closed', 'settled'. Leave empty to return markets with any\n            status.\n        tickers (Union[Unset, str]): Filter by specific market tickers. Comma-separated list of\n            market tickers to retrieve.\n\n    Raises:\n        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.\n        httpx.TimeoutException: If the request takes longer than Client.timeout.\n\n    Returns:\n        GithubComKalshiExchangeInfraSvcApi2ModelGetMarketsResponse\n    \"\"\"\n\n    return (\n        await asyncio_detailed(\n            client=client,\n            limit=limit,\n            cursor=cursor,\n            event_ticker=event_ticker,\n            series_ticker=series_ticker,\n            max_close_ts=max_close_ts,\n            min_close_ts=min_close_ts,\n            status=status,\n            tickers=tickers,\n        )\n    ).parsed\n</code></pre>"},{"location":"api/market/#kalshi_py.api.market.get_markets.sync_detailed","title":"<code>kalshi_py.api.market.get_markets.sync_detailed(*, client: Union[AuthenticatedClient, Client], limit: Union[Unset, int] = UNSET, cursor: Union[Unset, str] = UNSET, event_ticker: Union[Unset, str] = UNSET, series_ticker: Union[Unset, str] = UNSET, max_close_ts: Union[Unset, int] = UNSET, min_close_ts: Union[Unset, int] = UNSET, status: Union[Unset, str] = UNSET, tickers: Union[Unset, str] = UNSET) -&gt; Response[GithubComKalshiExchangeInfraSvcApi2ModelGetMarketsResponse]</code>","text":"<p>Get Markets</p> <p>Endpoint for listing and discovering markets on Kalshi. A market represents a specific binary outcome within an event that users can trade on (e.g., \\\"Will candidate X win?\\\"). Markets have yes/no positions, current prices, volume, and settlement rules. This endpoint returns a paginated response. Use the 'limit' parameter to control page size (1-1000, defaults to 100). The response includes a 'cursor' field - pass this value in the 'cursor' parameter of your next request to get the next page. An empty cursor indicates no more pages are available.</p> <p>Parameters:</p> Name Type Description Default <code>limit</code> <code>Union[Unset, int]</code> <p>Number of results per page. Defaults to 100. Maximum value is 1000.</p> <code>UNSET</code> <code>cursor</code> <code>Union[Unset, str]</code> <p>Pagination cursor. Use the cursor value returned from the previous response to get the next page of results. Leave empty for the first page.</p> <code>UNSET</code> <code>event_ticker</code> <code>Union[Unset, str]</code> <p>Filter markets by event ticker. Returns only markets belonging to the specified event.</p> <code>UNSET</code> <code>series_ticker</code> <code>Union[Unset, str]</code> <p>Filter markets by series ticker. Returns only markets belonging to events in the specified series.</p> <code>UNSET</code> <code>max_close_ts</code> <code>Union[Unset, int]</code> <p>Filter markets that close before this Unix timestamp.</p> <code>UNSET</code> <code>min_close_ts</code> <code>Union[Unset, int]</code> <p>Filter markets that close after this Unix timestamp.</p> <code>UNSET</code> <code>status</code> <code>Union[Unset, str]</code> <p>Filter by market status. Comma-separated list. Possible values: 'unopened', 'open', 'closed', 'settled'. Leave empty to return markets with any status.</p> <code>UNSET</code> <code>tickers</code> <code>Union[Unset, str]</code> <p>Filter by specific market tickers. Comma-separated list of market tickers to retrieve.</p> <code>UNSET</code> <p>Raises:</p> Type Description <code>UnexpectedStatus</code> <p>If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.</p> <code>TimeoutException</code> <p>If the request takes longer than Client.timeout.</p> <p>Returns:</p> Type Description <code>Response[GithubComKalshiExchangeInfraSvcApi2ModelGetMarketsResponse]</code> <p>Response[GithubComKalshiExchangeInfraSvcApi2ModelGetMarketsResponse]</p> Source code in <code>kalshi_py/api/market/get_markets.py</code> <pre><code>def sync_detailed(\n    *,\n    client: Union[AuthenticatedClient, Client],\n    limit: Union[Unset, int] = UNSET,\n    cursor: Union[Unset, str] = UNSET,\n    event_ticker: Union[Unset, str] = UNSET,\n    series_ticker: Union[Unset, str] = UNSET,\n    max_close_ts: Union[Unset, int] = UNSET,\n    min_close_ts: Union[Unset, int] = UNSET,\n    status: Union[Unset, str] = UNSET,\n    tickers: Union[Unset, str] = UNSET,\n) -&gt; Response[GithubComKalshiExchangeInfraSvcApi2ModelGetMarketsResponse]:\n    r\"\"\"Get Markets\n\n      Endpoint for listing and discovering markets on Kalshi. A market represents a specific binary\n    outcome within an event that users can trade on (e.g., \\\"Will candidate X win?\\\"). Markets have\n    yes/no positions, current prices, volume, and settlement rules. This endpoint returns a paginated\n    response. Use the 'limit' parameter to control page size (1-1000, defaults to 100). The response\n    includes a 'cursor' field - pass this value in the 'cursor' parameter of your next request to get\n    the next page. An empty cursor indicates no more pages are available.\n\n    Args:\n        limit (Union[Unset, int]): Number of results per page. Defaults to 100. Maximum value is\n            1000.\n        cursor (Union[Unset, str]): Pagination cursor. Use the cursor value returned from the\n            previous response to get the next page of results. Leave empty for the first page.\n        event_ticker (Union[Unset, str]): Filter markets by event ticker. Returns only markets\n            belonging to the specified event.\n        series_ticker (Union[Unset, str]): Filter markets by series ticker. Returns only markets\n            belonging to events in the specified series.\n        max_close_ts (Union[Unset, int]): Filter markets that close before this Unix timestamp.\n        min_close_ts (Union[Unset, int]): Filter markets that close after this Unix timestamp.\n        status (Union[Unset, str]): Filter by market status. Comma-separated list. Possible\n            values: 'unopened', 'open', 'closed', 'settled'. Leave empty to return markets with any\n            status.\n        tickers (Union[Unset, str]): Filter by specific market tickers. Comma-separated list of\n            market tickers to retrieve.\n\n    Raises:\n        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.\n        httpx.TimeoutException: If the request takes longer than Client.timeout.\n\n    Returns:\n        Response[GithubComKalshiExchangeInfraSvcApi2ModelGetMarketsResponse]\n    \"\"\"\n\n    kwargs = _get_kwargs(\n        limit=limit,\n        cursor=cursor,\n        event_ticker=event_ticker,\n        series_ticker=series_ticker,\n        max_close_ts=max_close_ts,\n        min_close_ts=min_close_ts,\n        status=status,\n        tickers=tickers,\n    )\n\n    response = client.get_httpx_client().request(\n        **kwargs,\n    )\n\n    return _build_response(client=client, response=response)\n</code></pre>"},{"location":"api/market/#kalshi_py.api.market.get_markets.asyncio_detailed","title":"<code>kalshi_py.api.market.get_markets.asyncio_detailed(*, client: Union[AuthenticatedClient, Client], limit: Union[Unset, int] = UNSET, cursor: Union[Unset, str] = UNSET, event_ticker: Union[Unset, str] = UNSET, series_ticker: Union[Unset, str] = UNSET, max_close_ts: Union[Unset, int] = UNSET, min_close_ts: Union[Unset, int] = UNSET, status: Union[Unset, str] = UNSET, tickers: Union[Unset, str] = UNSET) -&gt; Response[GithubComKalshiExchangeInfraSvcApi2ModelGetMarketsResponse]</code>  <code>async</code>","text":"<p>Get Markets</p> <p>Endpoint for listing and discovering markets on Kalshi. A market represents a specific binary outcome within an event that users can trade on (e.g., \\\"Will candidate X win?\\\"). Markets have yes/no positions, current prices, volume, and settlement rules. This endpoint returns a paginated response. Use the 'limit' parameter to control page size (1-1000, defaults to 100). The response includes a 'cursor' field - pass this value in the 'cursor' parameter of your next request to get the next page. An empty cursor indicates no more pages are available.</p> <p>Parameters:</p> Name Type Description Default <code>limit</code> <code>Union[Unset, int]</code> <p>Number of results per page. Defaults to 100. Maximum value is 1000.</p> <code>UNSET</code> <code>cursor</code> <code>Union[Unset, str]</code> <p>Pagination cursor. Use the cursor value returned from the previous response to get the next page of results. Leave empty for the first page.</p> <code>UNSET</code> <code>event_ticker</code> <code>Union[Unset, str]</code> <p>Filter markets by event ticker. Returns only markets belonging to the specified event.</p> <code>UNSET</code> <code>series_ticker</code> <code>Union[Unset, str]</code> <p>Filter markets by series ticker. Returns only markets belonging to events in the specified series.</p> <code>UNSET</code> <code>max_close_ts</code> <code>Union[Unset, int]</code> <p>Filter markets that close before this Unix timestamp.</p> <code>UNSET</code> <code>min_close_ts</code> <code>Union[Unset, int]</code> <p>Filter markets that close after this Unix timestamp.</p> <code>UNSET</code> <code>status</code> <code>Union[Unset, str]</code> <p>Filter by market status. Comma-separated list. Possible values: 'unopened', 'open', 'closed', 'settled'. Leave empty to return markets with any status.</p> <code>UNSET</code> <code>tickers</code> <code>Union[Unset, str]</code> <p>Filter by specific market tickers. Comma-separated list of market tickers to retrieve.</p> <code>UNSET</code> <p>Raises:</p> Type Description <code>UnexpectedStatus</code> <p>If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.</p> <code>TimeoutException</code> <p>If the request takes longer than Client.timeout.</p> <p>Returns:</p> Type Description <code>Response[GithubComKalshiExchangeInfraSvcApi2ModelGetMarketsResponse]</code> <p>Response[GithubComKalshiExchangeInfraSvcApi2ModelGetMarketsResponse]</p> Source code in <code>kalshi_py/api/market/get_markets.py</code> <pre><code>async def asyncio_detailed(\n    *,\n    client: Union[AuthenticatedClient, Client],\n    limit: Union[Unset, int] = UNSET,\n    cursor: Union[Unset, str] = UNSET,\n    event_ticker: Union[Unset, str] = UNSET,\n    series_ticker: Union[Unset, str] = UNSET,\n    max_close_ts: Union[Unset, int] = UNSET,\n    min_close_ts: Union[Unset, int] = UNSET,\n    status: Union[Unset, str] = UNSET,\n    tickers: Union[Unset, str] = UNSET,\n) -&gt; Response[GithubComKalshiExchangeInfraSvcApi2ModelGetMarketsResponse]:\n    r\"\"\"Get Markets\n\n      Endpoint for listing and discovering markets on Kalshi. A market represents a specific binary\n    outcome within an event that users can trade on (e.g., \\\"Will candidate X win?\\\"). Markets have\n    yes/no positions, current prices, volume, and settlement rules. This endpoint returns a paginated\n    response. Use the 'limit' parameter to control page size (1-1000, defaults to 100). The response\n    includes a 'cursor' field - pass this value in the 'cursor' parameter of your next request to get\n    the next page. An empty cursor indicates no more pages are available.\n\n    Args:\n        limit (Union[Unset, int]): Number of results per page. Defaults to 100. Maximum value is\n            1000.\n        cursor (Union[Unset, str]): Pagination cursor. Use the cursor value returned from the\n            previous response to get the next page of results. Leave empty for the first page.\n        event_ticker (Union[Unset, str]): Filter markets by event ticker. Returns only markets\n            belonging to the specified event.\n        series_ticker (Union[Unset, str]): Filter markets by series ticker. Returns only markets\n            belonging to events in the specified series.\n        max_close_ts (Union[Unset, int]): Filter markets that close before this Unix timestamp.\n        min_close_ts (Union[Unset, int]): Filter markets that close after this Unix timestamp.\n        status (Union[Unset, str]): Filter by market status. Comma-separated list. Possible\n            values: 'unopened', 'open', 'closed', 'settled'. Leave empty to return markets with any\n            status.\n        tickers (Union[Unset, str]): Filter by specific market tickers. Comma-separated list of\n            market tickers to retrieve.\n\n    Raises:\n        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.\n        httpx.TimeoutException: If the request takes longer than Client.timeout.\n\n    Returns:\n        Response[GithubComKalshiExchangeInfraSvcApi2ModelGetMarketsResponse]\n    \"\"\"\n\n    kwargs = _get_kwargs(\n        limit=limit,\n        cursor=cursor,\n        event_ticker=event_ticker,\n        series_ticker=series_ticker,\n        max_close_ts=max_close_ts,\n        min_close_ts=min_close_ts,\n        status=status,\n        tickers=tickers,\n    )\n\n    response = await client.get_async_httpx_client().request(**kwargs)\n\n    return _build_response(client=client, response=response)\n</code></pre>"},{"location":"api/market/#get-series","title":"Get Series","text":"<p>Synchronous Detailed Response</p> <p>Asynchronous Detailed Response</p>"},{"location":"api/market/#kalshi_py.api.market.get_series.sync_detailed","title":"<code>kalshi_py.api.market.get_series.sync_detailed(series_ticker: str, *, client: Union[AuthenticatedClient, Client]) -&gt; Response[Any]</code>","text":"<p>Get Series</p> <p>Endpoint for getting data about a specific series by its ticker.  A series represents a template for recurring events that follow the same format and rules (e.g., \\\"Monthly Jobs Report\\\", \\\"Weekly Initial Jobless Claims\\\", \\\"Daily Weather in NYC\\\"). Series define the structure, settlement sources, and metadata that will be applied to each recurring event instance within that series.</p> <p>Parameters:</p> Name Type Description Default <code>series_ticker</code> <code>str</code> <p>Series ticker - unique identifier for the specific series</p> required <p>Raises:</p> Type Description <code>UnexpectedStatus</code> <p>If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.</p> <code>TimeoutException</code> <p>If the request takes longer than Client.timeout.</p> <p>Returns:</p> Type Description <code>Response[Any]</code> <p>Response[Any]</p> Source code in <code>kalshi_py/api/market/get_series.py</code> <pre><code>def sync_detailed(\n    series_ticker: str,\n    *,\n    client: Union[AuthenticatedClient, Client],\n) -&gt; Response[Any]:\n    r\"\"\"Get Series\n\n      Endpoint for getting data about a specific series by its ticker.  A series represents a template\n    for recurring events that follow the same format and rules (e.g., \\\"Monthly Jobs Report\\\", \\\"Weekly\n    Initial Jobless Claims\\\", \\\"Daily Weather in NYC\\\"). Series define the structure, settlement\n    sources, and metadata that will be applied to each recurring event instance within that series.\n\n    Args:\n        series_ticker (str): Series ticker - unique identifier for the specific series\n\n    Raises:\n        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.\n        httpx.TimeoutException: If the request takes longer than Client.timeout.\n\n    Returns:\n        Response[Any]\n    \"\"\"\n\n    kwargs = _get_kwargs(\n        series_ticker=series_ticker,\n    )\n\n    response = client.get_httpx_client().request(\n        **kwargs,\n    )\n\n    return _build_response(client=client, response=response)\n</code></pre>"},{"location":"api/market/#kalshi_py.api.market.get_series.asyncio_detailed","title":"<code>kalshi_py.api.market.get_series.asyncio_detailed(series_ticker: str, *, client: Union[AuthenticatedClient, Client]) -&gt; Response[Any]</code>  <code>async</code>","text":"<p>Get Series</p> <p>Endpoint for getting data about a specific series by its ticker.  A series represents a template for recurring events that follow the same format and rules (e.g., \\\"Monthly Jobs Report\\\", \\\"Weekly Initial Jobless Claims\\\", \\\"Daily Weather in NYC\\\"). Series define the structure, settlement sources, and metadata that will be applied to each recurring event instance within that series.</p> <p>Parameters:</p> Name Type Description Default <code>series_ticker</code> <code>str</code> <p>Series ticker - unique identifier for the specific series</p> required <p>Raises:</p> Type Description <code>UnexpectedStatus</code> <p>If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.</p> <code>TimeoutException</code> <p>If the request takes longer than Client.timeout.</p> <p>Returns:</p> Type Description <code>Response[Any]</code> <p>Response[Any]</p> Source code in <code>kalshi_py/api/market/get_series.py</code> <pre><code>async def asyncio_detailed(\n    series_ticker: str,\n    *,\n    client: Union[AuthenticatedClient, Client],\n) -&gt; Response[Any]:\n    r\"\"\"Get Series\n\n      Endpoint for getting data about a specific series by its ticker.  A series represents a template\n    for recurring events that follow the same format and rules (e.g., \\\"Monthly Jobs Report\\\", \\\"Weekly\n    Initial Jobless Claims\\\", \\\"Daily Weather in NYC\\\"). Series define the structure, settlement\n    sources, and metadata that will be applied to each recurring event instance within that series.\n\n    Args:\n        series_ticker (str): Series ticker - unique identifier for the specific series\n\n    Raises:\n        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.\n        httpx.TimeoutException: If the request takes longer than Client.timeout.\n\n    Returns:\n        Response[Any]\n    \"\"\"\n\n    kwargs = _get_kwargs(\n        series_ticker=series_ticker,\n    )\n\n    response = await client.get_async_httpx_client().request(**kwargs)\n\n    return _build_response(client=client, response=response)\n</code></pre>"},{"location":"api/market/#get-series-list","title":"Get Series List","text":"<p>Synchronous Detailed Response</p> <p>Asynchronous Detailed Response</p>"},{"location":"api/market/#kalshi_py.api.market.get_series_list.sync_detailed","title":"<code>kalshi_py.api.market.get_series_list.sync_detailed(*, client: Union[AuthenticatedClient, Client], category: str, include_product_metadata: Union[Unset, bool] = UNSET) -&gt; Response[Any]</code>","text":"<p>Get Series List</p> <p>Endpoint for getting data about multiple series with specified filters.  A series represents a template for recurring events that follow the same format and rules (e.g., \\\"Monthly Jobs Report\\\", \\\"Weekly Initial Jobless Claims\\\", \\\"Daily Weather in NYC\\\"). This endpoint allows you to browse and discover available series templates by category.</p> <p>Parameters:</p> Name Type Description Default <code>category</code> <code>str</code> <p>Filter series by category. Returns only series belonging to the specified category.</p> required <code>include_product_metadata</code> <code>Union[Unset, bool]</code> <p>Include additional product metadata in the response for each series.</p> <code>UNSET</code> <p>Raises:</p> Type Description <code>UnexpectedStatus</code> <p>If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.</p> <code>TimeoutException</code> <p>If the request takes longer than Client.timeout.</p> <p>Returns:</p> Type Description <code>Response[Any]</code> <p>Response[Any]</p> Source code in <code>kalshi_py/api/market/get_series_list.py</code> <pre><code>def sync_detailed(\n    *,\n    client: Union[AuthenticatedClient, Client],\n    category: str,\n    include_product_metadata: Union[Unset, bool] = UNSET,\n) -&gt; Response[Any]:\n    r\"\"\"Get Series List\n\n      Endpoint for getting data about multiple series with specified filters.  A series represents a\n    template for recurring events that follow the same format and rules (e.g., \\\"Monthly Jobs Report\\\",\n    \\\"Weekly Initial Jobless Claims\\\", \\\"Daily Weather in NYC\\\"). This endpoint allows you to browse and\n    discover available series templates by category.\n\n    Args:\n        category (str): Filter series by category. Returns only series belonging to the specified\n            category.\n        include_product_metadata (Union[Unset, bool]): Include additional product metadata in the\n            response for each series.\n\n    Raises:\n        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.\n        httpx.TimeoutException: If the request takes longer than Client.timeout.\n\n    Returns:\n        Response[Any]\n    \"\"\"\n\n    kwargs = _get_kwargs(\n        category=category,\n        include_product_metadata=include_product_metadata,\n    )\n\n    response = client.get_httpx_client().request(\n        **kwargs,\n    )\n\n    return _build_response(client=client, response=response)\n</code></pre>"},{"location":"api/market/#kalshi_py.api.market.get_series_list.asyncio_detailed","title":"<code>kalshi_py.api.market.get_series_list.asyncio_detailed(*, client: Union[AuthenticatedClient, Client], category: str, include_product_metadata: Union[Unset, bool] = UNSET) -&gt; Response[Any]</code>  <code>async</code>","text":"<p>Get Series List</p> <p>Endpoint for getting data about multiple series with specified filters.  A series represents a template for recurring events that follow the same format and rules (e.g., \\\"Monthly Jobs Report\\\", \\\"Weekly Initial Jobless Claims\\\", \\\"Daily Weather in NYC\\\"). This endpoint allows you to browse and discover available series templates by category.</p> <p>Parameters:</p> Name Type Description Default <code>category</code> <code>str</code> <p>Filter series by category. Returns only series belonging to the specified category.</p> required <code>include_product_metadata</code> <code>Union[Unset, bool]</code> <p>Include additional product metadata in the response for each series.</p> <code>UNSET</code> <p>Raises:</p> Type Description <code>UnexpectedStatus</code> <p>If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.</p> <code>TimeoutException</code> <p>If the request takes longer than Client.timeout.</p> <p>Returns:</p> Type Description <code>Response[Any]</code> <p>Response[Any]</p> Source code in <code>kalshi_py/api/market/get_series_list.py</code> <pre><code>async def asyncio_detailed(\n    *,\n    client: Union[AuthenticatedClient, Client],\n    category: str,\n    include_product_metadata: Union[Unset, bool] = UNSET,\n) -&gt; Response[Any]:\n    r\"\"\"Get Series List\n\n      Endpoint for getting data about multiple series with specified filters.  A series represents a\n    template for recurring events that follow the same format and rules (e.g., \\\"Monthly Jobs Report\\\",\n    \\\"Weekly Initial Jobless Claims\\\", \\\"Daily Weather in NYC\\\"). This endpoint allows you to browse and\n    discover available series templates by category.\n\n    Args:\n        category (str): Filter series by category. Returns only series belonging to the specified\n            category.\n        include_product_metadata (Union[Unset, bool]): Include additional product metadata in the\n            response for each series.\n\n    Raises:\n        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.\n        httpx.TimeoutException: If the request takes longer than Client.timeout.\n\n    Returns:\n        Response[Any]\n    \"\"\"\n\n    kwargs = _get_kwargs(\n        category=category,\n        include_product_metadata=include_product_metadata,\n    )\n\n    response = await client.get_async_httpx_client().request(**kwargs)\n\n    return _build_response(client=client, response=response)\n</code></pre>"},{"location":"api/market/#get-trades","title":"Get Trades","text":"<p>Synchronous API Call</p> <p>Asynchronous API Call</p> <p>Synchronous Detailed Response</p> <p>Asynchronous Detailed Response</p>"},{"location":"api/market/#kalshi_py.api.market.get_trades.sync","title":"<code>kalshi_py.api.market.get_trades.sync(*, client: Union[AuthenticatedClient, Client], limit: Union[Unset, int] = UNSET, cursor: Union[Unset, str] = UNSET, ticker: Union[Unset, str] = UNSET, min_ts: Union[Unset, int] = UNSET, max_ts: Union[Unset, int] = UNSET) -&gt; Optional[GithubComKalshiExchangeInfraSvcApi2ModelPublicTradesGetResponse]</code>","text":"<p>Get Trades</p> <p>Endpoint for getting all trades for all markets.  A trade represents a completed transaction between two users on a specific market. Each trade includes the market ticker, price, quantity, and timestamp information.  This endpoint returns a paginated response. Use the 'limit' parameter to control page size (1-1000, defaults to 100). The response includes a 'cursor' field - pass this value in the 'cursor' parameter of your next request to get the next page. An empty cursor indicates no more pages are available.</p> <p>Parameters:</p> Name Type Description Default <code>limit</code> <code>Union[Unset, int]</code> <p>Number of results per page. Defaults to 100. Maximum value is 1000.</p> <code>UNSET</code> <code>cursor</code> <code>Union[Unset, str]</code> <p>Pagination cursor. Use the cursor value returned from the previous response to get the next page of results. Leave empty for the first page.</p> <code>UNSET</code> <code>ticker</code> <code>Union[Unset, str]</code> <p>Filter trades by market ticker. Returns only trades for the specified market.</p> <code>UNSET</code> <code>min_ts</code> <code>Union[Unset, int]</code> <p>Filter trades that occurred after this Unix timestamp.</p> <code>UNSET</code> <code>max_ts</code> <code>Union[Unset, int]</code> <p>Filter trades that occurred before this Unix timestamp.</p> <code>UNSET</code> <p>Raises:</p> Type Description <code>UnexpectedStatus</code> <p>If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.</p> <code>TimeoutException</code> <p>If the request takes longer than Client.timeout.</p> <p>Returns:</p> Type Description <code>Optional[GithubComKalshiExchangeInfraSvcApi2ModelPublicTradesGetResponse]</code> <p>GithubComKalshiExchangeInfraSvcApi2ModelPublicTradesGetResponse</p> Source code in <code>kalshi_py/api/market/get_trades.py</code> <pre><code>def sync(\n    *,\n    client: Union[AuthenticatedClient, Client],\n    limit: Union[Unset, int] = UNSET,\n    cursor: Union[Unset, str] = UNSET,\n    ticker: Union[Unset, str] = UNSET,\n    min_ts: Union[Unset, int] = UNSET,\n    max_ts: Union[Unset, int] = UNSET,\n) -&gt; Optional[GithubComKalshiExchangeInfraSvcApi2ModelPublicTradesGetResponse]:\n    \"\"\"Get Trades\n\n      Endpoint for getting all trades for all markets.  A trade represents a completed transaction\n    between two users on a specific market. Each trade includes the market ticker, price, quantity, and\n    timestamp information.  This endpoint returns a paginated response. Use the 'limit' parameter to\n    control page size (1-1000, defaults to 100). The response includes a 'cursor' field - pass this\n    value in the 'cursor' parameter of your next request to get the next page. An empty cursor indicates\n    no more pages are available.\n\n    Args:\n        limit (Union[Unset, int]): Number of results per page. Defaults to 100. Maximum value is\n            1000.\n        cursor (Union[Unset, str]): Pagination cursor. Use the cursor value returned from the\n            previous response to get the next page of results. Leave empty for the first page.\n        ticker (Union[Unset, str]): Filter trades by market ticker. Returns only trades for the\n            specified market.\n        min_ts (Union[Unset, int]): Filter trades that occurred after this Unix timestamp.\n        max_ts (Union[Unset, int]): Filter trades that occurred before this Unix timestamp.\n\n    Raises:\n        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.\n        httpx.TimeoutException: If the request takes longer than Client.timeout.\n\n    Returns:\n        GithubComKalshiExchangeInfraSvcApi2ModelPublicTradesGetResponse\n    \"\"\"\n\n    return sync_detailed(\n        client=client,\n        limit=limit,\n        cursor=cursor,\n        ticker=ticker,\n        min_ts=min_ts,\n        max_ts=max_ts,\n    ).parsed\n</code></pre>"},{"location":"api/market/#kalshi_py.api.market.get_trades.asyncio","title":"<code>kalshi_py.api.market.get_trades.asyncio(*, client: Union[AuthenticatedClient, Client], limit: Union[Unset, int] = UNSET, cursor: Union[Unset, str] = UNSET, ticker: Union[Unset, str] = UNSET, min_ts: Union[Unset, int] = UNSET, max_ts: Union[Unset, int] = UNSET) -&gt; Optional[GithubComKalshiExchangeInfraSvcApi2ModelPublicTradesGetResponse]</code>  <code>async</code>","text":"<p>Get Trades</p> <p>Endpoint for getting all trades for all markets.  A trade represents a completed transaction between two users on a specific market. Each trade includes the market ticker, price, quantity, and timestamp information.  This endpoint returns a paginated response. Use the 'limit' parameter to control page size (1-1000, defaults to 100). The response includes a 'cursor' field - pass this value in the 'cursor' parameter of your next request to get the next page. An empty cursor indicates no more pages are available.</p> <p>Parameters:</p> Name Type Description Default <code>limit</code> <code>Union[Unset, int]</code> <p>Number of results per page. Defaults to 100. Maximum value is 1000.</p> <code>UNSET</code> <code>cursor</code> <code>Union[Unset, str]</code> <p>Pagination cursor. Use the cursor value returned from the previous response to get the next page of results. Leave empty for the first page.</p> <code>UNSET</code> <code>ticker</code> <code>Union[Unset, str]</code> <p>Filter trades by market ticker. Returns only trades for the specified market.</p> <code>UNSET</code> <code>min_ts</code> <code>Union[Unset, int]</code> <p>Filter trades that occurred after this Unix timestamp.</p> <code>UNSET</code> <code>max_ts</code> <code>Union[Unset, int]</code> <p>Filter trades that occurred before this Unix timestamp.</p> <code>UNSET</code> <p>Raises:</p> Type Description <code>UnexpectedStatus</code> <p>If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.</p> <code>TimeoutException</code> <p>If the request takes longer than Client.timeout.</p> <p>Returns:</p> Type Description <code>Optional[GithubComKalshiExchangeInfraSvcApi2ModelPublicTradesGetResponse]</code> <p>GithubComKalshiExchangeInfraSvcApi2ModelPublicTradesGetResponse</p> Source code in <code>kalshi_py/api/market/get_trades.py</code> <pre><code>async def asyncio(\n    *,\n    client: Union[AuthenticatedClient, Client],\n    limit: Union[Unset, int] = UNSET,\n    cursor: Union[Unset, str] = UNSET,\n    ticker: Union[Unset, str] = UNSET,\n    min_ts: Union[Unset, int] = UNSET,\n    max_ts: Union[Unset, int] = UNSET,\n) -&gt; Optional[GithubComKalshiExchangeInfraSvcApi2ModelPublicTradesGetResponse]:\n    \"\"\"Get Trades\n\n      Endpoint for getting all trades for all markets.  A trade represents a completed transaction\n    between two users on a specific market. Each trade includes the market ticker, price, quantity, and\n    timestamp information.  This endpoint returns a paginated response. Use the 'limit' parameter to\n    control page size (1-1000, defaults to 100). The response includes a 'cursor' field - pass this\n    value in the 'cursor' parameter of your next request to get the next page. An empty cursor indicates\n    no more pages are available.\n\n    Args:\n        limit (Union[Unset, int]): Number of results per page. Defaults to 100. Maximum value is\n            1000.\n        cursor (Union[Unset, str]): Pagination cursor. Use the cursor value returned from the\n            previous response to get the next page of results. Leave empty for the first page.\n        ticker (Union[Unset, str]): Filter trades by market ticker. Returns only trades for the\n            specified market.\n        min_ts (Union[Unset, int]): Filter trades that occurred after this Unix timestamp.\n        max_ts (Union[Unset, int]): Filter trades that occurred before this Unix timestamp.\n\n    Raises:\n        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.\n        httpx.TimeoutException: If the request takes longer than Client.timeout.\n\n    Returns:\n        GithubComKalshiExchangeInfraSvcApi2ModelPublicTradesGetResponse\n    \"\"\"\n\n    return (\n        await asyncio_detailed(\n            client=client,\n            limit=limit,\n            cursor=cursor,\n            ticker=ticker,\n            min_ts=min_ts,\n            max_ts=max_ts,\n        )\n    ).parsed\n</code></pre>"},{"location":"api/market/#kalshi_py.api.market.get_trades.sync_detailed","title":"<code>kalshi_py.api.market.get_trades.sync_detailed(*, client: Union[AuthenticatedClient, Client], limit: Union[Unset, int] = UNSET, cursor: Union[Unset, str] = UNSET, ticker: Union[Unset, str] = UNSET, min_ts: Union[Unset, int] = UNSET, max_ts: Union[Unset, int] = UNSET) -&gt; Response[GithubComKalshiExchangeInfraSvcApi2ModelPublicTradesGetResponse]</code>","text":"<p>Get Trades</p> <p>Endpoint for getting all trades for all markets.  A trade represents a completed transaction between two users on a specific market. Each trade includes the market ticker, price, quantity, and timestamp information.  This endpoint returns a paginated response. Use the 'limit' parameter to control page size (1-1000, defaults to 100). The response includes a 'cursor' field - pass this value in the 'cursor' parameter of your next request to get the next page. An empty cursor indicates no more pages are available.</p> <p>Parameters:</p> Name Type Description Default <code>limit</code> <code>Union[Unset, int]</code> <p>Number of results per page. Defaults to 100. Maximum value is 1000.</p> <code>UNSET</code> <code>cursor</code> <code>Union[Unset, str]</code> <p>Pagination cursor. Use the cursor value returned from the previous response to get the next page of results. Leave empty for the first page.</p> <code>UNSET</code> <code>ticker</code> <code>Union[Unset, str]</code> <p>Filter trades by market ticker. Returns only trades for the specified market.</p> <code>UNSET</code> <code>min_ts</code> <code>Union[Unset, int]</code> <p>Filter trades that occurred after this Unix timestamp.</p> <code>UNSET</code> <code>max_ts</code> <code>Union[Unset, int]</code> <p>Filter trades that occurred before this Unix timestamp.</p> <code>UNSET</code> <p>Raises:</p> Type Description <code>UnexpectedStatus</code> <p>If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.</p> <code>TimeoutException</code> <p>If the request takes longer than Client.timeout.</p> <p>Returns:</p> Type Description <code>Response[GithubComKalshiExchangeInfraSvcApi2ModelPublicTradesGetResponse]</code> <p>Response[GithubComKalshiExchangeInfraSvcApi2ModelPublicTradesGetResponse]</p> Source code in <code>kalshi_py/api/market/get_trades.py</code> <pre><code>def sync_detailed(\n    *,\n    client: Union[AuthenticatedClient, Client],\n    limit: Union[Unset, int] = UNSET,\n    cursor: Union[Unset, str] = UNSET,\n    ticker: Union[Unset, str] = UNSET,\n    min_ts: Union[Unset, int] = UNSET,\n    max_ts: Union[Unset, int] = UNSET,\n) -&gt; Response[GithubComKalshiExchangeInfraSvcApi2ModelPublicTradesGetResponse]:\n    \"\"\"Get Trades\n\n      Endpoint for getting all trades for all markets.  A trade represents a completed transaction\n    between two users on a specific market. Each trade includes the market ticker, price, quantity, and\n    timestamp information.  This endpoint returns a paginated response. Use the 'limit' parameter to\n    control page size (1-1000, defaults to 100). The response includes a 'cursor' field - pass this\n    value in the 'cursor' parameter of your next request to get the next page. An empty cursor indicates\n    no more pages are available.\n\n    Args:\n        limit (Union[Unset, int]): Number of results per page. Defaults to 100. Maximum value is\n            1000.\n        cursor (Union[Unset, str]): Pagination cursor. Use the cursor value returned from the\n            previous response to get the next page of results. Leave empty for the first page.\n        ticker (Union[Unset, str]): Filter trades by market ticker. Returns only trades for the\n            specified market.\n        min_ts (Union[Unset, int]): Filter trades that occurred after this Unix timestamp.\n        max_ts (Union[Unset, int]): Filter trades that occurred before this Unix timestamp.\n\n    Raises:\n        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.\n        httpx.TimeoutException: If the request takes longer than Client.timeout.\n\n    Returns:\n        Response[GithubComKalshiExchangeInfraSvcApi2ModelPublicTradesGetResponse]\n    \"\"\"\n\n    kwargs = _get_kwargs(\n        limit=limit,\n        cursor=cursor,\n        ticker=ticker,\n        min_ts=min_ts,\n        max_ts=max_ts,\n    )\n\n    response = client.get_httpx_client().request(\n        **kwargs,\n    )\n\n    return _build_response(client=client, response=response)\n</code></pre>"},{"location":"api/market/#kalshi_py.api.market.get_trades.asyncio_detailed","title":"<code>kalshi_py.api.market.get_trades.asyncio_detailed(*, client: Union[AuthenticatedClient, Client], limit: Union[Unset, int] = UNSET, cursor: Union[Unset, str] = UNSET, ticker: Union[Unset, str] = UNSET, min_ts: Union[Unset, int] = UNSET, max_ts: Union[Unset, int] = UNSET) -&gt; Response[GithubComKalshiExchangeInfraSvcApi2ModelPublicTradesGetResponse]</code>  <code>async</code>","text":"<p>Get Trades</p> <p>Endpoint for getting all trades for all markets.  A trade represents a completed transaction between two users on a specific market. Each trade includes the market ticker, price, quantity, and timestamp information.  This endpoint returns a paginated response. Use the 'limit' parameter to control page size (1-1000, defaults to 100). The response includes a 'cursor' field - pass this value in the 'cursor' parameter of your next request to get the next page. An empty cursor indicates no more pages are available.</p> <p>Parameters:</p> Name Type Description Default <code>limit</code> <code>Union[Unset, int]</code> <p>Number of results per page. Defaults to 100. Maximum value is 1000.</p> <code>UNSET</code> <code>cursor</code> <code>Union[Unset, str]</code> <p>Pagination cursor. Use the cursor value returned from the previous response to get the next page of results. Leave empty for the first page.</p> <code>UNSET</code> <code>ticker</code> <code>Union[Unset, str]</code> <p>Filter trades by market ticker. Returns only trades for the specified market.</p> <code>UNSET</code> <code>min_ts</code> <code>Union[Unset, int]</code> <p>Filter trades that occurred after this Unix timestamp.</p> <code>UNSET</code> <code>max_ts</code> <code>Union[Unset, int]</code> <p>Filter trades that occurred before this Unix timestamp.</p> <code>UNSET</code> <p>Raises:</p> Type Description <code>UnexpectedStatus</code> <p>If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.</p> <code>TimeoutException</code> <p>If the request takes longer than Client.timeout.</p> <p>Returns:</p> Type Description <code>Response[GithubComKalshiExchangeInfraSvcApi2ModelPublicTradesGetResponse]</code> <p>Response[GithubComKalshiExchangeInfraSvcApi2ModelPublicTradesGetResponse]</p> Source code in <code>kalshi_py/api/market/get_trades.py</code> <pre><code>async def asyncio_detailed(\n    *,\n    client: Union[AuthenticatedClient, Client],\n    limit: Union[Unset, int] = UNSET,\n    cursor: Union[Unset, str] = UNSET,\n    ticker: Union[Unset, str] = UNSET,\n    min_ts: Union[Unset, int] = UNSET,\n    max_ts: Union[Unset, int] = UNSET,\n) -&gt; Response[GithubComKalshiExchangeInfraSvcApi2ModelPublicTradesGetResponse]:\n    \"\"\"Get Trades\n\n      Endpoint for getting all trades for all markets.  A trade represents a completed transaction\n    between two users on a specific market. Each trade includes the market ticker, price, quantity, and\n    timestamp information.  This endpoint returns a paginated response. Use the 'limit' parameter to\n    control page size (1-1000, defaults to 100). The response includes a 'cursor' field - pass this\n    value in the 'cursor' parameter of your next request to get the next page. An empty cursor indicates\n    no more pages are available.\n\n    Args:\n        limit (Union[Unset, int]): Number of results per page. Defaults to 100. Maximum value is\n            1000.\n        cursor (Union[Unset, str]): Pagination cursor. Use the cursor value returned from the\n            previous response to get the next page of results. Leave empty for the first page.\n        ticker (Union[Unset, str]): Filter trades by market ticker. Returns only trades for the\n            specified market.\n        min_ts (Union[Unset, int]): Filter trades that occurred after this Unix timestamp.\n        max_ts (Union[Unset, int]): Filter trades that occurred before this Unix timestamp.\n\n    Raises:\n        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.\n        httpx.TimeoutException: If the request takes longer than Client.timeout.\n\n    Returns:\n        Response[GithubComKalshiExchangeInfraSvcApi2ModelPublicTradesGetResponse]\n    \"\"\"\n\n    kwargs = _get_kwargs(\n        limit=limit,\n        cursor=cursor,\n        ticker=ticker,\n        min_ts=min_ts,\n        max_ts=max_ts,\n    )\n\n    response = await client.get_async_httpx_client().request(**kwargs)\n\n    return _build_response(client=client, response=response)\n</code></pre>"},{"location":"api/milestone/","title":"Milestone API Reference","text":""},{"location":"api/milestone/#endpoints","title":"Endpoints","text":""},{"location":"api/milestone/#get-milestone","title":"Get Milestone","text":"<p>Synchronous API Call</p> <p>Asynchronous API Call</p> <p>Synchronous Detailed Response</p> <p>Asynchronous Detailed Response</p>"},{"location":"api/milestone/#kalshi_py.api.milestone.get_milestone.sync","title":"<code>kalshi_py.api.milestone.get_milestone.sync(milestone_id: str, *, client: Union[AuthenticatedClient, Client]) -&gt; Optional[GithubComKalshiExchangeInfraSvcApi2ModelGetMilestoneResponse]</code>","text":"<p>Get Milestone</p> <p>Endpoint for getting data about a specific milestone by its ID.</p> <p>Parameters:</p> Name Type Description Default <code>milestone_id</code> <code>str</code> <p>Milestone ID</p> required <p>Raises:</p> Type Description <code>UnexpectedStatus</code> <p>If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.</p> <code>TimeoutException</code> <p>If the request takes longer than Client.timeout.</p> <p>Returns:</p> Type Description <code>Optional[GithubComKalshiExchangeInfraSvcApi2ModelGetMilestoneResponse]</code> <p>GithubComKalshiExchangeInfraSvcApi2ModelGetMilestoneResponse</p> Source code in <code>kalshi_py/api/milestone/get_milestone.py</code> <pre><code>def sync(\n    milestone_id: str,\n    *,\n    client: Union[AuthenticatedClient, Client],\n) -&gt; Optional[GithubComKalshiExchangeInfraSvcApi2ModelGetMilestoneResponse]:\n    \"\"\"Get Milestone\n\n      Endpoint for getting data about a specific milestone by its ID.\n\n    Args:\n        milestone_id (str): Milestone ID\n\n    Raises:\n        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.\n        httpx.TimeoutException: If the request takes longer than Client.timeout.\n\n    Returns:\n        GithubComKalshiExchangeInfraSvcApi2ModelGetMilestoneResponse\n    \"\"\"\n\n    return sync_detailed(\n        milestone_id=milestone_id,\n        client=client,\n    ).parsed\n</code></pre>"},{"location":"api/milestone/#kalshi_py.api.milestone.get_milestone.asyncio","title":"<code>kalshi_py.api.milestone.get_milestone.asyncio(milestone_id: str, *, client: Union[AuthenticatedClient, Client]) -&gt; Optional[GithubComKalshiExchangeInfraSvcApi2ModelGetMilestoneResponse]</code>  <code>async</code>","text":"<p>Get Milestone</p> <p>Endpoint for getting data about a specific milestone by its ID.</p> <p>Parameters:</p> Name Type Description Default <code>milestone_id</code> <code>str</code> <p>Milestone ID</p> required <p>Raises:</p> Type Description <code>UnexpectedStatus</code> <p>If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.</p> <code>TimeoutException</code> <p>If the request takes longer than Client.timeout.</p> <p>Returns:</p> Type Description <code>Optional[GithubComKalshiExchangeInfraSvcApi2ModelGetMilestoneResponse]</code> <p>GithubComKalshiExchangeInfraSvcApi2ModelGetMilestoneResponse</p> Source code in <code>kalshi_py/api/milestone/get_milestone.py</code> <pre><code>async def asyncio(\n    milestone_id: str,\n    *,\n    client: Union[AuthenticatedClient, Client],\n) -&gt; Optional[GithubComKalshiExchangeInfraSvcApi2ModelGetMilestoneResponse]:\n    \"\"\"Get Milestone\n\n      Endpoint for getting data about a specific milestone by its ID.\n\n    Args:\n        milestone_id (str): Milestone ID\n\n    Raises:\n        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.\n        httpx.TimeoutException: If the request takes longer than Client.timeout.\n\n    Returns:\n        GithubComKalshiExchangeInfraSvcApi2ModelGetMilestoneResponse\n    \"\"\"\n\n    return (\n        await asyncio_detailed(\n            milestone_id=milestone_id,\n            client=client,\n        )\n    ).parsed\n</code></pre>"},{"location":"api/milestone/#kalshi_py.api.milestone.get_milestone.sync_detailed","title":"<code>kalshi_py.api.milestone.get_milestone.sync_detailed(milestone_id: str, *, client: Union[AuthenticatedClient, Client]) -&gt; Response[GithubComKalshiExchangeInfraSvcApi2ModelGetMilestoneResponse]</code>","text":"<p>Get Milestone</p> <p>Endpoint for getting data about a specific milestone by its ID.</p> <p>Parameters:</p> Name Type Description Default <code>milestone_id</code> <code>str</code> <p>Milestone ID</p> required <p>Raises:</p> Type Description <code>UnexpectedStatus</code> <p>If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.</p> <code>TimeoutException</code> <p>If the request takes longer than Client.timeout.</p> <p>Returns:</p> Type Description <code>Response[GithubComKalshiExchangeInfraSvcApi2ModelGetMilestoneResponse]</code> <p>Response[GithubComKalshiExchangeInfraSvcApi2ModelGetMilestoneResponse]</p> Source code in <code>kalshi_py/api/milestone/get_milestone.py</code> <pre><code>def sync_detailed(\n    milestone_id: str,\n    *,\n    client: Union[AuthenticatedClient, Client],\n) -&gt; Response[GithubComKalshiExchangeInfraSvcApi2ModelGetMilestoneResponse]:\n    \"\"\"Get Milestone\n\n      Endpoint for getting data about a specific milestone by its ID.\n\n    Args:\n        milestone_id (str): Milestone ID\n\n    Raises:\n        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.\n        httpx.TimeoutException: If the request takes longer than Client.timeout.\n\n    Returns:\n        Response[GithubComKalshiExchangeInfraSvcApi2ModelGetMilestoneResponse]\n    \"\"\"\n\n    kwargs = _get_kwargs(\n        milestone_id=milestone_id,\n    )\n\n    response = client.get_httpx_client().request(\n        **kwargs,\n    )\n\n    return _build_response(client=client, response=response)\n</code></pre>"},{"location":"api/milestone/#kalshi_py.api.milestone.get_milestone.asyncio_detailed","title":"<code>kalshi_py.api.milestone.get_milestone.asyncio_detailed(milestone_id: str, *, client: Union[AuthenticatedClient, Client]) -&gt; Response[GithubComKalshiExchangeInfraSvcApi2ModelGetMilestoneResponse]</code>  <code>async</code>","text":"<p>Get Milestone</p> <p>Endpoint for getting data about a specific milestone by its ID.</p> <p>Parameters:</p> Name Type Description Default <code>milestone_id</code> <code>str</code> <p>Milestone ID</p> required <p>Raises:</p> Type Description <code>UnexpectedStatus</code> <p>If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.</p> <code>TimeoutException</code> <p>If the request takes longer than Client.timeout.</p> <p>Returns:</p> Type Description <code>Response[GithubComKalshiExchangeInfraSvcApi2ModelGetMilestoneResponse]</code> <p>Response[GithubComKalshiExchangeInfraSvcApi2ModelGetMilestoneResponse]</p> Source code in <code>kalshi_py/api/milestone/get_milestone.py</code> <pre><code>async def asyncio_detailed(\n    milestone_id: str,\n    *,\n    client: Union[AuthenticatedClient, Client],\n) -&gt; Response[GithubComKalshiExchangeInfraSvcApi2ModelGetMilestoneResponse]:\n    \"\"\"Get Milestone\n\n      Endpoint for getting data about a specific milestone by its ID.\n\n    Args:\n        milestone_id (str): Milestone ID\n\n    Raises:\n        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.\n        httpx.TimeoutException: If the request takes longer than Client.timeout.\n\n    Returns:\n        Response[GithubComKalshiExchangeInfraSvcApi2ModelGetMilestoneResponse]\n    \"\"\"\n\n    kwargs = _get_kwargs(\n        milestone_id=milestone_id,\n    )\n\n    response = await client.get_async_httpx_client().request(**kwargs)\n\n    return _build_response(client=client, response=response)\n</code></pre>"},{"location":"api/milestone/#get-milestones","title":"Get Milestones","text":"<p>Synchronous API Call</p> <p>Asynchronous API Call</p> <p>Synchronous Detailed Response</p> <p>Asynchronous Detailed Response</p>"},{"location":"api/milestone/#kalshi_py.api.milestone.get_milestones.sync","title":"<code>kalshi_py.api.milestone.get_milestones.sync(*, client: Union[AuthenticatedClient, Client], minimum_start_date: Union[Unset, str] = UNSET, category: Union[Unset, str] = UNSET, competition: Union[Unset, str] = UNSET, type_: Union[Unset, str] = UNSET, related_event_ticker: Union[Unset, str] = UNSET, limit: int, cursor: Union[Unset, str] = UNSET) -&gt; Optional[GithubComKalshiExchangeInfraSvcApi2ModelGetMilestonesResponse]</code>","text":"<p>Get Milestones</p> <p>Endpoint for getting data about milestones with optional filtering.</p> <p>Parameters:</p> Name Type Description Default <code>minimum_start_date</code> <code>Union[Unset, str]</code> <p>Minimum start date to filter milestones. Format: RFC3339 timestamp</p> <code>UNSET</code> <code>category</code> <code>Union[Unset, str]</code> <p>Filter by milestone category</p> <code>UNSET</code> <code>competition</code> <code>Union[Unset, str]</code> <p>Filter by competition</p> <code>UNSET</code> <code>type_</code> <code>Union[Unset, str]</code> <p>Filter by milestone type</p> <code>UNSET</code> <code>related_event_ticker</code> <code>Union[Unset, str]</code> <p>Filter by related event ticker</p> <code>UNSET</code> <code>limit</code> <code>int</code> <p>Number of milestones to return per page</p> required <code>cursor</code> <code>Union[Unset, str]</code> <p>Pagination cursor. Use the cursor value returned from the previous response to get the next page of results</p> <code>UNSET</code> <p>Raises:</p> Type Description <code>UnexpectedStatus</code> <p>If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.</p> <code>TimeoutException</code> <p>If the request takes longer than Client.timeout.</p> <p>Returns:</p> Type Description <code>Optional[GithubComKalshiExchangeInfraSvcApi2ModelGetMilestonesResponse]</code> <p>GithubComKalshiExchangeInfraSvcApi2ModelGetMilestonesResponse</p> Source code in <code>kalshi_py/api/milestone/get_milestones.py</code> <pre><code>def sync(\n    *,\n    client: Union[AuthenticatedClient, Client],\n    minimum_start_date: Union[Unset, str] = UNSET,\n    category: Union[Unset, str] = UNSET,\n    competition: Union[Unset, str] = UNSET,\n    type_: Union[Unset, str] = UNSET,\n    related_event_ticker: Union[Unset, str] = UNSET,\n    limit: int,\n    cursor: Union[Unset, str] = UNSET,\n) -&gt; Optional[GithubComKalshiExchangeInfraSvcApi2ModelGetMilestonesResponse]:\n    \"\"\"Get Milestones\n\n      Endpoint for getting data about milestones with optional filtering.\n\n    Args:\n        minimum_start_date (Union[Unset, str]): Minimum start date to filter milestones. Format:\n            RFC3339 timestamp\n        category (Union[Unset, str]): Filter by milestone category\n        competition (Union[Unset, str]): Filter by competition\n        type_ (Union[Unset, str]): Filter by milestone type\n        related_event_ticker (Union[Unset, str]): Filter by related event ticker\n        limit (int): Number of milestones to return per page\n        cursor (Union[Unset, str]): Pagination cursor. Use the cursor value returned from the\n            previous response to get the next page of results\n\n    Raises:\n        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.\n        httpx.TimeoutException: If the request takes longer than Client.timeout.\n\n    Returns:\n        GithubComKalshiExchangeInfraSvcApi2ModelGetMilestonesResponse\n    \"\"\"\n\n    return sync_detailed(\n        client=client,\n        minimum_start_date=minimum_start_date,\n        category=category,\n        competition=competition,\n        type_=type_,\n        related_event_ticker=related_event_ticker,\n        limit=limit,\n        cursor=cursor,\n    ).parsed\n</code></pre>"},{"location":"api/milestone/#kalshi_py.api.milestone.get_milestones.asyncio","title":"<code>kalshi_py.api.milestone.get_milestones.asyncio(*, client: Union[AuthenticatedClient, Client], minimum_start_date: Union[Unset, str] = UNSET, category: Union[Unset, str] = UNSET, competition: Union[Unset, str] = UNSET, type_: Union[Unset, str] = UNSET, related_event_ticker: Union[Unset, str] = UNSET, limit: int, cursor: Union[Unset, str] = UNSET) -&gt; Optional[GithubComKalshiExchangeInfraSvcApi2ModelGetMilestonesResponse]</code>  <code>async</code>","text":"<p>Get Milestones</p> <p>Endpoint for getting data about milestones with optional filtering.</p> <p>Parameters:</p> Name Type Description Default <code>minimum_start_date</code> <code>Union[Unset, str]</code> <p>Minimum start date to filter milestones. Format: RFC3339 timestamp</p> <code>UNSET</code> <code>category</code> <code>Union[Unset, str]</code> <p>Filter by milestone category</p> <code>UNSET</code> <code>competition</code> <code>Union[Unset, str]</code> <p>Filter by competition</p> <code>UNSET</code> <code>type_</code> <code>Union[Unset, str]</code> <p>Filter by milestone type</p> <code>UNSET</code> <code>related_event_ticker</code> <code>Union[Unset, str]</code> <p>Filter by related event ticker</p> <code>UNSET</code> <code>limit</code> <code>int</code> <p>Number of milestones to return per page</p> required <code>cursor</code> <code>Union[Unset, str]</code> <p>Pagination cursor. Use the cursor value returned from the previous response to get the next page of results</p> <code>UNSET</code> <p>Raises:</p> Type Description <code>UnexpectedStatus</code> <p>If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.</p> <code>TimeoutException</code> <p>If the request takes longer than Client.timeout.</p> <p>Returns:</p> Type Description <code>Optional[GithubComKalshiExchangeInfraSvcApi2ModelGetMilestonesResponse]</code> <p>GithubComKalshiExchangeInfraSvcApi2ModelGetMilestonesResponse</p> Source code in <code>kalshi_py/api/milestone/get_milestones.py</code> <pre><code>async def asyncio(\n    *,\n    client: Union[AuthenticatedClient, Client],\n    minimum_start_date: Union[Unset, str] = UNSET,\n    category: Union[Unset, str] = UNSET,\n    competition: Union[Unset, str] = UNSET,\n    type_: Union[Unset, str] = UNSET,\n    related_event_ticker: Union[Unset, str] = UNSET,\n    limit: int,\n    cursor: Union[Unset, str] = UNSET,\n) -&gt; Optional[GithubComKalshiExchangeInfraSvcApi2ModelGetMilestonesResponse]:\n    \"\"\"Get Milestones\n\n      Endpoint for getting data about milestones with optional filtering.\n\n    Args:\n        minimum_start_date (Union[Unset, str]): Minimum start date to filter milestones. Format:\n            RFC3339 timestamp\n        category (Union[Unset, str]): Filter by milestone category\n        competition (Union[Unset, str]): Filter by competition\n        type_ (Union[Unset, str]): Filter by milestone type\n        related_event_ticker (Union[Unset, str]): Filter by related event ticker\n        limit (int): Number of milestones to return per page\n        cursor (Union[Unset, str]): Pagination cursor. Use the cursor value returned from the\n            previous response to get the next page of results\n\n    Raises:\n        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.\n        httpx.TimeoutException: If the request takes longer than Client.timeout.\n\n    Returns:\n        GithubComKalshiExchangeInfraSvcApi2ModelGetMilestonesResponse\n    \"\"\"\n\n    return (\n        await asyncio_detailed(\n            client=client,\n            minimum_start_date=minimum_start_date,\n            category=category,\n            competition=competition,\n            type_=type_,\n            related_event_ticker=related_event_ticker,\n            limit=limit,\n            cursor=cursor,\n        )\n    ).parsed\n</code></pre>"},{"location":"api/milestone/#kalshi_py.api.milestone.get_milestones.sync_detailed","title":"<code>kalshi_py.api.milestone.get_milestones.sync_detailed(*, client: Union[AuthenticatedClient, Client], minimum_start_date: Union[Unset, str] = UNSET, category: Union[Unset, str] = UNSET, competition: Union[Unset, str] = UNSET, type_: Union[Unset, str] = UNSET, related_event_ticker: Union[Unset, str] = UNSET, limit: int, cursor: Union[Unset, str] = UNSET) -&gt; Response[GithubComKalshiExchangeInfraSvcApi2ModelGetMilestonesResponse]</code>","text":"<p>Get Milestones</p> <p>Endpoint for getting data about milestones with optional filtering.</p> <p>Parameters:</p> Name Type Description Default <code>minimum_start_date</code> <code>Union[Unset, str]</code> <p>Minimum start date to filter milestones. Format: RFC3339 timestamp</p> <code>UNSET</code> <code>category</code> <code>Union[Unset, str]</code> <p>Filter by milestone category</p> <code>UNSET</code> <code>competition</code> <code>Union[Unset, str]</code> <p>Filter by competition</p> <code>UNSET</code> <code>type_</code> <code>Union[Unset, str]</code> <p>Filter by milestone type</p> <code>UNSET</code> <code>related_event_ticker</code> <code>Union[Unset, str]</code> <p>Filter by related event ticker</p> <code>UNSET</code> <code>limit</code> <code>int</code> <p>Number of milestones to return per page</p> required <code>cursor</code> <code>Union[Unset, str]</code> <p>Pagination cursor. Use the cursor value returned from the previous response to get the next page of results</p> <code>UNSET</code> <p>Raises:</p> Type Description <code>UnexpectedStatus</code> <p>If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.</p> <code>TimeoutException</code> <p>If the request takes longer than Client.timeout.</p> <p>Returns:</p> Type Description <code>Response[GithubComKalshiExchangeInfraSvcApi2ModelGetMilestonesResponse]</code> <p>Response[GithubComKalshiExchangeInfraSvcApi2ModelGetMilestonesResponse]</p> Source code in <code>kalshi_py/api/milestone/get_milestones.py</code> <pre><code>def sync_detailed(\n    *,\n    client: Union[AuthenticatedClient, Client],\n    minimum_start_date: Union[Unset, str] = UNSET,\n    category: Union[Unset, str] = UNSET,\n    competition: Union[Unset, str] = UNSET,\n    type_: Union[Unset, str] = UNSET,\n    related_event_ticker: Union[Unset, str] = UNSET,\n    limit: int,\n    cursor: Union[Unset, str] = UNSET,\n) -&gt; Response[GithubComKalshiExchangeInfraSvcApi2ModelGetMilestonesResponse]:\n    \"\"\"Get Milestones\n\n      Endpoint for getting data about milestones with optional filtering.\n\n    Args:\n        minimum_start_date (Union[Unset, str]): Minimum start date to filter milestones. Format:\n            RFC3339 timestamp\n        category (Union[Unset, str]): Filter by milestone category\n        competition (Union[Unset, str]): Filter by competition\n        type_ (Union[Unset, str]): Filter by milestone type\n        related_event_ticker (Union[Unset, str]): Filter by related event ticker\n        limit (int): Number of milestones to return per page\n        cursor (Union[Unset, str]): Pagination cursor. Use the cursor value returned from the\n            previous response to get the next page of results\n\n    Raises:\n        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.\n        httpx.TimeoutException: If the request takes longer than Client.timeout.\n\n    Returns:\n        Response[GithubComKalshiExchangeInfraSvcApi2ModelGetMilestonesResponse]\n    \"\"\"\n\n    kwargs = _get_kwargs(\n        minimum_start_date=minimum_start_date,\n        category=category,\n        competition=competition,\n        type_=type_,\n        related_event_ticker=related_event_ticker,\n        limit=limit,\n        cursor=cursor,\n    )\n\n    response = client.get_httpx_client().request(\n        **kwargs,\n    )\n\n    return _build_response(client=client, response=response)\n</code></pre>"},{"location":"api/milestone/#kalshi_py.api.milestone.get_milestones.asyncio_detailed","title":"<code>kalshi_py.api.milestone.get_milestones.asyncio_detailed(*, client: Union[AuthenticatedClient, Client], minimum_start_date: Union[Unset, str] = UNSET, category: Union[Unset, str] = UNSET, competition: Union[Unset, str] = UNSET, type_: Union[Unset, str] = UNSET, related_event_ticker: Union[Unset, str] = UNSET, limit: int, cursor: Union[Unset, str] = UNSET) -&gt; Response[GithubComKalshiExchangeInfraSvcApi2ModelGetMilestonesResponse]</code>  <code>async</code>","text":"<p>Get Milestones</p> <p>Endpoint for getting data about milestones with optional filtering.</p> <p>Parameters:</p> Name Type Description Default <code>minimum_start_date</code> <code>Union[Unset, str]</code> <p>Minimum start date to filter milestones. Format: RFC3339 timestamp</p> <code>UNSET</code> <code>category</code> <code>Union[Unset, str]</code> <p>Filter by milestone category</p> <code>UNSET</code> <code>competition</code> <code>Union[Unset, str]</code> <p>Filter by competition</p> <code>UNSET</code> <code>type_</code> <code>Union[Unset, str]</code> <p>Filter by milestone type</p> <code>UNSET</code> <code>related_event_ticker</code> <code>Union[Unset, str]</code> <p>Filter by related event ticker</p> <code>UNSET</code> <code>limit</code> <code>int</code> <p>Number of milestones to return per page</p> required <code>cursor</code> <code>Union[Unset, str]</code> <p>Pagination cursor. Use the cursor value returned from the previous response to get the next page of results</p> <code>UNSET</code> <p>Raises:</p> Type Description <code>UnexpectedStatus</code> <p>If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.</p> <code>TimeoutException</code> <p>If the request takes longer than Client.timeout.</p> <p>Returns:</p> Type Description <code>Response[GithubComKalshiExchangeInfraSvcApi2ModelGetMilestonesResponse]</code> <p>Response[GithubComKalshiExchangeInfraSvcApi2ModelGetMilestonesResponse]</p> Source code in <code>kalshi_py/api/milestone/get_milestones.py</code> <pre><code>async def asyncio_detailed(\n    *,\n    client: Union[AuthenticatedClient, Client],\n    minimum_start_date: Union[Unset, str] = UNSET,\n    category: Union[Unset, str] = UNSET,\n    competition: Union[Unset, str] = UNSET,\n    type_: Union[Unset, str] = UNSET,\n    related_event_ticker: Union[Unset, str] = UNSET,\n    limit: int,\n    cursor: Union[Unset, str] = UNSET,\n) -&gt; Response[GithubComKalshiExchangeInfraSvcApi2ModelGetMilestonesResponse]:\n    \"\"\"Get Milestones\n\n      Endpoint for getting data about milestones with optional filtering.\n\n    Args:\n        minimum_start_date (Union[Unset, str]): Minimum start date to filter milestones. Format:\n            RFC3339 timestamp\n        category (Union[Unset, str]): Filter by milestone category\n        competition (Union[Unset, str]): Filter by competition\n        type_ (Union[Unset, str]): Filter by milestone type\n        related_event_ticker (Union[Unset, str]): Filter by related event ticker\n        limit (int): Number of milestones to return per page\n        cursor (Union[Unset, str]): Pagination cursor. Use the cursor value returned from the\n            previous response to get the next page of results\n\n    Raises:\n        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.\n        httpx.TimeoutException: If the request takes longer than Client.timeout.\n\n    Returns:\n        Response[GithubComKalshiExchangeInfraSvcApi2ModelGetMilestonesResponse]\n    \"\"\"\n\n    kwargs = _get_kwargs(\n        minimum_start_date=minimum_start_date,\n        category=category,\n        competition=competition,\n        type_=type_,\n        related_event_ticker=related_event_ticker,\n        limit=limit,\n        cursor=cursor,\n    )\n\n    response = await client.get_async_httpx_client().request(**kwargs)\n\n    return _build_response(client=client, response=response)\n</code></pre>"},{"location":"api/portfolio/","title":"Portfolio API Reference","text":""},{"location":"api/portfolio/#endpoints","title":"Endpoints","text":""},{"location":"api/portfolio/#amend-order","title":"Amend Order","text":"<p>Synchronous API Call</p> <p>Asynchronous API Call</p> <p>Synchronous Detailed Response</p> <p>Asynchronous Detailed Response</p>"},{"location":"api/portfolio/#kalshi_py.api.portfolio.amend_order.sync","title":"<code>kalshi_py.api.portfolio.amend_order.sync(order_id: str, *, client: Union[AuthenticatedClient, Client], body: GithubComKalshiExchangeInfraSvcApi2ModelAmendOrderRequest) -&gt; Optional[GithubComKalshiExchangeInfraSvcApi2ModelAmendOrderResponse]</code>","text":"<p>Amend Order</p> <p>Endpoint for amending the max number of fillable contracts and/or price in an existing order. Max fillable contracts is <code>remaining_count</code> + <code>fill_count</code>.</p> <p>Parameters:</p> Name Type Description Default <code>order_id</code> <code>str</code> <p>Order ID</p> required <code>body</code> <code>GithubComKalshiExchangeInfraSvcApi2ModelAmendOrderRequest</code> required <p>Raises:</p> Type Description <code>UnexpectedStatus</code> <p>If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.</p> <code>TimeoutException</code> <p>If the request takes longer than Client.timeout.</p> <p>Returns:</p> Type Description <code>Optional[GithubComKalshiExchangeInfraSvcApi2ModelAmendOrderResponse]</code> <p>GithubComKalshiExchangeInfraSvcApi2ModelAmendOrderResponse</p> Source code in <code>kalshi_py/api/portfolio/amend_order.py</code> <pre><code>def sync(\n    order_id: str,\n    *,\n    client: Union[AuthenticatedClient, Client],\n    body: GithubComKalshiExchangeInfraSvcApi2ModelAmendOrderRequest,\n) -&gt; Optional[GithubComKalshiExchangeInfraSvcApi2ModelAmendOrderResponse]:\n    \"\"\"Amend Order\n\n      Endpoint for amending the max number of fillable contracts and/or price in an existing order. Max\n    fillable contracts is `remaining_count` + `fill_count`.\n\n    Args:\n        order_id (str): Order ID\n        body (GithubComKalshiExchangeInfraSvcApi2ModelAmendOrderRequest):\n\n    Raises:\n        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.\n        httpx.TimeoutException: If the request takes longer than Client.timeout.\n\n    Returns:\n        GithubComKalshiExchangeInfraSvcApi2ModelAmendOrderResponse\n    \"\"\"\n\n    return sync_detailed(\n        order_id=order_id,\n        client=client,\n        body=body,\n    ).parsed\n</code></pre>"},{"location":"api/portfolio/#kalshi_py.api.portfolio.amend_order.asyncio","title":"<code>kalshi_py.api.portfolio.amend_order.asyncio(order_id: str, *, client: Union[AuthenticatedClient, Client], body: GithubComKalshiExchangeInfraSvcApi2ModelAmendOrderRequest) -&gt; Optional[GithubComKalshiExchangeInfraSvcApi2ModelAmendOrderResponse]</code>  <code>async</code>","text":"<p>Amend Order</p> <p>Endpoint for amending the max number of fillable contracts and/or price in an existing order. Max fillable contracts is <code>remaining_count</code> + <code>fill_count</code>.</p> <p>Parameters:</p> Name Type Description Default <code>order_id</code> <code>str</code> <p>Order ID</p> required <code>body</code> <code>GithubComKalshiExchangeInfraSvcApi2ModelAmendOrderRequest</code> required <p>Raises:</p> Type Description <code>UnexpectedStatus</code> <p>If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.</p> <code>TimeoutException</code> <p>If the request takes longer than Client.timeout.</p> <p>Returns:</p> Type Description <code>Optional[GithubComKalshiExchangeInfraSvcApi2ModelAmendOrderResponse]</code> <p>GithubComKalshiExchangeInfraSvcApi2ModelAmendOrderResponse</p> Source code in <code>kalshi_py/api/portfolio/amend_order.py</code> <pre><code>async def asyncio(\n    order_id: str,\n    *,\n    client: Union[AuthenticatedClient, Client],\n    body: GithubComKalshiExchangeInfraSvcApi2ModelAmendOrderRequest,\n) -&gt; Optional[GithubComKalshiExchangeInfraSvcApi2ModelAmendOrderResponse]:\n    \"\"\"Amend Order\n\n      Endpoint for amending the max number of fillable contracts and/or price in an existing order. Max\n    fillable contracts is `remaining_count` + `fill_count`.\n\n    Args:\n        order_id (str): Order ID\n        body (GithubComKalshiExchangeInfraSvcApi2ModelAmendOrderRequest):\n\n    Raises:\n        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.\n        httpx.TimeoutException: If the request takes longer than Client.timeout.\n\n    Returns:\n        GithubComKalshiExchangeInfraSvcApi2ModelAmendOrderResponse\n    \"\"\"\n\n    return (\n        await asyncio_detailed(\n            order_id=order_id,\n            client=client,\n            body=body,\n        )\n    ).parsed\n</code></pre>"},{"location":"api/portfolio/#kalshi_py.api.portfolio.amend_order.sync_detailed","title":"<code>kalshi_py.api.portfolio.amend_order.sync_detailed(order_id: str, *, client: Union[AuthenticatedClient, Client], body: GithubComKalshiExchangeInfraSvcApi2ModelAmendOrderRequest) -&gt; Response[GithubComKalshiExchangeInfraSvcApi2ModelAmendOrderResponse]</code>","text":"<p>Amend Order</p> <p>Endpoint for amending the max number of fillable contracts and/or price in an existing order. Max fillable contracts is <code>remaining_count</code> + <code>fill_count</code>.</p> <p>Parameters:</p> Name Type Description Default <code>order_id</code> <code>str</code> <p>Order ID</p> required <code>body</code> <code>GithubComKalshiExchangeInfraSvcApi2ModelAmendOrderRequest</code> required <p>Raises:</p> Type Description <code>UnexpectedStatus</code> <p>If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.</p> <code>TimeoutException</code> <p>If the request takes longer than Client.timeout.</p> <p>Returns:</p> Type Description <code>Response[GithubComKalshiExchangeInfraSvcApi2ModelAmendOrderResponse]</code> <p>Response[GithubComKalshiExchangeInfraSvcApi2ModelAmendOrderResponse]</p> Source code in <code>kalshi_py/api/portfolio/amend_order.py</code> <pre><code>def sync_detailed(\n    order_id: str,\n    *,\n    client: Union[AuthenticatedClient, Client],\n    body: GithubComKalshiExchangeInfraSvcApi2ModelAmendOrderRequest,\n) -&gt; Response[GithubComKalshiExchangeInfraSvcApi2ModelAmendOrderResponse]:\n    \"\"\"Amend Order\n\n      Endpoint for amending the max number of fillable contracts and/or price in an existing order. Max\n    fillable contracts is `remaining_count` + `fill_count`.\n\n    Args:\n        order_id (str): Order ID\n        body (GithubComKalshiExchangeInfraSvcApi2ModelAmendOrderRequest):\n\n    Raises:\n        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.\n        httpx.TimeoutException: If the request takes longer than Client.timeout.\n\n    Returns:\n        Response[GithubComKalshiExchangeInfraSvcApi2ModelAmendOrderResponse]\n    \"\"\"\n\n    kwargs = _get_kwargs(\n        order_id=order_id,\n        body=body,\n    )\n\n    response = client.get_httpx_client().request(\n        **kwargs,\n    )\n\n    return _build_response(client=client, response=response)\n</code></pre>"},{"location":"api/portfolio/#kalshi_py.api.portfolio.amend_order.asyncio_detailed","title":"<code>kalshi_py.api.portfolio.amend_order.asyncio_detailed(order_id: str, *, client: Union[AuthenticatedClient, Client], body: GithubComKalshiExchangeInfraSvcApi2ModelAmendOrderRequest) -&gt; Response[GithubComKalshiExchangeInfraSvcApi2ModelAmendOrderResponse]</code>  <code>async</code>","text":"<p>Amend Order</p> <p>Endpoint for amending the max number of fillable contracts and/or price in an existing order. Max fillable contracts is <code>remaining_count</code> + <code>fill_count</code>.</p> <p>Parameters:</p> Name Type Description Default <code>order_id</code> <code>str</code> <p>Order ID</p> required <code>body</code> <code>GithubComKalshiExchangeInfraSvcApi2ModelAmendOrderRequest</code> required <p>Raises:</p> Type Description <code>UnexpectedStatus</code> <p>If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.</p> <code>TimeoutException</code> <p>If the request takes longer than Client.timeout.</p> <p>Returns:</p> Type Description <code>Response[GithubComKalshiExchangeInfraSvcApi2ModelAmendOrderResponse]</code> <p>Response[GithubComKalshiExchangeInfraSvcApi2ModelAmendOrderResponse]</p> Source code in <code>kalshi_py/api/portfolio/amend_order.py</code> <pre><code>async def asyncio_detailed(\n    order_id: str,\n    *,\n    client: Union[AuthenticatedClient, Client],\n    body: GithubComKalshiExchangeInfraSvcApi2ModelAmendOrderRequest,\n) -&gt; Response[GithubComKalshiExchangeInfraSvcApi2ModelAmendOrderResponse]:\n    \"\"\"Amend Order\n\n      Endpoint for amending the max number of fillable contracts and/or price in an existing order. Max\n    fillable contracts is `remaining_count` + `fill_count`.\n\n    Args:\n        order_id (str): Order ID\n        body (GithubComKalshiExchangeInfraSvcApi2ModelAmendOrderRequest):\n\n    Raises:\n        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.\n        httpx.TimeoutException: If the request takes longer than Client.timeout.\n\n    Returns:\n        Response[GithubComKalshiExchangeInfraSvcApi2ModelAmendOrderResponse]\n    \"\"\"\n\n    kwargs = _get_kwargs(\n        order_id=order_id,\n        body=body,\n    )\n\n    response = await client.get_async_httpx_client().request(**kwargs)\n\n    return _build_response(client=client, response=response)\n</code></pre>"},{"location":"api/portfolio/#batch-cancel-orders","title":"Batch Cancel Orders","text":"<p>Synchronous API Call</p> <p>Asynchronous API Call</p> <p>Synchronous Detailed Response</p> <p>Asynchronous Detailed Response</p>"},{"location":"api/portfolio/#kalshi_py.api.portfolio.batch_cancel_orders.sync","title":"<code>kalshi_py.api.portfolio.batch_cancel_orders.sync(*, client: Union[AuthenticatedClient, Client], body: GithubComKalshiExchangeInfraSvcApi2ModelBatchCancelOrdersRequest) -&gt; Optional[GithubComKalshiExchangeInfraSvcApi2ModelBatchCancelOrdersResponse]</code>","text":"<p>Batch Cancel Orders</p> <p>Endpoint for cancelling up to 20 orders at once. Available to members with advanced access only.</p> <p>Parameters:</p> Name Type Description Default <code>body</code> <code>GithubComKalshiExchangeInfraSvcApi2ModelBatchCancelOrdersRequest</code> required <p>Raises:</p> Type Description <code>UnexpectedStatus</code> <p>If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.</p> <code>TimeoutException</code> <p>If the request takes longer than Client.timeout.</p> <p>Returns:</p> Type Description <code>Optional[GithubComKalshiExchangeInfraSvcApi2ModelBatchCancelOrdersResponse]</code> <p>GithubComKalshiExchangeInfraSvcApi2ModelBatchCancelOrdersResponse</p> Source code in <code>kalshi_py/api/portfolio/batch_cancel_orders.py</code> <pre><code>def sync(\n    *,\n    client: Union[AuthenticatedClient, Client],\n    body: GithubComKalshiExchangeInfraSvcApi2ModelBatchCancelOrdersRequest,\n) -&gt; Optional[GithubComKalshiExchangeInfraSvcApi2ModelBatchCancelOrdersResponse]:\n    \"\"\"Batch Cancel Orders\n\n      Endpoint for cancelling up to 20 orders at once. Available to members with advanced access only.\n\n    Args:\n        body (GithubComKalshiExchangeInfraSvcApi2ModelBatchCancelOrdersRequest):\n\n    Raises:\n        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.\n        httpx.TimeoutException: If the request takes longer than Client.timeout.\n\n    Returns:\n        GithubComKalshiExchangeInfraSvcApi2ModelBatchCancelOrdersResponse\n    \"\"\"\n\n    return sync_detailed(\n        client=client,\n        body=body,\n    ).parsed\n</code></pre>"},{"location":"api/portfolio/#kalshi_py.api.portfolio.batch_cancel_orders.asyncio","title":"<code>kalshi_py.api.portfolio.batch_cancel_orders.asyncio(*, client: Union[AuthenticatedClient, Client], body: GithubComKalshiExchangeInfraSvcApi2ModelBatchCancelOrdersRequest) -&gt; Optional[GithubComKalshiExchangeInfraSvcApi2ModelBatchCancelOrdersResponse]</code>  <code>async</code>","text":"<p>Batch Cancel Orders</p> <p>Endpoint for cancelling up to 20 orders at once. Available to members with advanced access only.</p> <p>Parameters:</p> Name Type Description Default <code>body</code> <code>GithubComKalshiExchangeInfraSvcApi2ModelBatchCancelOrdersRequest</code> required <p>Raises:</p> Type Description <code>UnexpectedStatus</code> <p>If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.</p> <code>TimeoutException</code> <p>If the request takes longer than Client.timeout.</p> <p>Returns:</p> Type Description <code>Optional[GithubComKalshiExchangeInfraSvcApi2ModelBatchCancelOrdersResponse]</code> <p>GithubComKalshiExchangeInfraSvcApi2ModelBatchCancelOrdersResponse</p> Source code in <code>kalshi_py/api/portfolio/batch_cancel_orders.py</code> <pre><code>async def asyncio(\n    *,\n    client: Union[AuthenticatedClient, Client],\n    body: GithubComKalshiExchangeInfraSvcApi2ModelBatchCancelOrdersRequest,\n) -&gt; Optional[GithubComKalshiExchangeInfraSvcApi2ModelBatchCancelOrdersResponse]:\n    \"\"\"Batch Cancel Orders\n\n      Endpoint for cancelling up to 20 orders at once. Available to members with advanced access only.\n\n    Args:\n        body (GithubComKalshiExchangeInfraSvcApi2ModelBatchCancelOrdersRequest):\n\n    Raises:\n        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.\n        httpx.TimeoutException: If the request takes longer than Client.timeout.\n\n    Returns:\n        GithubComKalshiExchangeInfraSvcApi2ModelBatchCancelOrdersResponse\n    \"\"\"\n\n    return (\n        await asyncio_detailed(\n            client=client,\n            body=body,\n        )\n    ).parsed\n</code></pre>"},{"location":"api/portfolio/#kalshi_py.api.portfolio.batch_cancel_orders.sync_detailed","title":"<code>kalshi_py.api.portfolio.batch_cancel_orders.sync_detailed(*, client: Union[AuthenticatedClient, Client], body: GithubComKalshiExchangeInfraSvcApi2ModelBatchCancelOrdersRequest) -&gt; Response[GithubComKalshiExchangeInfraSvcApi2ModelBatchCancelOrdersResponse]</code>","text":"<p>Batch Cancel Orders</p> <p>Endpoint for cancelling up to 20 orders at once. Available to members with advanced access only.</p> <p>Parameters:</p> Name Type Description Default <code>body</code> <code>GithubComKalshiExchangeInfraSvcApi2ModelBatchCancelOrdersRequest</code> required <p>Raises:</p> Type Description <code>UnexpectedStatus</code> <p>If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.</p> <code>TimeoutException</code> <p>If the request takes longer than Client.timeout.</p> <p>Returns:</p> Type Description <code>Response[GithubComKalshiExchangeInfraSvcApi2ModelBatchCancelOrdersResponse]</code> <p>Response[GithubComKalshiExchangeInfraSvcApi2ModelBatchCancelOrdersResponse]</p> Source code in <code>kalshi_py/api/portfolio/batch_cancel_orders.py</code> <pre><code>def sync_detailed(\n    *,\n    client: Union[AuthenticatedClient, Client],\n    body: GithubComKalshiExchangeInfraSvcApi2ModelBatchCancelOrdersRequest,\n) -&gt; Response[GithubComKalshiExchangeInfraSvcApi2ModelBatchCancelOrdersResponse]:\n    \"\"\"Batch Cancel Orders\n\n      Endpoint for cancelling up to 20 orders at once. Available to members with advanced access only.\n\n    Args:\n        body (GithubComKalshiExchangeInfraSvcApi2ModelBatchCancelOrdersRequest):\n\n    Raises:\n        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.\n        httpx.TimeoutException: If the request takes longer than Client.timeout.\n\n    Returns:\n        Response[GithubComKalshiExchangeInfraSvcApi2ModelBatchCancelOrdersResponse]\n    \"\"\"\n\n    kwargs = _get_kwargs(\n        body=body,\n    )\n\n    response = client.get_httpx_client().request(\n        **kwargs,\n    )\n\n    return _build_response(client=client, response=response)\n</code></pre>"},{"location":"api/portfolio/#kalshi_py.api.portfolio.batch_cancel_orders.asyncio_detailed","title":"<code>kalshi_py.api.portfolio.batch_cancel_orders.asyncio_detailed(*, client: Union[AuthenticatedClient, Client], body: GithubComKalshiExchangeInfraSvcApi2ModelBatchCancelOrdersRequest) -&gt; Response[GithubComKalshiExchangeInfraSvcApi2ModelBatchCancelOrdersResponse]</code>  <code>async</code>","text":"<p>Batch Cancel Orders</p> <p>Endpoint for cancelling up to 20 orders at once. Available to members with advanced access only.</p> <p>Parameters:</p> Name Type Description Default <code>body</code> <code>GithubComKalshiExchangeInfraSvcApi2ModelBatchCancelOrdersRequest</code> required <p>Raises:</p> Type Description <code>UnexpectedStatus</code> <p>If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.</p> <code>TimeoutException</code> <p>If the request takes longer than Client.timeout.</p> <p>Returns:</p> Type Description <code>Response[GithubComKalshiExchangeInfraSvcApi2ModelBatchCancelOrdersResponse]</code> <p>Response[GithubComKalshiExchangeInfraSvcApi2ModelBatchCancelOrdersResponse]</p> Source code in <code>kalshi_py/api/portfolio/batch_cancel_orders.py</code> <pre><code>async def asyncio_detailed(\n    *,\n    client: Union[AuthenticatedClient, Client],\n    body: GithubComKalshiExchangeInfraSvcApi2ModelBatchCancelOrdersRequest,\n) -&gt; Response[GithubComKalshiExchangeInfraSvcApi2ModelBatchCancelOrdersResponse]:\n    \"\"\"Batch Cancel Orders\n\n      Endpoint for cancelling up to 20 orders at once. Available to members with advanced access only.\n\n    Args:\n        body (GithubComKalshiExchangeInfraSvcApi2ModelBatchCancelOrdersRequest):\n\n    Raises:\n        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.\n        httpx.TimeoutException: If the request takes longer than Client.timeout.\n\n    Returns:\n        Response[GithubComKalshiExchangeInfraSvcApi2ModelBatchCancelOrdersResponse]\n    \"\"\"\n\n    kwargs = _get_kwargs(\n        body=body,\n    )\n\n    response = await client.get_async_httpx_client().request(**kwargs)\n\n    return _build_response(client=client, response=response)\n</code></pre>"},{"location":"api/portfolio/#batch-create-orders","title":"Batch Create Orders","text":"<p>Synchronous API Call</p> <p>Asynchronous API Call</p> <p>Synchronous Detailed Response</p> <p>Asynchronous Detailed Response</p>"},{"location":"api/portfolio/#kalshi_py.api.portfolio.batch_create_orders.sync","title":"<code>kalshi_py.api.portfolio.batch_create_orders.sync(*, client: Union[AuthenticatedClient, Client], body: GithubComKalshiExchangeInfraSvcApi2ModelBatchCreateOrdersRequest) -&gt; Optional[GithubComKalshiExchangeInfraSvcApi2ModelBatchCreateOrdersResponse]</code>","text":"<p>Batch Create Orders</p> <p>Endpoint for submitting a batch of orders. Each order in the batch is counted against the total rate limit for order operations. Consequently, the size of the batch is capped by the current per- second rate-limit configuration applicable to the user. At the moment of writing, the limit is 20 orders per batch. Available to members with advanced access only.</p> <p>Parameters:</p> Name Type Description Default <code>body</code> <code>GithubComKalshiExchangeInfraSvcApi2ModelBatchCreateOrdersRequest</code> required <p>Raises:</p> Type Description <code>UnexpectedStatus</code> <p>If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.</p> <code>TimeoutException</code> <p>If the request takes longer than Client.timeout.</p> <p>Returns:</p> Type Description <code>Optional[GithubComKalshiExchangeInfraSvcApi2ModelBatchCreateOrdersResponse]</code> <p>GithubComKalshiExchangeInfraSvcApi2ModelBatchCreateOrdersResponse</p> Source code in <code>kalshi_py/api/portfolio/batch_create_orders.py</code> <pre><code>def sync(\n    *,\n    client: Union[AuthenticatedClient, Client],\n    body: GithubComKalshiExchangeInfraSvcApi2ModelBatchCreateOrdersRequest,\n) -&gt; Optional[GithubComKalshiExchangeInfraSvcApi2ModelBatchCreateOrdersResponse]:\n    \"\"\"Batch Create Orders\n\n      Endpoint for submitting a batch of orders. Each order in the batch is counted against the total\n    rate limit for order operations. Consequently, the size of the batch is capped by the current per-\n    second rate-limit configuration applicable to the user. At the moment of writing, the limit is 20\n    orders per batch. Available to members with advanced access only.\n\n    Args:\n        body (GithubComKalshiExchangeInfraSvcApi2ModelBatchCreateOrdersRequest):\n\n    Raises:\n        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.\n        httpx.TimeoutException: If the request takes longer than Client.timeout.\n\n    Returns:\n        GithubComKalshiExchangeInfraSvcApi2ModelBatchCreateOrdersResponse\n    \"\"\"\n\n    return sync_detailed(\n        client=client,\n        body=body,\n    ).parsed\n</code></pre>"},{"location":"api/portfolio/#kalshi_py.api.portfolio.batch_create_orders.asyncio","title":"<code>kalshi_py.api.portfolio.batch_create_orders.asyncio(*, client: Union[AuthenticatedClient, Client], body: GithubComKalshiExchangeInfraSvcApi2ModelBatchCreateOrdersRequest) -&gt; Optional[GithubComKalshiExchangeInfraSvcApi2ModelBatchCreateOrdersResponse]</code>  <code>async</code>","text":"<p>Batch Create Orders</p> <p>Endpoint for submitting a batch of orders. Each order in the batch is counted against the total rate limit for order operations. Consequently, the size of the batch is capped by the current per- second rate-limit configuration applicable to the user. At the moment of writing, the limit is 20 orders per batch. Available to members with advanced access only.</p> <p>Parameters:</p> Name Type Description Default <code>body</code> <code>GithubComKalshiExchangeInfraSvcApi2ModelBatchCreateOrdersRequest</code> required <p>Raises:</p> Type Description <code>UnexpectedStatus</code> <p>If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.</p> <code>TimeoutException</code> <p>If the request takes longer than Client.timeout.</p> <p>Returns:</p> Type Description <code>Optional[GithubComKalshiExchangeInfraSvcApi2ModelBatchCreateOrdersResponse]</code> <p>GithubComKalshiExchangeInfraSvcApi2ModelBatchCreateOrdersResponse</p> Source code in <code>kalshi_py/api/portfolio/batch_create_orders.py</code> <pre><code>async def asyncio(\n    *,\n    client: Union[AuthenticatedClient, Client],\n    body: GithubComKalshiExchangeInfraSvcApi2ModelBatchCreateOrdersRequest,\n) -&gt; Optional[GithubComKalshiExchangeInfraSvcApi2ModelBatchCreateOrdersResponse]:\n    \"\"\"Batch Create Orders\n\n      Endpoint for submitting a batch of orders. Each order in the batch is counted against the total\n    rate limit for order operations. Consequently, the size of the batch is capped by the current per-\n    second rate-limit configuration applicable to the user. At the moment of writing, the limit is 20\n    orders per batch. Available to members with advanced access only.\n\n    Args:\n        body (GithubComKalshiExchangeInfraSvcApi2ModelBatchCreateOrdersRequest):\n\n    Raises:\n        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.\n        httpx.TimeoutException: If the request takes longer than Client.timeout.\n\n    Returns:\n        GithubComKalshiExchangeInfraSvcApi2ModelBatchCreateOrdersResponse\n    \"\"\"\n\n    return (\n        await asyncio_detailed(\n            client=client,\n            body=body,\n        )\n    ).parsed\n</code></pre>"},{"location":"api/portfolio/#kalshi_py.api.portfolio.batch_create_orders.sync_detailed","title":"<code>kalshi_py.api.portfolio.batch_create_orders.sync_detailed(*, client: Union[AuthenticatedClient, Client], body: GithubComKalshiExchangeInfraSvcApi2ModelBatchCreateOrdersRequest) -&gt; Response[GithubComKalshiExchangeInfraSvcApi2ModelBatchCreateOrdersResponse]</code>","text":"<p>Batch Create Orders</p> <p>Endpoint for submitting a batch of orders. Each order in the batch is counted against the total rate limit for order operations. Consequently, the size of the batch is capped by the current per- second rate-limit configuration applicable to the user. At the moment of writing, the limit is 20 orders per batch. Available to members with advanced access only.</p> <p>Parameters:</p> Name Type Description Default <code>body</code> <code>GithubComKalshiExchangeInfraSvcApi2ModelBatchCreateOrdersRequest</code> required <p>Raises:</p> Type Description <code>UnexpectedStatus</code> <p>If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.</p> <code>TimeoutException</code> <p>If the request takes longer than Client.timeout.</p> <p>Returns:</p> Type Description <code>Response[GithubComKalshiExchangeInfraSvcApi2ModelBatchCreateOrdersResponse]</code> <p>Response[GithubComKalshiExchangeInfraSvcApi2ModelBatchCreateOrdersResponse]</p> Source code in <code>kalshi_py/api/portfolio/batch_create_orders.py</code> <pre><code>def sync_detailed(\n    *,\n    client: Union[AuthenticatedClient, Client],\n    body: GithubComKalshiExchangeInfraSvcApi2ModelBatchCreateOrdersRequest,\n) -&gt; Response[GithubComKalshiExchangeInfraSvcApi2ModelBatchCreateOrdersResponse]:\n    \"\"\"Batch Create Orders\n\n      Endpoint for submitting a batch of orders. Each order in the batch is counted against the total\n    rate limit for order operations. Consequently, the size of the batch is capped by the current per-\n    second rate-limit configuration applicable to the user. At the moment of writing, the limit is 20\n    orders per batch. Available to members with advanced access only.\n\n    Args:\n        body (GithubComKalshiExchangeInfraSvcApi2ModelBatchCreateOrdersRequest):\n\n    Raises:\n        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.\n        httpx.TimeoutException: If the request takes longer than Client.timeout.\n\n    Returns:\n        Response[GithubComKalshiExchangeInfraSvcApi2ModelBatchCreateOrdersResponse]\n    \"\"\"\n\n    kwargs = _get_kwargs(\n        body=body,\n    )\n\n    response = client.get_httpx_client().request(\n        **kwargs,\n    )\n\n    return _build_response(client=client, response=response)\n</code></pre>"},{"location":"api/portfolio/#kalshi_py.api.portfolio.batch_create_orders.asyncio_detailed","title":"<code>kalshi_py.api.portfolio.batch_create_orders.asyncio_detailed(*, client: Union[AuthenticatedClient, Client], body: GithubComKalshiExchangeInfraSvcApi2ModelBatchCreateOrdersRequest) -&gt; Response[GithubComKalshiExchangeInfraSvcApi2ModelBatchCreateOrdersResponse]</code>  <code>async</code>","text":"<p>Batch Create Orders</p> <p>Endpoint for submitting a batch of orders. Each order in the batch is counted against the total rate limit for order operations. Consequently, the size of the batch is capped by the current per- second rate-limit configuration applicable to the user. At the moment of writing, the limit is 20 orders per batch. Available to members with advanced access only.</p> <p>Parameters:</p> Name Type Description Default <code>body</code> <code>GithubComKalshiExchangeInfraSvcApi2ModelBatchCreateOrdersRequest</code> required <p>Raises:</p> Type Description <code>UnexpectedStatus</code> <p>If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.</p> <code>TimeoutException</code> <p>If the request takes longer than Client.timeout.</p> <p>Returns:</p> Type Description <code>Response[GithubComKalshiExchangeInfraSvcApi2ModelBatchCreateOrdersResponse]</code> <p>Response[GithubComKalshiExchangeInfraSvcApi2ModelBatchCreateOrdersResponse]</p> Source code in <code>kalshi_py/api/portfolio/batch_create_orders.py</code> <pre><code>async def asyncio_detailed(\n    *,\n    client: Union[AuthenticatedClient, Client],\n    body: GithubComKalshiExchangeInfraSvcApi2ModelBatchCreateOrdersRequest,\n) -&gt; Response[GithubComKalshiExchangeInfraSvcApi2ModelBatchCreateOrdersResponse]:\n    \"\"\"Batch Create Orders\n\n      Endpoint for submitting a batch of orders. Each order in the batch is counted against the total\n    rate limit for order operations. Consequently, the size of the batch is capped by the current per-\n    second rate-limit configuration applicable to the user. At the moment of writing, the limit is 20\n    orders per batch. Available to members with advanced access only.\n\n    Args:\n        body (GithubComKalshiExchangeInfraSvcApi2ModelBatchCreateOrdersRequest):\n\n    Raises:\n        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.\n        httpx.TimeoutException: If the request takes longer than Client.timeout.\n\n    Returns:\n        Response[GithubComKalshiExchangeInfraSvcApi2ModelBatchCreateOrdersResponse]\n    \"\"\"\n\n    kwargs = _get_kwargs(\n        body=body,\n    )\n\n    response = await client.get_async_httpx_client().request(**kwargs)\n\n    return _build_response(client=client, response=response)\n</code></pre>"},{"location":"api/portfolio/#cancel-order","title":"Cancel Order","text":"<p>Synchronous API Call</p> <p>Asynchronous API Call</p> <p>Synchronous Detailed Response</p> <p>Asynchronous Detailed Response</p>"},{"location":"api/portfolio/#kalshi_py.api.portfolio.cancel_order.sync","title":"<code>kalshi_py.api.portfolio.cancel_order.sync(order_id: str, *, client: Union[AuthenticatedClient, Client]) -&gt; Optional[GithubComKalshiExchangeInfraSvcApi2ModelCancelOrderResponse]</code>","text":"<p>Cancel Order</p> <p>Endpoint for canceling orders. The value for the orderId should match the id field of the order you want to decrease. Commonly, DELETE-type endpoints return 204 status with no body content on success. But we can't completely delete the order, as it may be partially filled already. Instead, the DeleteOrder endpoint reduce the order completely, essentially zeroing the remaining resting contracts on it. The zeroed order is returned on the response payload as a form of validation for the client.</p> <p>Parameters:</p> Name Type Description Default <code>order_id</code> <code>str</code> <p>Order ID</p> required <p>Raises:</p> Type Description <code>UnexpectedStatus</code> <p>If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.</p> <code>TimeoutException</code> <p>If the request takes longer than Client.timeout.</p> <p>Returns:</p> Type Description <code>Optional[GithubComKalshiExchangeInfraSvcApi2ModelCancelOrderResponse]</code> <p>GithubComKalshiExchangeInfraSvcApi2ModelCancelOrderResponse</p> Source code in <code>kalshi_py/api/portfolio/cancel_order.py</code> <pre><code>def sync(\n    order_id: str,\n    *,\n    client: Union[AuthenticatedClient, Client],\n) -&gt; Optional[GithubComKalshiExchangeInfraSvcApi2ModelCancelOrderResponse]:\n    \"\"\"Cancel Order\n\n      Endpoint for canceling orders. The value for the orderId should match the id field of the order you\n    want to decrease. Commonly, DELETE-type endpoints return 204 status with no body content on success.\n    But we can't completely delete the order, as it may be partially filled already. Instead, the\n    DeleteOrder endpoint reduce the order completely, essentially zeroing the remaining resting\n    contracts on it. The zeroed order is returned on the response payload as a form of validation for\n    the client.\n\n    Args:\n        order_id (str): Order ID\n\n    Raises:\n        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.\n        httpx.TimeoutException: If the request takes longer than Client.timeout.\n\n    Returns:\n        GithubComKalshiExchangeInfraSvcApi2ModelCancelOrderResponse\n    \"\"\"\n\n    return sync_detailed(\n        order_id=order_id,\n        client=client,\n    ).parsed\n</code></pre>"},{"location":"api/portfolio/#kalshi_py.api.portfolio.cancel_order.asyncio","title":"<code>kalshi_py.api.portfolio.cancel_order.asyncio(order_id: str, *, client: Union[AuthenticatedClient, Client]) -&gt; Optional[GithubComKalshiExchangeInfraSvcApi2ModelCancelOrderResponse]</code>  <code>async</code>","text":"<p>Cancel Order</p> <p>Endpoint for canceling orders. The value for the orderId should match the id field of the order you want to decrease. Commonly, DELETE-type endpoints return 204 status with no body content on success. But we can't completely delete the order, as it may be partially filled already. Instead, the DeleteOrder endpoint reduce the order completely, essentially zeroing the remaining resting contracts on it. The zeroed order is returned on the response payload as a form of validation for the client.</p> <p>Parameters:</p> Name Type Description Default <code>order_id</code> <code>str</code> <p>Order ID</p> required <p>Raises:</p> Type Description <code>UnexpectedStatus</code> <p>If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.</p> <code>TimeoutException</code> <p>If the request takes longer than Client.timeout.</p> <p>Returns:</p> Type Description <code>Optional[GithubComKalshiExchangeInfraSvcApi2ModelCancelOrderResponse]</code> <p>GithubComKalshiExchangeInfraSvcApi2ModelCancelOrderResponse</p> Source code in <code>kalshi_py/api/portfolio/cancel_order.py</code> <pre><code>async def asyncio(\n    order_id: str,\n    *,\n    client: Union[AuthenticatedClient, Client],\n) -&gt; Optional[GithubComKalshiExchangeInfraSvcApi2ModelCancelOrderResponse]:\n    \"\"\"Cancel Order\n\n      Endpoint for canceling orders. The value for the orderId should match the id field of the order you\n    want to decrease. Commonly, DELETE-type endpoints return 204 status with no body content on success.\n    But we can't completely delete the order, as it may be partially filled already. Instead, the\n    DeleteOrder endpoint reduce the order completely, essentially zeroing the remaining resting\n    contracts on it. The zeroed order is returned on the response payload as a form of validation for\n    the client.\n\n    Args:\n        order_id (str): Order ID\n\n    Raises:\n        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.\n        httpx.TimeoutException: If the request takes longer than Client.timeout.\n\n    Returns:\n        GithubComKalshiExchangeInfraSvcApi2ModelCancelOrderResponse\n    \"\"\"\n\n    return (\n        await asyncio_detailed(\n            order_id=order_id,\n            client=client,\n        )\n    ).parsed\n</code></pre>"},{"location":"api/portfolio/#kalshi_py.api.portfolio.cancel_order.sync_detailed","title":"<code>kalshi_py.api.portfolio.cancel_order.sync_detailed(order_id: str, *, client: Union[AuthenticatedClient, Client]) -&gt; Response[GithubComKalshiExchangeInfraSvcApi2ModelCancelOrderResponse]</code>","text":"<p>Cancel Order</p> <p>Endpoint for canceling orders. The value for the orderId should match the id field of the order you want to decrease. Commonly, DELETE-type endpoints return 204 status with no body content on success. But we can't completely delete the order, as it may be partially filled already. Instead, the DeleteOrder endpoint reduce the order completely, essentially zeroing the remaining resting contracts on it. The zeroed order is returned on the response payload as a form of validation for the client.</p> <p>Parameters:</p> Name Type Description Default <code>order_id</code> <code>str</code> <p>Order ID</p> required <p>Raises:</p> Type Description <code>UnexpectedStatus</code> <p>If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.</p> <code>TimeoutException</code> <p>If the request takes longer than Client.timeout.</p> <p>Returns:</p> Type Description <code>Response[GithubComKalshiExchangeInfraSvcApi2ModelCancelOrderResponse]</code> <p>Response[GithubComKalshiExchangeInfraSvcApi2ModelCancelOrderResponse]</p> Source code in <code>kalshi_py/api/portfolio/cancel_order.py</code> <pre><code>def sync_detailed(\n    order_id: str,\n    *,\n    client: Union[AuthenticatedClient, Client],\n) -&gt; Response[GithubComKalshiExchangeInfraSvcApi2ModelCancelOrderResponse]:\n    \"\"\"Cancel Order\n\n      Endpoint for canceling orders. The value for the orderId should match the id field of the order you\n    want to decrease. Commonly, DELETE-type endpoints return 204 status with no body content on success.\n    But we can't completely delete the order, as it may be partially filled already. Instead, the\n    DeleteOrder endpoint reduce the order completely, essentially zeroing the remaining resting\n    contracts on it. The zeroed order is returned on the response payload as a form of validation for\n    the client.\n\n    Args:\n        order_id (str): Order ID\n\n    Raises:\n        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.\n        httpx.TimeoutException: If the request takes longer than Client.timeout.\n\n    Returns:\n        Response[GithubComKalshiExchangeInfraSvcApi2ModelCancelOrderResponse]\n    \"\"\"\n\n    kwargs = _get_kwargs(\n        order_id=order_id,\n    )\n\n    response = client.get_httpx_client().request(\n        **kwargs,\n    )\n\n    return _build_response(client=client, response=response)\n</code></pre>"},{"location":"api/portfolio/#kalshi_py.api.portfolio.cancel_order.asyncio_detailed","title":"<code>kalshi_py.api.portfolio.cancel_order.asyncio_detailed(order_id: str, *, client: Union[AuthenticatedClient, Client]) -&gt; Response[GithubComKalshiExchangeInfraSvcApi2ModelCancelOrderResponse]</code>  <code>async</code>","text":"<p>Cancel Order</p> <p>Endpoint for canceling orders. The value for the orderId should match the id field of the order you want to decrease. Commonly, DELETE-type endpoints return 204 status with no body content on success. But we can't completely delete the order, as it may be partially filled already. Instead, the DeleteOrder endpoint reduce the order completely, essentially zeroing the remaining resting contracts on it. The zeroed order is returned on the response payload as a form of validation for the client.</p> <p>Parameters:</p> Name Type Description Default <code>order_id</code> <code>str</code> <p>Order ID</p> required <p>Raises:</p> Type Description <code>UnexpectedStatus</code> <p>If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.</p> <code>TimeoutException</code> <p>If the request takes longer than Client.timeout.</p> <p>Returns:</p> Type Description <code>Response[GithubComKalshiExchangeInfraSvcApi2ModelCancelOrderResponse]</code> <p>Response[GithubComKalshiExchangeInfraSvcApi2ModelCancelOrderResponse]</p> Source code in <code>kalshi_py/api/portfolio/cancel_order.py</code> <pre><code>async def asyncio_detailed(\n    order_id: str,\n    *,\n    client: Union[AuthenticatedClient, Client],\n) -&gt; Response[GithubComKalshiExchangeInfraSvcApi2ModelCancelOrderResponse]:\n    \"\"\"Cancel Order\n\n      Endpoint for canceling orders. The value for the orderId should match the id field of the order you\n    want to decrease. Commonly, DELETE-type endpoints return 204 status with no body content on success.\n    But we can't completely delete the order, as it may be partially filled already. Instead, the\n    DeleteOrder endpoint reduce the order completely, essentially zeroing the remaining resting\n    contracts on it. The zeroed order is returned on the response payload as a form of validation for\n    the client.\n\n    Args:\n        order_id (str): Order ID\n\n    Raises:\n        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.\n        httpx.TimeoutException: If the request takes longer than Client.timeout.\n\n    Returns:\n        Response[GithubComKalshiExchangeInfraSvcApi2ModelCancelOrderResponse]\n    \"\"\"\n\n    kwargs = _get_kwargs(\n        order_id=order_id,\n    )\n\n    response = await client.get_async_httpx_client().request(**kwargs)\n\n    return _build_response(client=client, response=response)\n</code></pre>"},{"location":"api/portfolio/#create-order","title":"Create Order","text":"<p>Synchronous API Call</p> <p>Asynchronous API Call</p> <p>Synchronous Detailed Response</p> <p>Asynchronous Detailed Response</p>"},{"location":"api/portfolio/#kalshi_py.api.portfolio.create_order.sync","title":"<code>kalshi_py.api.portfolio.create_order.sync(*, client: Union[AuthenticatedClient, Client], body: GithubComKalshiExchangeInfraSvcApi2ModelCreateOrderRequest) -&gt; Optional[GithubComKalshiExchangeInfraSvcApi2ModelCreateOrderResponse]</code>","text":"<p>Create Order</p> <p>Endpoint for submitting orders in a market.</p> <p>Parameters:</p> Name Type Description Default <code>body</code> <code>GithubComKalshiExchangeInfraSvcApi2ModelCreateOrderRequest</code> required <p>Raises:</p> Type Description <code>UnexpectedStatus</code> <p>If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.</p> <code>TimeoutException</code> <p>If the request takes longer than Client.timeout.</p> <p>Returns:</p> Type Description <code>Optional[GithubComKalshiExchangeInfraSvcApi2ModelCreateOrderResponse]</code> <p>GithubComKalshiExchangeInfraSvcApi2ModelCreateOrderResponse</p> Source code in <code>kalshi_py/api/portfolio/create_order.py</code> <pre><code>def sync(\n    *,\n    client: Union[AuthenticatedClient, Client],\n    body: GithubComKalshiExchangeInfraSvcApi2ModelCreateOrderRequest,\n) -&gt; Optional[GithubComKalshiExchangeInfraSvcApi2ModelCreateOrderResponse]:\n    \"\"\"Create Order\n\n      Endpoint for submitting orders in a market.\n\n    Args:\n        body (GithubComKalshiExchangeInfraSvcApi2ModelCreateOrderRequest):\n\n    Raises:\n        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.\n        httpx.TimeoutException: If the request takes longer than Client.timeout.\n\n    Returns:\n        GithubComKalshiExchangeInfraSvcApi2ModelCreateOrderResponse\n    \"\"\"\n\n    return sync_detailed(\n        client=client,\n        body=body,\n    ).parsed\n</code></pre>"},{"location":"api/portfolio/#kalshi_py.api.portfolio.create_order.asyncio","title":"<code>kalshi_py.api.portfolio.create_order.asyncio(*, client: Union[AuthenticatedClient, Client], body: GithubComKalshiExchangeInfraSvcApi2ModelCreateOrderRequest) -&gt; Optional[GithubComKalshiExchangeInfraSvcApi2ModelCreateOrderResponse]</code>  <code>async</code>","text":"<p>Create Order</p> <p>Endpoint for submitting orders in a market.</p> <p>Parameters:</p> Name Type Description Default <code>body</code> <code>GithubComKalshiExchangeInfraSvcApi2ModelCreateOrderRequest</code> required <p>Raises:</p> Type Description <code>UnexpectedStatus</code> <p>If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.</p> <code>TimeoutException</code> <p>If the request takes longer than Client.timeout.</p> <p>Returns:</p> Type Description <code>Optional[GithubComKalshiExchangeInfraSvcApi2ModelCreateOrderResponse]</code> <p>GithubComKalshiExchangeInfraSvcApi2ModelCreateOrderResponse</p> Source code in <code>kalshi_py/api/portfolio/create_order.py</code> <pre><code>async def asyncio(\n    *,\n    client: Union[AuthenticatedClient, Client],\n    body: GithubComKalshiExchangeInfraSvcApi2ModelCreateOrderRequest,\n) -&gt; Optional[GithubComKalshiExchangeInfraSvcApi2ModelCreateOrderResponse]:\n    \"\"\"Create Order\n\n      Endpoint for submitting orders in a market.\n\n    Args:\n        body (GithubComKalshiExchangeInfraSvcApi2ModelCreateOrderRequest):\n\n    Raises:\n        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.\n        httpx.TimeoutException: If the request takes longer than Client.timeout.\n\n    Returns:\n        GithubComKalshiExchangeInfraSvcApi2ModelCreateOrderResponse\n    \"\"\"\n\n    return (\n        await asyncio_detailed(\n            client=client,\n            body=body,\n        )\n    ).parsed\n</code></pre>"},{"location":"api/portfolio/#kalshi_py.api.portfolio.create_order.sync_detailed","title":"<code>kalshi_py.api.portfolio.create_order.sync_detailed(*, client: Union[AuthenticatedClient, Client], body: GithubComKalshiExchangeInfraSvcApi2ModelCreateOrderRequest) -&gt; Response[GithubComKalshiExchangeInfraSvcApi2ModelCreateOrderResponse]</code>","text":"<p>Create Order</p> <p>Endpoint for submitting orders in a market.</p> <p>Parameters:</p> Name Type Description Default <code>body</code> <code>GithubComKalshiExchangeInfraSvcApi2ModelCreateOrderRequest</code> required <p>Raises:</p> Type Description <code>UnexpectedStatus</code> <p>If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.</p> <code>TimeoutException</code> <p>If the request takes longer than Client.timeout.</p> <p>Returns:</p> Type Description <code>Response[GithubComKalshiExchangeInfraSvcApi2ModelCreateOrderResponse]</code> <p>Response[GithubComKalshiExchangeInfraSvcApi2ModelCreateOrderResponse]</p> Source code in <code>kalshi_py/api/portfolio/create_order.py</code> <pre><code>def sync_detailed(\n    *,\n    client: Union[AuthenticatedClient, Client],\n    body: GithubComKalshiExchangeInfraSvcApi2ModelCreateOrderRequest,\n) -&gt; Response[GithubComKalshiExchangeInfraSvcApi2ModelCreateOrderResponse]:\n    \"\"\"Create Order\n\n      Endpoint for submitting orders in a market.\n\n    Args:\n        body (GithubComKalshiExchangeInfraSvcApi2ModelCreateOrderRequest):\n\n    Raises:\n        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.\n        httpx.TimeoutException: If the request takes longer than Client.timeout.\n\n    Returns:\n        Response[GithubComKalshiExchangeInfraSvcApi2ModelCreateOrderResponse]\n    \"\"\"\n\n    kwargs = _get_kwargs(\n        body=body,\n    )\n\n    response = client.get_httpx_client().request(\n        **kwargs,\n    )\n\n    return _build_response(client=client, response=response)\n</code></pre>"},{"location":"api/portfolio/#kalshi_py.api.portfolio.create_order.asyncio_detailed","title":"<code>kalshi_py.api.portfolio.create_order.asyncio_detailed(*, client: Union[AuthenticatedClient, Client], body: GithubComKalshiExchangeInfraSvcApi2ModelCreateOrderRequest) -&gt; Response[GithubComKalshiExchangeInfraSvcApi2ModelCreateOrderResponse]</code>  <code>async</code>","text":"<p>Create Order</p> <p>Endpoint for submitting orders in a market.</p> <p>Parameters:</p> Name Type Description Default <code>body</code> <code>GithubComKalshiExchangeInfraSvcApi2ModelCreateOrderRequest</code> required <p>Raises:</p> Type Description <code>UnexpectedStatus</code> <p>If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.</p> <code>TimeoutException</code> <p>If the request takes longer than Client.timeout.</p> <p>Returns:</p> Type Description <code>Response[GithubComKalshiExchangeInfraSvcApi2ModelCreateOrderResponse]</code> <p>Response[GithubComKalshiExchangeInfraSvcApi2ModelCreateOrderResponse]</p> Source code in <code>kalshi_py/api/portfolio/create_order.py</code> <pre><code>async def asyncio_detailed(\n    *,\n    client: Union[AuthenticatedClient, Client],\n    body: GithubComKalshiExchangeInfraSvcApi2ModelCreateOrderRequest,\n) -&gt; Response[GithubComKalshiExchangeInfraSvcApi2ModelCreateOrderResponse]:\n    \"\"\"Create Order\n\n      Endpoint for submitting orders in a market.\n\n    Args:\n        body (GithubComKalshiExchangeInfraSvcApi2ModelCreateOrderRequest):\n\n    Raises:\n        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.\n        httpx.TimeoutException: If the request takes longer than Client.timeout.\n\n    Returns:\n        Response[GithubComKalshiExchangeInfraSvcApi2ModelCreateOrderResponse]\n    \"\"\"\n\n    kwargs = _get_kwargs(\n        body=body,\n    )\n\n    response = await client.get_async_httpx_client().request(**kwargs)\n\n    return _build_response(client=client, response=response)\n</code></pre>"},{"location":"api/portfolio/#create-order-group","title":"Create Order Group","text":"<p>Synchronous API Call</p> <p>Asynchronous API Call</p> <p>Synchronous Detailed Response</p> <p>Asynchronous Detailed Response</p>"},{"location":"api/portfolio/#kalshi_py.api.portfolio.create_order_group.sync","title":"<code>kalshi_py.api.portfolio.create_order_group.sync(*, client: Union[AuthenticatedClient, Client], body: GithubComKalshiExchangeInfraSvcApi2ModelCreateOrderGroupRequest) -&gt; Optional[GithubComKalshiExchangeInfraSvcApi2ModelCreateOrderGroupResponse]</code>","text":"<p>Create Order Group</p> <p>Creates a new order group with a contracts limit. When the limit is hit, all orders in the group are cancelled and no new orders can be placed until reset.</p> <p>Parameters:</p> Name Type Description Default <code>body</code> <code>GithubComKalshiExchangeInfraSvcApi2ModelCreateOrderGroupRequest</code> required <p>Raises:</p> Type Description <code>UnexpectedStatus</code> <p>If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.</p> <code>TimeoutException</code> <p>If the request takes longer than Client.timeout.</p> <p>Returns:</p> Type Description <code>Optional[GithubComKalshiExchangeInfraSvcApi2ModelCreateOrderGroupResponse]</code> <p>GithubComKalshiExchangeInfraSvcApi2ModelCreateOrderGroupResponse</p> Source code in <code>kalshi_py/api/portfolio/create_order_group.py</code> <pre><code>def sync(\n    *,\n    client: Union[AuthenticatedClient, Client],\n    body: GithubComKalshiExchangeInfraSvcApi2ModelCreateOrderGroupRequest,\n) -&gt; Optional[GithubComKalshiExchangeInfraSvcApi2ModelCreateOrderGroupResponse]:\n    \"\"\"Create Order Group\n\n      Creates a new order group with a contracts limit. When the limit is hit, all orders in the group\n    are cancelled and no new orders can be placed until reset.\n\n    Args:\n        body (GithubComKalshiExchangeInfraSvcApi2ModelCreateOrderGroupRequest):\n\n    Raises:\n        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.\n        httpx.TimeoutException: If the request takes longer than Client.timeout.\n\n    Returns:\n        GithubComKalshiExchangeInfraSvcApi2ModelCreateOrderGroupResponse\n    \"\"\"\n\n    return sync_detailed(\n        client=client,\n        body=body,\n    ).parsed\n</code></pre>"},{"location":"api/portfolio/#kalshi_py.api.portfolio.create_order_group.asyncio","title":"<code>kalshi_py.api.portfolio.create_order_group.asyncio(*, client: Union[AuthenticatedClient, Client], body: GithubComKalshiExchangeInfraSvcApi2ModelCreateOrderGroupRequest) -&gt; Optional[GithubComKalshiExchangeInfraSvcApi2ModelCreateOrderGroupResponse]</code>  <code>async</code>","text":"<p>Create Order Group</p> <p>Creates a new order group with a contracts limit. When the limit is hit, all orders in the group are cancelled and no new orders can be placed until reset.</p> <p>Parameters:</p> Name Type Description Default <code>body</code> <code>GithubComKalshiExchangeInfraSvcApi2ModelCreateOrderGroupRequest</code> required <p>Raises:</p> Type Description <code>UnexpectedStatus</code> <p>If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.</p> <code>TimeoutException</code> <p>If the request takes longer than Client.timeout.</p> <p>Returns:</p> Type Description <code>Optional[GithubComKalshiExchangeInfraSvcApi2ModelCreateOrderGroupResponse]</code> <p>GithubComKalshiExchangeInfraSvcApi2ModelCreateOrderGroupResponse</p> Source code in <code>kalshi_py/api/portfolio/create_order_group.py</code> <pre><code>async def asyncio(\n    *,\n    client: Union[AuthenticatedClient, Client],\n    body: GithubComKalshiExchangeInfraSvcApi2ModelCreateOrderGroupRequest,\n) -&gt; Optional[GithubComKalshiExchangeInfraSvcApi2ModelCreateOrderGroupResponse]:\n    \"\"\"Create Order Group\n\n      Creates a new order group with a contracts limit. When the limit is hit, all orders in the group\n    are cancelled and no new orders can be placed until reset.\n\n    Args:\n        body (GithubComKalshiExchangeInfraSvcApi2ModelCreateOrderGroupRequest):\n\n    Raises:\n        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.\n        httpx.TimeoutException: If the request takes longer than Client.timeout.\n\n    Returns:\n        GithubComKalshiExchangeInfraSvcApi2ModelCreateOrderGroupResponse\n    \"\"\"\n\n    return (\n        await asyncio_detailed(\n            client=client,\n            body=body,\n        )\n    ).parsed\n</code></pre>"},{"location":"api/portfolio/#kalshi_py.api.portfolio.create_order_group.sync_detailed","title":"<code>kalshi_py.api.portfolio.create_order_group.sync_detailed(*, client: Union[AuthenticatedClient, Client], body: GithubComKalshiExchangeInfraSvcApi2ModelCreateOrderGroupRequest) -&gt; Response[GithubComKalshiExchangeInfraSvcApi2ModelCreateOrderGroupResponse]</code>","text":"<p>Create Order Group</p> <p>Creates a new order group with a contracts limit. When the limit is hit, all orders in the group are cancelled and no new orders can be placed until reset.</p> <p>Parameters:</p> Name Type Description Default <code>body</code> <code>GithubComKalshiExchangeInfraSvcApi2ModelCreateOrderGroupRequest</code> required <p>Raises:</p> Type Description <code>UnexpectedStatus</code> <p>If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.</p> <code>TimeoutException</code> <p>If the request takes longer than Client.timeout.</p> <p>Returns:</p> Type Description <code>Response[GithubComKalshiExchangeInfraSvcApi2ModelCreateOrderGroupResponse]</code> <p>Response[GithubComKalshiExchangeInfraSvcApi2ModelCreateOrderGroupResponse]</p> Source code in <code>kalshi_py/api/portfolio/create_order_group.py</code> <pre><code>def sync_detailed(\n    *,\n    client: Union[AuthenticatedClient, Client],\n    body: GithubComKalshiExchangeInfraSvcApi2ModelCreateOrderGroupRequest,\n) -&gt; Response[GithubComKalshiExchangeInfraSvcApi2ModelCreateOrderGroupResponse]:\n    \"\"\"Create Order Group\n\n      Creates a new order group with a contracts limit. When the limit is hit, all orders in the group\n    are cancelled and no new orders can be placed until reset.\n\n    Args:\n        body (GithubComKalshiExchangeInfraSvcApi2ModelCreateOrderGroupRequest):\n\n    Raises:\n        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.\n        httpx.TimeoutException: If the request takes longer than Client.timeout.\n\n    Returns:\n        Response[GithubComKalshiExchangeInfraSvcApi2ModelCreateOrderGroupResponse]\n    \"\"\"\n\n    kwargs = _get_kwargs(\n        body=body,\n    )\n\n    response = client.get_httpx_client().request(\n        **kwargs,\n    )\n\n    return _build_response(client=client, response=response)\n</code></pre>"},{"location":"api/portfolio/#kalshi_py.api.portfolio.create_order_group.asyncio_detailed","title":"<code>kalshi_py.api.portfolio.create_order_group.asyncio_detailed(*, client: Union[AuthenticatedClient, Client], body: GithubComKalshiExchangeInfraSvcApi2ModelCreateOrderGroupRequest) -&gt; Response[GithubComKalshiExchangeInfraSvcApi2ModelCreateOrderGroupResponse]</code>  <code>async</code>","text":"<p>Create Order Group</p> <p>Creates a new order group with a contracts limit. When the limit is hit, all orders in the group are cancelled and no new orders can be placed until reset.</p> <p>Parameters:</p> Name Type Description Default <code>body</code> <code>GithubComKalshiExchangeInfraSvcApi2ModelCreateOrderGroupRequest</code> required <p>Raises:</p> Type Description <code>UnexpectedStatus</code> <p>If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.</p> <code>TimeoutException</code> <p>If the request takes longer than Client.timeout.</p> <p>Returns:</p> Type Description <code>Response[GithubComKalshiExchangeInfraSvcApi2ModelCreateOrderGroupResponse]</code> <p>Response[GithubComKalshiExchangeInfraSvcApi2ModelCreateOrderGroupResponse]</p> Source code in <code>kalshi_py/api/portfolio/create_order_group.py</code> <pre><code>async def asyncio_detailed(\n    *,\n    client: Union[AuthenticatedClient, Client],\n    body: GithubComKalshiExchangeInfraSvcApi2ModelCreateOrderGroupRequest,\n) -&gt; Response[GithubComKalshiExchangeInfraSvcApi2ModelCreateOrderGroupResponse]:\n    \"\"\"Create Order Group\n\n      Creates a new order group with a contracts limit. When the limit is hit, all orders in the group\n    are cancelled and no new orders can be placed until reset.\n\n    Args:\n        body (GithubComKalshiExchangeInfraSvcApi2ModelCreateOrderGroupRequest):\n\n    Raises:\n        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.\n        httpx.TimeoutException: If the request takes longer than Client.timeout.\n\n    Returns:\n        Response[GithubComKalshiExchangeInfraSvcApi2ModelCreateOrderGroupResponse]\n    \"\"\"\n\n    kwargs = _get_kwargs(\n        body=body,\n    )\n\n    response = await client.get_async_httpx_client().request(**kwargs)\n\n    return _build_response(client=client, response=response)\n</code></pre>"},{"location":"api/portfolio/#decrease-order","title":"Decrease Order","text":"<p>Synchronous API Call</p> <p>Asynchronous API Call</p> <p>Synchronous Detailed Response</p> <p>Asynchronous Detailed Response</p>"},{"location":"api/portfolio/#kalshi_py.api.portfolio.decrease_order.sync","title":"<code>kalshi_py.api.portfolio.decrease_order.sync(order_id: str, *, client: Union[AuthenticatedClient, Client], body: GithubComKalshiExchangeInfraSvcApi2ModelDecreaseOrderRequest) -&gt; Optional[GithubComKalshiExchangeInfraSvcApi2ModelDecreaseOrderResponse]</code>","text":"<p>Decrease Order</p> <p>Endpoint for decreasing the number of contracts in an existing order. This is the only kind of edit available on order quantity. Cancelling an order is equivalent to decreasing an order amount to zero.</p> <p>Parameters:</p> Name Type Description Default <code>order_id</code> <code>str</code> <p>Order ID</p> required <code>body</code> <code>GithubComKalshiExchangeInfraSvcApi2ModelDecreaseOrderRequest</code> required <p>Raises:</p> Type Description <code>UnexpectedStatus</code> <p>If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.</p> <code>TimeoutException</code> <p>If the request takes longer than Client.timeout.</p> <p>Returns:</p> Type Description <code>Optional[GithubComKalshiExchangeInfraSvcApi2ModelDecreaseOrderResponse]</code> <p>GithubComKalshiExchangeInfraSvcApi2ModelDecreaseOrderResponse</p> Source code in <code>kalshi_py/api/portfolio/decrease_order.py</code> <pre><code>def sync(\n    order_id: str,\n    *,\n    client: Union[AuthenticatedClient, Client],\n    body: GithubComKalshiExchangeInfraSvcApi2ModelDecreaseOrderRequest,\n) -&gt; Optional[GithubComKalshiExchangeInfraSvcApi2ModelDecreaseOrderResponse]:\n    \"\"\"Decrease Order\n\n      Endpoint for decreasing the number of contracts in an existing order. This is the only kind of edit\n    available on order quantity. Cancelling an order is equivalent to decreasing an order amount to\n    zero.\n\n    Args:\n        order_id (str): Order ID\n        body (GithubComKalshiExchangeInfraSvcApi2ModelDecreaseOrderRequest):\n\n    Raises:\n        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.\n        httpx.TimeoutException: If the request takes longer than Client.timeout.\n\n    Returns:\n        GithubComKalshiExchangeInfraSvcApi2ModelDecreaseOrderResponse\n    \"\"\"\n\n    return sync_detailed(\n        order_id=order_id,\n        client=client,\n        body=body,\n    ).parsed\n</code></pre>"},{"location":"api/portfolio/#kalshi_py.api.portfolio.decrease_order.asyncio","title":"<code>kalshi_py.api.portfolio.decrease_order.asyncio(order_id: str, *, client: Union[AuthenticatedClient, Client], body: GithubComKalshiExchangeInfraSvcApi2ModelDecreaseOrderRequest) -&gt; Optional[GithubComKalshiExchangeInfraSvcApi2ModelDecreaseOrderResponse]</code>  <code>async</code>","text":"<p>Decrease Order</p> <p>Endpoint for decreasing the number of contracts in an existing order. This is the only kind of edit available on order quantity. Cancelling an order is equivalent to decreasing an order amount to zero.</p> <p>Parameters:</p> Name Type Description Default <code>order_id</code> <code>str</code> <p>Order ID</p> required <code>body</code> <code>GithubComKalshiExchangeInfraSvcApi2ModelDecreaseOrderRequest</code> required <p>Raises:</p> Type Description <code>UnexpectedStatus</code> <p>If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.</p> <code>TimeoutException</code> <p>If the request takes longer than Client.timeout.</p> <p>Returns:</p> Type Description <code>Optional[GithubComKalshiExchangeInfraSvcApi2ModelDecreaseOrderResponse]</code> <p>GithubComKalshiExchangeInfraSvcApi2ModelDecreaseOrderResponse</p> Source code in <code>kalshi_py/api/portfolio/decrease_order.py</code> <pre><code>async def asyncio(\n    order_id: str,\n    *,\n    client: Union[AuthenticatedClient, Client],\n    body: GithubComKalshiExchangeInfraSvcApi2ModelDecreaseOrderRequest,\n) -&gt; Optional[GithubComKalshiExchangeInfraSvcApi2ModelDecreaseOrderResponse]:\n    \"\"\"Decrease Order\n\n      Endpoint for decreasing the number of contracts in an existing order. This is the only kind of edit\n    available on order quantity. Cancelling an order is equivalent to decreasing an order amount to\n    zero.\n\n    Args:\n        order_id (str): Order ID\n        body (GithubComKalshiExchangeInfraSvcApi2ModelDecreaseOrderRequest):\n\n    Raises:\n        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.\n        httpx.TimeoutException: If the request takes longer than Client.timeout.\n\n    Returns:\n        GithubComKalshiExchangeInfraSvcApi2ModelDecreaseOrderResponse\n    \"\"\"\n\n    return (\n        await asyncio_detailed(\n            order_id=order_id,\n            client=client,\n            body=body,\n        )\n    ).parsed\n</code></pre>"},{"location":"api/portfolio/#kalshi_py.api.portfolio.decrease_order.sync_detailed","title":"<code>kalshi_py.api.portfolio.decrease_order.sync_detailed(order_id: str, *, client: Union[AuthenticatedClient, Client], body: GithubComKalshiExchangeInfraSvcApi2ModelDecreaseOrderRequest) -&gt; Response[GithubComKalshiExchangeInfraSvcApi2ModelDecreaseOrderResponse]</code>","text":"<p>Decrease Order</p> <p>Endpoint for decreasing the number of contracts in an existing order. This is the only kind of edit available on order quantity. Cancelling an order is equivalent to decreasing an order amount to zero.</p> <p>Parameters:</p> Name Type Description Default <code>order_id</code> <code>str</code> <p>Order ID</p> required <code>body</code> <code>GithubComKalshiExchangeInfraSvcApi2ModelDecreaseOrderRequest</code> required <p>Raises:</p> Type Description <code>UnexpectedStatus</code> <p>If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.</p> <code>TimeoutException</code> <p>If the request takes longer than Client.timeout.</p> <p>Returns:</p> Type Description <code>Response[GithubComKalshiExchangeInfraSvcApi2ModelDecreaseOrderResponse]</code> <p>Response[GithubComKalshiExchangeInfraSvcApi2ModelDecreaseOrderResponse]</p> Source code in <code>kalshi_py/api/portfolio/decrease_order.py</code> <pre><code>def sync_detailed(\n    order_id: str,\n    *,\n    client: Union[AuthenticatedClient, Client],\n    body: GithubComKalshiExchangeInfraSvcApi2ModelDecreaseOrderRequest,\n) -&gt; Response[GithubComKalshiExchangeInfraSvcApi2ModelDecreaseOrderResponse]:\n    \"\"\"Decrease Order\n\n      Endpoint for decreasing the number of contracts in an existing order. This is the only kind of edit\n    available on order quantity. Cancelling an order is equivalent to decreasing an order amount to\n    zero.\n\n    Args:\n        order_id (str): Order ID\n        body (GithubComKalshiExchangeInfraSvcApi2ModelDecreaseOrderRequest):\n\n    Raises:\n        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.\n        httpx.TimeoutException: If the request takes longer than Client.timeout.\n\n    Returns:\n        Response[GithubComKalshiExchangeInfraSvcApi2ModelDecreaseOrderResponse]\n    \"\"\"\n\n    kwargs = _get_kwargs(\n        order_id=order_id,\n        body=body,\n    )\n\n    response = client.get_httpx_client().request(\n        **kwargs,\n    )\n\n    return _build_response(client=client, response=response)\n</code></pre>"},{"location":"api/portfolio/#kalshi_py.api.portfolio.decrease_order.asyncio_detailed","title":"<code>kalshi_py.api.portfolio.decrease_order.asyncio_detailed(order_id: str, *, client: Union[AuthenticatedClient, Client], body: GithubComKalshiExchangeInfraSvcApi2ModelDecreaseOrderRequest) -&gt; Response[GithubComKalshiExchangeInfraSvcApi2ModelDecreaseOrderResponse]</code>  <code>async</code>","text":"<p>Decrease Order</p> <p>Endpoint for decreasing the number of contracts in an existing order. This is the only kind of edit available on order quantity. Cancelling an order is equivalent to decreasing an order amount to zero.</p> <p>Parameters:</p> Name Type Description Default <code>order_id</code> <code>str</code> <p>Order ID</p> required <code>body</code> <code>GithubComKalshiExchangeInfraSvcApi2ModelDecreaseOrderRequest</code> required <p>Raises:</p> Type Description <code>UnexpectedStatus</code> <p>If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.</p> <code>TimeoutException</code> <p>If the request takes longer than Client.timeout.</p> <p>Returns:</p> Type Description <code>Response[GithubComKalshiExchangeInfraSvcApi2ModelDecreaseOrderResponse]</code> <p>Response[GithubComKalshiExchangeInfraSvcApi2ModelDecreaseOrderResponse]</p> Source code in <code>kalshi_py/api/portfolio/decrease_order.py</code> <pre><code>async def asyncio_detailed(\n    order_id: str,\n    *,\n    client: Union[AuthenticatedClient, Client],\n    body: GithubComKalshiExchangeInfraSvcApi2ModelDecreaseOrderRequest,\n) -&gt; Response[GithubComKalshiExchangeInfraSvcApi2ModelDecreaseOrderResponse]:\n    \"\"\"Decrease Order\n\n      Endpoint for decreasing the number of contracts in an existing order. This is the only kind of edit\n    available on order quantity. Cancelling an order is equivalent to decreasing an order amount to\n    zero.\n\n    Args:\n        order_id (str): Order ID\n        body (GithubComKalshiExchangeInfraSvcApi2ModelDecreaseOrderRequest):\n\n    Raises:\n        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.\n        httpx.TimeoutException: If the request takes longer than Client.timeout.\n\n    Returns:\n        Response[GithubComKalshiExchangeInfraSvcApi2ModelDecreaseOrderResponse]\n    \"\"\"\n\n    kwargs = _get_kwargs(\n        order_id=order_id,\n        body=body,\n    )\n\n    response = await client.get_async_httpx_client().request(**kwargs)\n\n    return _build_response(client=client, response=response)\n</code></pre>"},{"location":"api/portfolio/#delete-order-group","title":"Delete Order Group","text":"<p>Synchronous API Call</p> <p>Asynchronous API Call</p> <p>Synchronous Detailed Response</p> <p>Asynchronous Detailed Response</p>"},{"location":"api/portfolio/#kalshi_py.api.portfolio.delete_order_group.sync","title":"<code>kalshi_py.api.portfolio.delete_order_group.sync(order_group_id: str, *, client: Union[AuthenticatedClient, Client]) -&gt; Optional[GithubComKalshiExchangeInfraSvcApi2ModelEmptyResponse]</code>","text":"<p>Delete Order Group</p> <p>Deletes an order group and cancels all orders within it. This permanently removes the group.</p> <p>Parameters:</p> Name Type Description Default <code>order_group_id</code> <code>str</code> <p>Order group ID</p> required <p>Raises:</p> Type Description <code>UnexpectedStatus</code> <p>If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.</p> <code>TimeoutException</code> <p>If the request takes longer than Client.timeout.</p> <p>Returns:</p> Type Description <code>Optional[GithubComKalshiExchangeInfraSvcApi2ModelEmptyResponse]</code> <p>GithubComKalshiExchangeInfraSvcApi2ModelEmptyResponse</p> Source code in <code>kalshi_py/api/portfolio/delete_order_group.py</code> <pre><code>def sync(\n    order_group_id: str,\n    *,\n    client: Union[AuthenticatedClient, Client],\n) -&gt; Optional[GithubComKalshiExchangeInfraSvcApi2ModelEmptyResponse]:\n    \"\"\"Delete Order Group\n\n      Deletes an order group and cancels all orders within it. This permanently removes the group.\n\n    Args:\n        order_group_id (str): Order group ID\n\n    Raises:\n        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.\n        httpx.TimeoutException: If the request takes longer than Client.timeout.\n\n    Returns:\n        GithubComKalshiExchangeInfraSvcApi2ModelEmptyResponse\n    \"\"\"\n\n    return sync_detailed(\n        order_group_id=order_group_id,\n        client=client,\n    ).parsed\n</code></pre>"},{"location":"api/portfolio/#kalshi_py.api.portfolio.delete_order_group.asyncio","title":"<code>kalshi_py.api.portfolio.delete_order_group.asyncio(order_group_id: str, *, client: Union[AuthenticatedClient, Client]) -&gt; Optional[GithubComKalshiExchangeInfraSvcApi2ModelEmptyResponse]</code>  <code>async</code>","text":"<p>Delete Order Group</p> <p>Deletes an order group and cancels all orders within it. This permanently removes the group.</p> <p>Parameters:</p> Name Type Description Default <code>order_group_id</code> <code>str</code> <p>Order group ID</p> required <p>Raises:</p> Type Description <code>UnexpectedStatus</code> <p>If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.</p> <code>TimeoutException</code> <p>If the request takes longer than Client.timeout.</p> <p>Returns:</p> Type Description <code>Optional[GithubComKalshiExchangeInfraSvcApi2ModelEmptyResponse]</code> <p>GithubComKalshiExchangeInfraSvcApi2ModelEmptyResponse</p> Source code in <code>kalshi_py/api/portfolio/delete_order_group.py</code> <pre><code>async def asyncio(\n    order_group_id: str,\n    *,\n    client: Union[AuthenticatedClient, Client],\n) -&gt; Optional[GithubComKalshiExchangeInfraSvcApi2ModelEmptyResponse]:\n    \"\"\"Delete Order Group\n\n      Deletes an order group and cancels all orders within it. This permanently removes the group.\n\n    Args:\n        order_group_id (str): Order group ID\n\n    Raises:\n        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.\n        httpx.TimeoutException: If the request takes longer than Client.timeout.\n\n    Returns:\n        GithubComKalshiExchangeInfraSvcApi2ModelEmptyResponse\n    \"\"\"\n\n    return (\n        await asyncio_detailed(\n            order_group_id=order_group_id,\n            client=client,\n        )\n    ).parsed\n</code></pre>"},{"location":"api/portfolio/#kalshi_py.api.portfolio.delete_order_group.sync_detailed","title":"<code>kalshi_py.api.portfolio.delete_order_group.sync_detailed(order_group_id: str, *, client: Union[AuthenticatedClient, Client]) -&gt; Response[GithubComKalshiExchangeInfraSvcApi2ModelEmptyResponse]</code>","text":"<p>Delete Order Group</p> <p>Deletes an order group and cancels all orders within it. This permanently removes the group.</p> <p>Parameters:</p> Name Type Description Default <code>order_group_id</code> <code>str</code> <p>Order group ID</p> required <p>Raises:</p> Type Description <code>UnexpectedStatus</code> <p>If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.</p> <code>TimeoutException</code> <p>If the request takes longer than Client.timeout.</p> <p>Returns:</p> Type Description <code>Response[GithubComKalshiExchangeInfraSvcApi2ModelEmptyResponse]</code> <p>Response[GithubComKalshiExchangeInfraSvcApi2ModelEmptyResponse]</p> Source code in <code>kalshi_py/api/portfolio/delete_order_group.py</code> <pre><code>def sync_detailed(\n    order_group_id: str,\n    *,\n    client: Union[AuthenticatedClient, Client],\n) -&gt; Response[GithubComKalshiExchangeInfraSvcApi2ModelEmptyResponse]:\n    \"\"\"Delete Order Group\n\n      Deletes an order group and cancels all orders within it. This permanently removes the group.\n\n    Args:\n        order_group_id (str): Order group ID\n\n    Raises:\n        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.\n        httpx.TimeoutException: If the request takes longer than Client.timeout.\n\n    Returns:\n        Response[GithubComKalshiExchangeInfraSvcApi2ModelEmptyResponse]\n    \"\"\"\n\n    kwargs = _get_kwargs(\n        order_group_id=order_group_id,\n    )\n\n    response = client.get_httpx_client().request(\n        **kwargs,\n    )\n\n    return _build_response(client=client, response=response)\n</code></pre>"},{"location":"api/portfolio/#kalshi_py.api.portfolio.delete_order_group.asyncio_detailed","title":"<code>kalshi_py.api.portfolio.delete_order_group.asyncio_detailed(order_group_id: str, *, client: Union[AuthenticatedClient, Client]) -&gt; Response[GithubComKalshiExchangeInfraSvcApi2ModelEmptyResponse]</code>  <code>async</code>","text":"<p>Delete Order Group</p> <p>Deletes an order group and cancels all orders within it. This permanently removes the group.</p> <p>Parameters:</p> Name Type Description Default <code>order_group_id</code> <code>str</code> <p>Order group ID</p> required <p>Raises:</p> Type Description <code>UnexpectedStatus</code> <p>If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.</p> <code>TimeoutException</code> <p>If the request takes longer than Client.timeout.</p> <p>Returns:</p> Type Description <code>Response[GithubComKalshiExchangeInfraSvcApi2ModelEmptyResponse]</code> <p>Response[GithubComKalshiExchangeInfraSvcApi2ModelEmptyResponse]</p> Source code in <code>kalshi_py/api/portfolio/delete_order_group.py</code> <pre><code>async def asyncio_detailed(\n    order_group_id: str,\n    *,\n    client: Union[AuthenticatedClient, Client],\n) -&gt; Response[GithubComKalshiExchangeInfraSvcApi2ModelEmptyResponse]:\n    \"\"\"Delete Order Group\n\n      Deletes an order group and cancels all orders within it. This permanently removes the group.\n\n    Args:\n        order_group_id (str): Order group ID\n\n    Raises:\n        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.\n        httpx.TimeoutException: If the request takes longer than Client.timeout.\n\n    Returns:\n        Response[GithubComKalshiExchangeInfraSvcApi2ModelEmptyResponse]\n    \"\"\"\n\n    kwargs = _get_kwargs(\n        order_group_id=order_group_id,\n    )\n\n    response = await client.get_async_httpx_client().request(**kwargs)\n\n    return _build_response(client=client, response=response)\n</code></pre>"},{"location":"api/portfolio/#get-balance","title":"Get Balance","text":"<p>Synchronous API Call</p> <p>Asynchronous API Call</p> <p>Synchronous Detailed Response</p> <p>Asynchronous Detailed Response</p>"},{"location":"api/portfolio/#kalshi_py.api.portfolio.get_balance.sync","title":"<code>kalshi_py.api.portfolio.get_balance.sync(*, client: Union[AuthenticatedClient, Client]) -&gt; Optional[GithubComKalshiExchangeInfraSvcApi2ModelGetBalanceResponse]</code>","text":"<p>Get Balance</p> <p>Endpoint for getting the balance of a member. The balance value is returned in cents.</p> <p>Raises:</p> Type Description <code>UnexpectedStatus</code> <p>If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.</p> <code>TimeoutException</code> <p>If the request takes longer than Client.timeout.</p> <p>Returns:</p> Type Description <code>Optional[GithubComKalshiExchangeInfraSvcApi2ModelGetBalanceResponse]</code> <p>GithubComKalshiExchangeInfraSvcApi2ModelGetBalanceResponse</p> Source code in <code>kalshi_py/api/portfolio/get_balance.py</code> <pre><code>def sync(\n    *,\n    client: Union[AuthenticatedClient, Client],\n) -&gt; Optional[GithubComKalshiExchangeInfraSvcApi2ModelGetBalanceResponse]:\n    \"\"\"Get Balance\n\n      Endpoint for getting the balance of a member. The balance value is returned in cents.\n\n    Raises:\n        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.\n        httpx.TimeoutException: If the request takes longer than Client.timeout.\n\n    Returns:\n        GithubComKalshiExchangeInfraSvcApi2ModelGetBalanceResponse\n    \"\"\"\n\n    return sync_detailed(\n        client=client,\n    ).parsed\n</code></pre>"},{"location":"api/portfolio/#kalshi_py.api.portfolio.get_balance.asyncio","title":"<code>kalshi_py.api.portfolio.get_balance.asyncio(*, client: Union[AuthenticatedClient, Client]) -&gt; Optional[GithubComKalshiExchangeInfraSvcApi2ModelGetBalanceResponse]</code>  <code>async</code>","text":"<p>Get Balance</p> <p>Endpoint for getting the balance of a member. The balance value is returned in cents.</p> <p>Raises:</p> Type Description <code>UnexpectedStatus</code> <p>If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.</p> <code>TimeoutException</code> <p>If the request takes longer than Client.timeout.</p> <p>Returns:</p> Type Description <code>Optional[GithubComKalshiExchangeInfraSvcApi2ModelGetBalanceResponse]</code> <p>GithubComKalshiExchangeInfraSvcApi2ModelGetBalanceResponse</p> Source code in <code>kalshi_py/api/portfolio/get_balance.py</code> <pre><code>async def asyncio(\n    *,\n    client: Union[AuthenticatedClient, Client],\n) -&gt; Optional[GithubComKalshiExchangeInfraSvcApi2ModelGetBalanceResponse]:\n    \"\"\"Get Balance\n\n      Endpoint for getting the balance of a member. The balance value is returned in cents.\n\n    Raises:\n        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.\n        httpx.TimeoutException: If the request takes longer than Client.timeout.\n\n    Returns:\n        GithubComKalshiExchangeInfraSvcApi2ModelGetBalanceResponse\n    \"\"\"\n\n    return (\n        await asyncio_detailed(\n            client=client,\n        )\n    ).parsed\n</code></pre>"},{"location":"api/portfolio/#kalshi_py.api.portfolio.get_balance.sync_detailed","title":"<code>kalshi_py.api.portfolio.get_balance.sync_detailed(*, client: Union[AuthenticatedClient, Client]) -&gt; Response[GithubComKalshiExchangeInfraSvcApi2ModelGetBalanceResponse]</code>","text":"<p>Get Balance</p> <p>Endpoint for getting the balance of a member. The balance value is returned in cents.</p> <p>Raises:</p> Type Description <code>UnexpectedStatus</code> <p>If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.</p> <code>TimeoutException</code> <p>If the request takes longer than Client.timeout.</p> <p>Returns:</p> Type Description <code>Response[GithubComKalshiExchangeInfraSvcApi2ModelGetBalanceResponse]</code> <p>Response[GithubComKalshiExchangeInfraSvcApi2ModelGetBalanceResponse]</p> Source code in <code>kalshi_py/api/portfolio/get_balance.py</code> <pre><code>def sync_detailed(\n    *,\n    client: Union[AuthenticatedClient, Client],\n) -&gt; Response[GithubComKalshiExchangeInfraSvcApi2ModelGetBalanceResponse]:\n    \"\"\"Get Balance\n\n      Endpoint for getting the balance of a member. The balance value is returned in cents.\n\n    Raises:\n        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.\n        httpx.TimeoutException: If the request takes longer than Client.timeout.\n\n    Returns:\n        Response[GithubComKalshiExchangeInfraSvcApi2ModelGetBalanceResponse]\n    \"\"\"\n\n    kwargs = _get_kwargs()\n\n    response = client.get_httpx_client().request(\n        **kwargs,\n    )\n\n    return _build_response(client=client, response=response)\n</code></pre>"},{"location":"api/portfolio/#kalshi_py.api.portfolio.get_balance.asyncio_detailed","title":"<code>kalshi_py.api.portfolio.get_balance.asyncio_detailed(*, client: Union[AuthenticatedClient, Client]) -&gt; Response[GithubComKalshiExchangeInfraSvcApi2ModelGetBalanceResponse]</code>  <code>async</code>","text":"<p>Get Balance</p> <p>Endpoint for getting the balance of a member. The balance value is returned in cents.</p> <p>Raises:</p> Type Description <code>UnexpectedStatus</code> <p>If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.</p> <code>TimeoutException</code> <p>If the request takes longer than Client.timeout.</p> <p>Returns:</p> Type Description <code>Response[GithubComKalshiExchangeInfraSvcApi2ModelGetBalanceResponse]</code> <p>Response[GithubComKalshiExchangeInfraSvcApi2ModelGetBalanceResponse]</p> Source code in <code>kalshi_py/api/portfolio/get_balance.py</code> <pre><code>async def asyncio_detailed(\n    *,\n    client: Union[AuthenticatedClient, Client],\n) -&gt; Response[GithubComKalshiExchangeInfraSvcApi2ModelGetBalanceResponse]:\n    \"\"\"Get Balance\n\n      Endpoint for getting the balance of a member. The balance value is returned in cents.\n\n    Raises:\n        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.\n        httpx.TimeoutException: If the request takes longer than Client.timeout.\n\n    Returns:\n        Response[GithubComKalshiExchangeInfraSvcApi2ModelGetBalanceResponse]\n    \"\"\"\n\n    kwargs = _get_kwargs()\n\n    response = await client.get_async_httpx_client().request(**kwargs)\n\n    return _build_response(client=client, response=response)\n</code></pre>"},{"location":"api/portfolio/#get-fills","title":"Get Fills","text":"<p>Synchronous API Call</p> <p>Asynchronous API Call</p> <p>Synchronous Detailed Response</p> <p>Asynchronous Detailed Response</p>"},{"location":"api/portfolio/#kalshi_py.api.portfolio.get_fills.sync","title":"<code>kalshi_py.api.portfolio.get_fills.sync(*, client: Union[AuthenticatedClient, Client], ticker: Union[Unset, str] = UNSET, order_id: Union[Unset, str] = UNSET, min_ts: Union[Unset, int] = UNSET, max_ts: Union[Unset, int] = UNSET, limit: Union[Unset, int] = UNSET, cursor: Union[Unset, str] = UNSET, use_dollars: Union[Unset, bool] = UNSET) -&gt; Optional[GithubComKalshiExchangeInfraSvcApi2ModelGetFillsResponse]</code>","text":"<p>Get Fills</p> <p>Endpoint for getting all fills for the member. A fill is when a trade you have is matched.</p> <p>Parameters:</p> Name Type Description Default <code>ticker</code> <code>Union[Unset, str]</code> <p>Restricts the response to trades in a specific market.</p> <code>UNSET</code> <code>order_id</code> <code>Union[Unset, str]</code> <p>Restricts the response to trades related to a specific order.</p> <code>UNSET</code> <code>min_ts</code> <code>Union[Unset, int]</code> <p>Restricts the response to trades after a timestamp.</p> <code>UNSET</code> <code>max_ts</code> <code>Union[Unset, int]</code> <p>Restricts the response to trades before a timestamp.</p> <code>UNSET</code> <code>limit</code> <code>Union[Unset, int]</code> <p>Parameter to specify the number of results per page. Defaults to 100.</p> <code>UNSET</code> <code>cursor</code> <code>Union[Unset, str]</code> <p>The Cursor represents a pointer to the next page of records in the pagination. Use the value returned from the previous response to get the next page.</p> <code>UNSET</code> <code>use_dollars</code> <code>Union[Unset, bool]</code> <p>Whether to return prices in centi-cent format (0.0001) instead of cent format (0.01).</p> <code>UNSET</code> <p>Raises:</p> Type Description <code>UnexpectedStatus</code> <p>If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.</p> <code>TimeoutException</code> <p>If the request takes longer than Client.timeout.</p> <p>Returns:</p> Type Description <code>Optional[GithubComKalshiExchangeInfraSvcApi2ModelGetFillsResponse]</code> <p>GithubComKalshiExchangeInfraSvcApi2ModelGetFillsResponse</p> Source code in <code>kalshi_py/api/portfolio/get_fills.py</code> <pre><code>def sync(\n    *,\n    client: Union[AuthenticatedClient, Client],\n    ticker: Union[Unset, str] = UNSET,\n    order_id: Union[Unset, str] = UNSET,\n    min_ts: Union[Unset, int] = UNSET,\n    max_ts: Union[Unset, int] = UNSET,\n    limit: Union[Unset, int] = UNSET,\n    cursor: Union[Unset, str] = UNSET,\n    use_dollars: Union[Unset, bool] = UNSET,\n) -&gt; Optional[GithubComKalshiExchangeInfraSvcApi2ModelGetFillsResponse]:\n    \"\"\"Get Fills\n\n      Endpoint for getting all fills for the member. A fill is when a trade you have is matched.\n\n    Args:\n        ticker (Union[Unset, str]): Restricts the response to trades in a specific market.\n        order_id (Union[Unset, str]): Restricts the response to trades related to a specific\n            order.\n        min_ts (Union[Unset, int]): Restricts the response to trades after a timestamp.\n        max_ts (Union[Unset, int]): Restricts the response to trades before a timestamp.\n        limit (Union[Unset, int]): Parameter to specify the number of results per page. Defaults\n            to 100.\n        cursor (Union[Unset, str]): The Cursor represents a pointer to the next page of records in\n            the pagination. Use the value returned from the previous response to get the next page.\n        use_dollars (Union[Unset, bool]): Whether to return prices in centi-cent format (0.0001)\n            instead of cent format (0.01).\n\n    Raises:\n        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.\n        httpx.TimeoutException: If the request takes longer than Client.timeout.\n\n    Returns:\n        GithubComKalshiExchangeInfraSvcApi2ModelGetFillsResponse\n    \"\"\"\n\n    return sync_detailed(\n        client=client,\n        ticker=ticker,\n        order_id=order_id,\n        min_ts=min_ts,\n        max_ts=max_ts,\n        limit=limit,\n        cursor=cursor,\n        use_dollars=use_dollars,\n    ).parsed\n</code></pre>"},{"location":"api/portfolio/#kalshi_py.api.portfolio.get_fills.asyncio","title":"<code>kalshi_py.api.portfolio.get_fills.asyncio(*, client: Union[AuthenticatedClient, Client], ticker: Union[Unset, str] = UNSET, order_id: Union[Unset, str] = UNSET, min_ts: Union[Unset, int] = UNSET, max_ts: Union[Unset, int] = UNSET, limit: Union[Unset, int] = UNSET, cursor: Union[Unset, str] = UNSET, use_dollars: Union[Unset, bool] = UNSET) -&gt; Optional[GithubComKalshiExchangeInfraSvcApi2ModelGetFillsResponse]</code>  <code>async</code>","text":"<p>Get Fills</p> <p>Endpoint for getting all fills for the member. A fill is when a trade you have is matched.</p> <p>Parameters:</p> Name Type Description Default <code>ticker</code> <code>Union[Unset, str]</code> <p>Restricts the response to trades in a specific market.</p> <code>UNSET</code> <code>order_id</code> <code>Union[Unset, str]</code> <p>Restricts the response to trades related to a specific order.</p> <code>UNSET</code> <code>min_ts</code> <code>Union[Unset, int]</code> <p>Restricts the response to trades after a timestamp.</p> <code>UNSET</code> <code>max_ts</code> <code>Union[Unset, int]</code> <p>Restricts the response to trades before a timestamp.</p> <code>UNSET</code> <code>limit</code> <code>Union[Unset, int]</code> <p>Parameter to specify the number of results per page. Defaults to 100.</p> <code>UNSET</code> <code>cursor</code> <code>Union[Unset, str]</code> <p>The Cursor represents a pointer to the next page of records in the pagination. Use the value returned from the previous response to get the next page.</p> <code>UNSET</code> <code>use_dollars</code> <code>Union[Unset, bool]</code> <p>Whether to return prices in centi-cent format (0.0001) instead of cent format (0.01).</p> <code>UNSET</code> <p>Raises:</p> Type Description <code>UnexpectedStatus</code> <p>If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.</p> <code>TimeoutException</code> <p>If the request takes longer than Client.timeout.</p> <p>Returns:</p> Type Description <code>Optional[GithubComKalshiExchangeInfraSvcApi2ModelGetFillsResponse]</code> <p>GithubComKalshiExchangeInfraSvcApi2ModelGetFillsResponse</p> Source code in <code>kalshi_py/api/portfolio/get_fills.py</code> <pre><code>async def asyncio(\n    *,\n    client: Union[AuthenticatedClient, Client],\n    ticker: Union[Unset, str] = UNSET,\n    order_id: Union[Unset, str] = UNSET,\n    min_ts: Union[Unset, int] = UNSET,\n    max_ts: Union[Unset, int] = UNSET,\n    limit: Union[Unset, int] = UNSET,\n    cursor: Union[Unset, str] = UNSET,\n    use_dollars: Union[Unset, bool] = UNSET,\n) -&gt; Optional[GithubComKalshiExchangeInfraSvcApi2ModelGetFillsResponse]:\n    \"\"\"Get Fills\n\n      Endpoint for getting all fills for the member. A fill is when a trade you have is matched.\n\n    Args:\n        ticker (Union[Unset, str]): Restricts the response to trades in a specific market.\n        order_id (Union[Unset, str]): Restricts the response to trades related to a specific\n            order.\n        min_ts (Union[Unset, int]): Restricts the response to trades after a timestamp.\n        max_ts (Union[Unset, int]): Restricts the response to trades before a timestamp.\n        limit (Union[Unset, int]): Parameter to specify the number of results per page. Defaults\n            to 100.\n        cursor (Union[Unset, str]): The Cursor represents a pointer to the next page of records in\n            the pagination. Use the value returned from the previous response to get the next page.\n        use_dollars (Union[Unset, bool]): Whether to return prices in centi-cent format (0.0001)\n            instead of cent format (0.01).\n\n    Raises:\n        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.\n        httpx.TimeoutException: If the request takes longer than Client.timeout.\n\n    Returns:\n        GithubComKalshiExchangeInfraSvcApi2ModelGetFillsResponse\n    \"\"\"\n\n    return (\n        await asyncio_detailed(\n            client=client,\n            ticker=ticker,\n            order_id=order_id,\n            min_ts=min_ts,\n            max_ts=max_ts,\n            limit=limit,\n            cursor=cursor,\n            use_dollars=use_dollars,\n        )\n    ).parsed\n</code></pre>"},{"location":"api/portfolio/#kalshi_py.api.portfolio.get_fills.sync_detailed","title":"<code>kalshi_py.api.portfolio.get_fills.sync_detailed(*, client: Union[AuthenticatedClient, Client], ticker: Union[Unset, str] = UNSET, order_id: Union[Unset, str] = UNSET, min_ts: Union[Unset, int] = UNSET, max_ts: Union[Unset, int] = UNSET, limit: Union[Unset, int] = UNSET, cursor: Union[Unset, str] = UNSET, use_dollars: Union[Unset, bool] = UNSET) -&gt; Response[GithubComKalshiExchangeInfraSvcApi2ModelGetFillsResponse]</code>","text":"<p>Get Fills</p> <p>Endpoint for getting all fills for the member. A fill is when a trade you have is matched.</p> <p>Parameters:</p> Name Type Description Default <code>ticker</code> <code>Union[Unset, str]</code> <p>Restricts the response to trades in a specific market.</p> <code>UNSET</code> <code>order_id</code> <code>Union[Unset, str]</code> <p>Restricts the response to trades related to a specific order.</p> <code>UNSET</code> <code>min_ts</code> <code>Union[Unset, int]</code> <p>Restricts the response to trades after a timestamp.</p> <code>UNSET</code> <code>max_ts</code> <code>Union[Unset, int]</code> <p>Restricts the response to trades before a timestamp.</p> <code>UNSET</code> <code>limit</code> <code>Union[Unset, int]</code> <p>Parameter to specify the number of results per page. Defaults to 100.</p> <code>UNSET</code> <code>cursor</code> <code>Union[Unset, str]</code> <p>The Cursor represents a pointer to the next page of records in the pagination. Use the value returned from the previous response to get the next page.</p> <code>UNSET</code> <code>use_dollars</code> <code>Union[Unset, bool]</code> <p>Whether to return prices in centi-cent format (0.0001) instead of cent format (0.01).</p> <code>UNSET</code> <p>Raises:</p> Type Description <code>UnexpectedStatus</code> <p>If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.</p> <code>TimeoutException</code> <p>If the request takes longer than Client.timeout.</p> <p>Returns:</p> Type Description <code>Response[GithubComKalshiExchangeInfraSvcApi2ModelGetFillsResponse]</code> <p>Response[GithubComKalshiExchangeInfraSvcApi2ModelGetFillsResponse]</p> Source code in <code>kalshi_py/api/portfolio/get_fills.py</code> <pre><code>def sync_detailed(\n    *,\n    client: Union[AuthenticatedClient, Client],\n    ticker: Union[Unset, str] = UNSET,\n    order_id: Union[Unset, str] = UNSET,\n    min_ts: Union[Unset, int] = UNSET,\n    max_ts: Union[Unset, int] = UNSET,\n    limit: Union[Unset, int] = UNSET,\n    cursor: Union[Unset, str] = UNSET,\n    use_dollars: Union[Unset, bool] = UNSET,\n) -&gt; Response[GithubComKalshiExchangeInfraSvcApi2ModelGetFillsResponse]:\n    \"\"\"Get Fills\n\n      Endpoint for getting all fills for the member. A fill is when a trade you have is matched.\n\n    Args:\n        ticker (Union[Unset, str]): Restricts the response to trades in a specific market.\n        order_id (Union[Unset, str]): Restricts the response to trades related to a specific\n            order.\n        min_ts (Union[Unset, int]): Restricts the response to trades after a timestamp.\n        max_ts (Union[Unset, int]): Restricts the response to trades before a timestamp.\n        limit (Union[Unset, int]): Parameter to specify the number of results per page. Defaults\n            to 100.\n        cursor (Union[Unset, str]): The Cursor represents a pointer to the next page of records in\n            the pagination. Use the value returned from the previous response to get the next page.\n        use_dollars (Union[Unset, bool]): Whether to return prices in centi-cent format (0.0001)\n            instead of cent format (0.01).\n\n    Raises:\n        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.\n        httpx.TimeoutException: If the request takes longer than Client.timeout.\n\n    Returns:\n        Response[GithubComKalshiExchangeInfraSvcApi2ModelGetFillsResponse]\n    \"\"\"\n\n    kwargs = _get_kwargs(\n        ticker=ticker,\n        order_id=order_id,\n        min_ts=min_ts,\n        max_ts=max_ts,\n        limit=limit,\n        cursor=cursor,\n        use_dollars=use_dollars,\n    )\n\n    response = client.get_httpx_client().request(\n        **kwargs,\n    )\n\n    return _build_response(client=client, response=response)\n</code></pre>"},{"location":"api/portfolio/#kalshi_py.api.portfolio.get_fills.asyncio_detailed","title":"<code>kalshi_py.api.portfolio.get_fills.asyncio_detailed(*, client: Union[AuthenticatedClient, Client], ticker: Union[Unset, str] = UNSET, order_id: Union[Unset, str] = UNSET, min_ts: Union[Unset, int] = UNSET, max_ts: Union[Unset, int] = UNSET, limit: Union[Unset, int] = UNSET, cursor: Union[Unset, str] = UNSET, use_dollars: Union[Unset, bool] = UNSET) -&gt; Response[GithubComKalshiExchangeInfraSvcApi2ModelGetFillsResponse]</code>  <code>async</code>","text":"<p>Get Fills</p> <p>Endpoint for getting all fills for the member. A fill is when a trade you have is matched.</p> <p>Parameters:</p> Name Type Description Default <code>ticker</code> <code>Union[Unset, str]</code> <p>Restricts the response to trades in a specific market.</p> <code>UNSET</code> <code>order_id</code> <code>Union[Unset, str]</code> <p>Restricts the response to trades related to a specific order.</p> <code>UNSET</code> <code>min_ts</code> <code>Union[Unset, int]</code> <p>Restricts the response to trades after a timestamp.</p> <code>UNSET</code> <code>max_ts</code> <code>Union[Unset, int]</code> <p>Restricts the response to trades before a timestamp.</p> <code>UNSET</code> <code>limit</code> <code>Union[Unset, int]</code> <p>Parameter to specify the number of results per page. Defaults to 100.</p> <code>UNSET</code> <code>cursor</code> <code>Union[Unset, str]</code> <p>The Cursor represents a pointer to the next page of records in the pagination. Use the value returned from the previous response to get the next page.</p> <code>UNSET</code> <code>use_dollars</code> <code>Union[Unset, bool]</code> <p>Whether to return prices in centi-cent format (0.0001) instead of cent format (0.01).</p> <code>UNSET</code> <p>Raises:</p> Type Description <code>UnexpectedStatus</code> <p>If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.</p> <code>TimeoutException</code> <p>If the request takes longer than Client.timeout.</p> <p>Returns:</p> Type Description <code>Response[GithubComKalshiExchangeInfraSvcApi2ModelGetFillsResponse]</code> <p>Response[GithubComKalshiExchangeInfraSvcApi2ModelGetFillsResponse]</p> Source code in <code>kalshi_py/api/portfolio/get_fills.py</code> <pre><code>async def asyncio_detailed(\n    *,\n    client: Union[AuthenticatedClient, Client],\n    ticker: Union[Unset, str] = UNSET,\n    order_id: Union[Unset, str] = UNSET,\n    min_ts: Union[Unset, int] = UNSET,\n    max_ts: Union[Unset, int] = UNSET,\n    limit: Union[Unset, int] = UNSET,\n    cursor: Union[Unset, str] = UNSET,\n    use_dollars: Union[Unset, bool] = UNSET,\n) -&gt; Response[GithubComKalshiExchangeInfraSvcApi2ModelGetFillsResponse]:\n    \"\"\"Get Fills\n\n      Endpoint for getting all fills for the member. A fill is when a trade you have is matched.\n\n    Args:\n        ticker (Union[Unset, str]): Restricts the response to trades in a specific market.\n        order_id (Union[Unset, str]): Restricts the response to trades related to a specific\n            order.\n        min_ts (Union[Unset, int]): Restricts the response to trades after a timestamp.\n        max_ts (Union[Unset, int]): Restricts the response to trades before a timestamp.\n        limit (Union[Unset, int]): Parameter to specify the number of results per page. Defaults\n            to 100.\n        cursor (Union[Unset, str]): The Cursor represents a pointer to the next page of records in\n            the pagination. Use the value returned from the previous response to get the next page.\n        use_dollars (Union[Unset, bool]): Whether to return prices in centi-cent format (0.0001)\n            instead of cent format (0.01).\n\n    Raises:\n        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.\n        httpx.TimeoutException: If the request takes longer than Client.timeout.\n\n    Returns:\n        Response[GithubComKalshiExchangeInfraSvcApi2ModelGetFillsResponse]\n    \"\"\"\n\n    kwargs = _get_kwargs(\n        ticker=ticker,\n        order_id=order_id,\n        min_ts=min_ts,\n        max_ts=max_ts,\n        limit=limit,\n        cursor=cursor,\n        use_dollars=use_dollars,\n    )\n\n    response = await client.get_async_httpx_client().request(**kwargs)\n\n    return _build_response(client=client, response=response)\n</code></pre>"},{"location":"api/portfolio/#get-order","title":"Get Order","text":"<p>Synchronous API Call</p> <p>Asynchronous API Call</p> <p>Synchronous Detailed Response</p> <p>Asynchronous Detailed Response</p>"},{"location":"api/portfolio/#kalshi_py.api.portfolio.get_order.sync","title":"<code>kalshi_py.api.portfolio.get_order.sync(order_id: str, *, client: Union[AuthenticatedClient, Client]) -&gt; Optional[GithubComKalshiExchangeInfraSvcApi2ModelGetOrderResponse]</code>","text":"<p>Get Order</p> <p>Endpoint for getting a single order.</p> <p>Parameters:</p> Name Type Description Default <code>order_id</code> <code>str</code> <p>Order ID</p> required <p>Raises:</p> Type Description <code>UnexpectedStatus</code> <p>If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.</p> <code>TimeoutException</code> <p>If the request takes longer than Client.timeout.</p> <p>Returns:</p> Type Description <code>Optional[GithubComKalshiExchangeInfraSvcApi2ModelGetOrderResponse]</code> <p>GithubComKalshiExchangeInfraSvcApi2ModelGetOrderResponse</p> Source code in <code>kalshi_py/api/portfolio/get_order.py</code> <pre><code>def sync(\n    order_id: str,\n    *,\n    client: Union[AuthenticatedClient, Client],\n) -&gt; Optional[GithubComKalshiExchangeInfraSvcApi2ModelGetOrderResponse]:\n    \"\"\"Get Order\n\n      Endpoint for getting a single order.\n\n    Args:\n        order_id (str): Order ID\n\n    Raises:\n        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.\n        httpx.TimeoutException: If the request takes longer than Client.timeout.\n\n    Returns:\n        GithubComKalshiExchangeInfraSvcApi2ModelGetOrderResponse\n    \"\"\"\n\n    return sync_detailed(\n        order_id=order_id,\n        client=client,\n    ).parsed\n</code></pre>"},{"location":"api/portfolio/#kalshi_py.api.portfolio.get_order.asyncio","title":"<code>kalshi_py.api.portfolio.get_order.asyncio(order_id: str, *, client: Union[AuthenticatedClient, Client]) -&gt; Optional[GithubComKalshiExchangeInfraSvcApi2ModelGetOrderResponse]</code>  <code>async</code>","text":"<p>Get Order</p> <p>Endpoint for getting a single order.</p> <p>Parameters:</p> Name Type Description Default <code>order_id</code> <code>str</code> <p>Order ID</p> required <p>Raises:</p> Type Description <code>UnexpectedStatus</code> <p>If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.</p> <code>TimeoutException</code> <p>If the request takes longer than Client.timeout.</p> <p>Returns:</p> Type Description <code>Optional[GithubComKalshiExchangeInfraSvcApi2ModelGetOrderResponse]</code> <p>GithubComKalshiExchangeInfraSvcApi2ModelGetOrderResponse</p> Source code in <code>kalshi_py/api/portfolio/get_order.py</code> <pre><code>async def asyncio(\n    order_id: str,\n    *,\n    client: Union[AuthenticatedClient, Client],\n) -&gt; Optional[GithubComKalshiExchangeInfraSvcApi2ModelGetOrderResponse]:\n    \"\"\"Get Order\n\n      Endpoint for getting a single order.\n\n    Args:\n        order_id (str): Order ID\n\n    Raises:\n        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.\n        httpx.TimeoutException: If the request takes longer than Client.timeout.\n\n    Returns:\n        GithubComKalshiExchangeInfraSvcApi2ModelGetOrderResponse\n    \"\"\"\n\n    return (\n        await asyncio_detailed(\n            order_id=order_id,\n            client=client,\n        )\n    ).parsed\n</code></pre>"},{"location":"api/portfolio/#kalshi_py.api.portfolio.get_order.sync_detailed","title":"<code>kalshi_py.api.portfolio.get_order.sync_detailed(order_id: str, *, client: Union[AuthenticatedClient, Client]) -&gt; Response[GithubComKalshiExchangeInfraSvcApi2ModelGetOrderResponse]</code>","text":"<p>Get Order</p> <p>Endpoint for getting a single order.</p> <p>Parameters:</p> Name Type Description Default <code>order_id</code> <code>str</code> <p>Order ID</p> required <p>Raises:</p> Type Description <code>UnexpectedStatus</code> <p>If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.</p> <code>TimeoutException</code> <p>If the request takes longer than Client.timeout.</p> <p>Returns:</p> Type Description <code>Response[GithubComKalshiExchangeInfraSvcApi2ModelGetOrderResponse]</code> <p>Response[GithubComKalshiExchangeInfraSvcApi2ModelGetOrderResponse]</p> Source code in <code>kalshi_py/api/portfolio/get_order.py</code> <pre><code>def sync_detailed(\n    order_id: str,\n    *,\n    client: Union[AuthenticatedClient, Client],\n) -&gt; Response[GithubComKalshiExchangeInfraSvcApi2ModelGetOrderResponse]:\n    \"\"\"Get Order\n\n      Endpoint for getting a single order.\n\n    Args:\n        order_id (str): Order ID\n\n    Raises:\n        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.\n        httpx.TimeoutException: If the request takes longer than Client.timeout.\n\n    Returns:\n        Response[GithubComKalshiExchangeInfraSvcApi2ModelGetOrderResponse]\n    \"\"\"\n\n    kwargs = _get_kwargs(\n        order_id=order_id,\n    )\n\n    response = client.get_httpx_client().request(\n        **kwargs,\n    )\n\n    return _build_response(client=client, response=response)\n</code></pre>"},{"location":"api/portfolio/#kalshi_py.api.portfolio.get_order.asyncio_detailed","title":"<code>kalshi_py.api.portfolio.get_order.asyncio_detailed(order_id: str, *, client: Union[AuthenticatedClient, Client]) -&gt; Response[GithubComKalshiExchangeInfraSvcApi2ModelGetOrderResponse]</code>  <code>async</code>","text":"<p>Get Order</p> <p>Endpoint for getting a single order.</p> <p>Parameters:</p> Name Type Description Default <code>order_id</code> <code>str</code> <p>Order ID</p> required <p>Raises:</p> Type Description <code>UnexpectedStatus</code> <p>If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.</p> <code>TimeoutException</code> <p>If the request takes longer than Client.timeout.</p> <p>Returns:</p> Type Description <code>Response[GithubComKalshiExchangeInfraSvcApi2ModelGetOrderResponse]</code> <p>Response[GithubComKalshiExchangeInfraSvcApi2ModelGetOrderResponse]</p> Source code in <code>kalshi_py/api/portfolio/get_order.py</code> <pre><code>async def asyncio_detailed(\n    order_id: str,\n    *,\n    client: Union[AuthenticatedClient, Client],\n) -&gt; Response[GithubComKalshiExchangeInfraSvcApi2ModelGetOrderResponse]:\n    \"\"\"Get Order\n\n      Endpoint for getting a single order.\n\n    Args:\n        order_id (str): Order ID\n\n    Raises:\n        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.\n        httpx.TimeoutException: If the request takes longer than Client.timeout.\n\n    Returns:\n        Response[GithubComKalshiExchangeInfraSvcApi2ModelGetOrderResponse]\n    \"\"\"\n\n    kwargs = _get_kwargs(\n        order_id=order_id,\n    )\n\n    response = await client.get_async_httpx_client().request(**kwargs)\n\n    return _build_response(client=client, response=response)\n</code></pre>"},{"location":"api/portfolio/#get-order-group","title":"Get Order Group","text":"<p>Synchronous API Call</p> <p>Asynchronous API Call</p> <p>Synchronous Detailed Response</p> <p>Asynchronous Detailed Response</p>"},{"location":"api/portfolio/#kalshi_py.api.portfolio.get_order_group.sync","title":"<code>kalshi_py.api.portfolio.get_order_group.sync(order_group_id: str, *, client: Union[AuthenticatedClient, Client]) -&gt; Optional[GithubComKalshiExchangeInfraSvcApi2ModelGetOrderGroupResponse]</code>","text":"<p>Get Order Group</p> <p>Retrieves details for a single order group including all order IDs and auto-cancel status.</p> <p>Parameters:</p> Name Type Description Default <code>order_group_id</code> <code>str</code> <p>Order group ID</p> required <p>Raises:</p> Type Description <code>UnexpectedStatus</code> <p>If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.</p> <code>TimeoutException</code> <p>If the request takes longer than Client.timeout.</p> <p>Returns:</p> Type Description <code>Optional[GithubComKalshiExchangeInfraSvcApi2ModelGetOrderGroupResponse]</code> <p>GithubComKalshiExchangeInfraSvcApi2ModelGetOrderGroupResponse</p> Source code in <code>kalshi_py/api/portfolio/get_order_group.py</code> <pre><code>def sync(\n    order_group_id: str,\n    *,\n    client: Union[AuthenticatedClient, Client],\n) -&gt; Optional[GithubComKalshiExchangeInfraSvcApi2ModelGetOrderGroupResponse]:\n    \"\"\"Get Order Group\n\n      Retrieves details for a single order group including all order IDs and auto-cancel status.\n\n    Args:\n        order_group_id (str): Order group ID\n\n    Raises:\n        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.\n        httpx.TimeoutException: If the request takes longer than Client.timeout.\n\n    Returns:\n        GithubComKalshiExchangeInfraSvcApi2ModelGetOrderGroupResponse\n    \"\"\"\n\n    return sync_detailed(\n        order_group_id=order_group_id,\n        client=client,\n    ).parsed\n</code></pre>"},{"location":"api/portfolio/#kalshi_py.api.portfolio.get_order_group.asyncio","title":"<code>kalshi_py.api.portfolio.get_order_group.asyncio(order_group_id: str, *, client: Union[AuthenticatedClient, Client]) -&gt; Optional[GithubComKalshiExchangeInfraSvcApi2ModelGetOrderGroupResponse]</code>  <code>async</code>","text":"<p>Get Order Group</p> <p>Retrieves details for a single order group including all order IDs and auto-cancel status.</p> <p>Parameters:</p> Name Type Description Default <code>order_group_id</code> <code>str</code> <p>Order group ID</p> required <p>Raises:</p> Type Description <code>UnexpectedStatus</code> <p>If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.</p> <code>TimeoutException</code> <p>If the request takes longer than Client.timeout.</p> <p>Returns:</p> Type Description <code>Optional[GithubComKalshiExchangeInfraSvcApi2ModelGetOrderGroupResponse]</code> <p>GithubComKalshiExchangeInfraSvcApi2ModelGetOrderGroupResponse</p> Source code in <code>kalshi_py/api/portfolio/get_order_group.py</code> <pre><code>async def asyncio(\n    order_group_id: str,\n    *,\n    client: Union[AuthenticatedClient, Client],\n) -&gt; Optional[GithubComKalshiExchangeInfraSvcApi2ModelGetOrderGroupResponse]:\n    \"\"\"Get Order Group\n\n      Retrieves details for a single order group including all order IDs and auto-cancel status.\n\n    Args:\n        order_group_id (str): Order group ID\n\n    Raises:\n        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.\n        httpx.TimeoutException: If the request takes longer than Client.timeout.\n\n    Returns:\n        GithubComKalshiExchangeInfraSvcApi2ModelGetOrderGroupResponse\n    \"\"\"\n\n    return (\n        await asyncio_detailed(\n            order_group_id=order_group_id,\n            client=client,\n        )\n    ).parsed\n</code></pre>"},{"location":"api/portfolio/#kalshi_py.api.portfolio.get_order_group.sync_detailed","title":"<code>kalshi_py.api.portfolio.get_order_group.sync_detailed(order_group_id: str, *, client: Union[AuthenticatedClient, Client]) -&gt; Response[GithubComKalshiExchangeInfraSvcApi2ModelGetOrderGroupResponse]</code>","text":"<p>Get Order Group</p> <p>Retrieves details for a single order group including all order IDs and auto-cancel status.</p> <p>Parameters:</p> Name Type Description Default <code>order_group_id</code> <code>str</code> <p>Order group ID</p> required <p>Raises:</p> Type Description <code>UnexpectedStatus</code> <p>If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.</p> <code>TimeoutException</code> <p>If the request takes longer than Client.timeout.</p> <p>Returns:</p> Type Description <code>Response[GithubComKalshiExchangeInfraSvcApi2ModelGetOrderGroupResponse]</code> <p>Response[GithubComKalshiExchangeInfraSvcApi2ModelGetOrderGroupResponse]</p> Source code in <code>kalshi_py/api/portfolio/get_order_group.py</code> <pre><code>def sync_detailed(\n    order_group_id: str,\n    *,\n    client: Union[AuthenticatedClient, Client],\n) -&gt; Response[GithubComKalshiExchangeInfraSvcApi2ModelGetOrderGroupResponse]:\n    \"\"\"Get Order Group\n\n      Retrieves details for a single order group including all order IDs and auto-cancel status.\n\n    Args:\n        order_group_id (str): Order group ID\n\n    Raises:\n        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.\n        httpx.TimeoutException: If the request takes longer than Client.timeout.\n\n    Returns:\n        Response[GithubComKalshiExchangeInfraSvcApi2ModelGetOrderGroupResponse]\n    \"\"\"\n\n    kwargs = _get_kwargs(\n        order_group_id=order_group_id,\n    )\n\n    response = client.get_httpx_client().request(\n        **kwargs,\n    )\n\n    return _build_response(client=client, response=response)\n</code></pre>"},{"location":"api/portfolio/#kalshi_py.api.portfolio.get_order_group.asyncio_detailed","title":"<code>kalshi_py.api.portfolio.get_order_group.asyncio_detailed(order_group_id: str, *, client: Union[AuthenticatedClient, Client]) -&gt; Response[GithubComKalshiExchangeInfraSvcApi2ModelGetOrderGroupResponse]</code>  <code>async</code>","text":"<p>Get Order Group</p> <p>Retrieves details for a single order group including all order IDs and auto-cancel status.</p> <p>Parameters:</p> Name Type Description Default <code>order_group_id</code> <code>str</code> <p>Order group ID</p> required <p>Raises:</p> Type Description <code>UnexpectedStatus</code> <p>If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.</p> <code>TimeoutException</code> <p>If the request takes longer than Client.timeout.</p> <p>Returns:</p> Type Description <code>Response[GithubComKalshiExchangeInfraSvcApi2ModelGetOrderGroupResponse]</code> <p>Response[GithubComKalshiExchangeInfraSvcApi2ModelGetOrderGroupResponse]</p> Source code in <code>kalshi_py/api/portfolio/get_order_group.py</code> <pre><code>async def asyncio_detailed(\n    order_group_id: str,\n    *,\n    client: Union[AuthenticatedClient, Client],\n) -&gt; Response[GithubComKalshiExchangeInfraSvcApi2ModelGetOrderGroupResponse]:\n    \"\"\"Get Order Group\n\n      Retrieves details for a single order group including all order IDs and auto-cancel status.\n\n    Args:\n        order_group_id (str): Order group ID\n\n    Raises:\n        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.\n        httpx.TimeoutException: If the request takes longer than Client.timeout.\n\n    Returns:\n        Response[GithubComKalshiExchangeInfraSvcApi2ModelGetOrderGroupResponse]\n    \"\"\"\n\n    kwargs = _get_kwargs(\n        order_group_id=order_group_id,\n    )\n\n    response = await client.get_async_httpx_client().request(**kwargs)\n\n    return _build_response(client=client, response=response)\n</code></pre>"},{"location":"api/portfolio/#get-order-groups","title":"Get Order Groups","text":"<p>Synchronous API Call</p> <p>Asynchronous API Call</p> <p>Synchronous Detailed Response</p> <p>Asynchronous Detailed Response</p>"},{"location":"api/portfolio/#kalshi_py.api.portfolio.get_order_groups.sync","title":"<code>kalshi_py.api.portfolio.get_order_groups.sync(*, client: Union[AuthenticatedClient, Client]) -&gt; Optional[GithubComKalshiExchangeInfraSvcApi2ModelGetOrderGroupsResponse]</code>","text":"<p>Get Order Groups</p> <p>Retrieves all order groups for the authenticated user.</p> <p>Raises:</p> Type Description <code>UnexpectedStatus</code> <p>If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.</p> <code>TimeoutException</code> <p>If the request takes longer than Client.timeout.</p> <p>Returns:</p> Type Description <code>Optional[GithubComKalshiExchangeInfraSvcApi2ModelGetOrderGroupsResponse]</code> <p>GithubComKalshiExchangeInfraSvcApi2ModelGetOrderGroupsResponse</p> Source code in <code>kalshi_py/api/portfolio/get_order_groups.py</code> <pre><code>def sync(\n    *,\n    client: Union[AuthenticatedClient, Client],\n) -&gt; Optional[GithubComKalshiExchangeInfraSvcApi2ModelGetOrderGroupsResponse]:\n    \"\"\"Get Order Groups\n\n      Retrieves all order groups for the authenticated user.\n\n    Raises:\n        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.\n        httpx.TimeoutException: If the request takes longer than Client.timeout.\n\n    Returns:\n        GithubComKalshiExchangeInfraSvcApi2ModelGetOrderGroupsResponse\n    \"\"\"\n\n    return sync_detailed(\n        client=client,\n    ).parsed\n</code></pre>"},{"location":"api/portfolio/#kalshi_py.api.portfolio.get_order_groups.asyncio","title":"<code>kalshi_py.api.portfolio.get_order_groups.asyncio(*, client: Union[AuthenticatedClient, Client]) -&gt; Optional[GithubComKalshiExchangeInfraSvcApi2ModelGetOrderGroupsResponse]</code>  <code>async</code>","text":"<p>Get Order Groups</p> <p>Retrieves all order groups for the authenticated user.</p> <p>Raises:</p> Type Description <code>UnexpectedStatus</code> <p>If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.</p> <code>TimeoutException</code> <p>If the request takes longer than Client.timeout.</p> <p>Returns:</p> Type Description <code>Optional[GithubComKalshiExchangeInfraSvcApi2ModelGetOrderGroupsResponse]</code> <p>GithubComKalshiExchangeInfraSvcApi2ModelGetOrderGroupsResponse</p> Source code in <code>kalshi_py/api/portfolio/get_order_groups.py</code> <pre><code>async def asyncio(\n    *,\n    client: Union[AuthenticatedClient, Client],\n) -&gt; Optional[GithubComKalshiExchangeInfraSvcApi2ModelGetOrderGroupsResponse]:\n    \"\"\"Get Order Groups\n\n      Retrieves all order groups for the authenticated user.\n\n    Raises:\n        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.\n        httpx.TimeoutException: If the request takes longer than Client.timeout.\n\n    Returns:\n        GithubComKalshiExchangeInfraSvcApi2ModelGetOrderGroupsResponse\n    \"\"\"\n\n    return (\n        await asyncio_detailed(\n            client=client,\n        )\n    ).parsed\n</code></pre>"},{"location":"api/portfolio/#kalshi_py.api.portfolio.get_order_groups.sync_detailed","title":"<code>kalshi_py.api.portfolio.get_order_groups.sync_detailed(*, client: Union[AuthenticatedClient, Client]) -&gt; Response[GithubComKalshiExchangeInfraSvcApi2ModelGetOrderGroupsResponse]</code>","text":"<p>Get Order Groups</p> <p>Retrieves all order groups for the authenticated user.</p> <p>Raises:</p> Type Description <code>UnexpectedStatus</code> <p>If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.</p> <code>TimeoutException</code> <p>If the request takes longer than Client.timeout.</p> <p>Returns:</p> Type Description <code>Response[GithubComKalshiExchangeInfraSvcApi2ModelGetOrderGroupsResponse]</code> <p>Response[GithubComKalshiExchangeInfraSvcApi2ModelGetOrderGroupsResponse]</p> Source code in <code>kalshi_py/api/portfolio/get_order_groups.py</code> <pre><code>def sync_detailed(\n    *,\n    client: Union[AuthenticatedClient, Client],\n) -&gt; Response[GithubComKalshiExchangeInfraSvcApi2ModelGetOrderGroupsResponse]:\n    \"\"\"Get Order Groups\n\n      Retrieves all order groups for the authenticated user.\n\n    Raises:\n        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.\n        httpx.TimeoutException: If the request takes longer than Client.timeout.\n\n    Returns:\n        Response[GithubComKalshiExchangeInfraSvcApi2ModelGetOrderGroupsResponse]\n    \"\"\"\n\n    kwargs = _get_kwargs()\n\n    response = client.get_httpx_client().request(\n        **kwargs,\n    )\n\n    return _build_response(client=client, response=response)\n</code></pre>"},{"location":"api/portfolio/#kalshi_py.api.portfolio.get_order_groups.asyncio_detailed","title":"<code>kalshi_py.api.portfolio.get_order_groups.asyncio_detailed(*, client: Union[AuthenticatedClient, Client]) -&gt; Response[GithubComKalshiExchangeInfraSvcApi2ModelGetOrderGroupsResponse]</code>  <code>async</code>","text":"<p>Get Order Groups</p> <p>Retrieves all order groups for the authenticated user.</p> <p>Raises:</p> Type Description <code>UnexpectedStatus</code> <p>If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.</p> <code>TimeoutException</code> <p>If the request takes longer than Client.timeout.</p> <p>Returns:</p> Type Description <code>Response[GithubComKalshiExchangeInfraSvcApi2ModelGetOrderGroupsResponse]</code> <p>Response[GithubComKalshiExchangeInfraSvcApi2ModelGetOrderGroupsResponse]</p> Source code in <code>kalshi_py/api/portfolio/get_order_groups.py</code> <pre><code>async def asyncio_detailed(\n    *,\n    client: Union[AuthenticatedClient, Client],\n) -&gt; Response[GithubComKalshiExchangeInfraSvcApi2ModelGetOrderGroupsResponse]:\n    \"\"\"Get Order Groups\n\n      Retrieves all order groups for the authenticated user.\n\n    Raises:\n        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.\n        httpx.TimeoutException: If the request takes longer than Client.timeout.\n\n    Returns:\n        Response[GithubComKalshiExchangeInfraSvcApi2ModelGetOrderGroupsResponse]\n    \"\"\"\n\n    kwargs = _get_kwargs()\n\n    response = await client.get_async_httpx_client().request(**kwargs)\n\n    return _build_response(client=client, response=response)\n</code></pre>"},{"location":"api/portfolio/#get-order-queue-position","title":"Get Order Queue Position","text":"<p>Synchronous API Call</p> <p>Asynchronous API Call</p> <p>Synchronous Detailed Response</p> <p>Asynchronous Detailed Response</p>"},{"location":"api/portfolio/#kalshi_py.api.portfolio.get_order_queue_position.sync","title":"<code>kalshi_py.api.portfolio.get_order_queue_position.sync(order_id: str, *, client: Union[AuthenticatedClient, Client]) -&gt; Optional[GithubComKalshiExchangeInfraSvcApi2ModelGetOrderQueuePositionResponse]</code>","text":"<p>Get Queue Position for Order</p> <p>Endpoint for getting an order's queue position in the order book. This represents the amount of orders that need to be matched before this order receives a partial or full match. Queue position is determined using a price-time priority.</p> <p>Parameters:</p> Name Type Description Default <code>order_id</code> <code>str</code> <p>Order ID</p> required <p>Raises:</p> Type Description <code>UnexpectedStatus</code> <p>If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.</p> <code>TimeoutException</code> <p>If the request takes longer than Client.timeout.</p> <p>Returns:</p> Type Description <code>Optional[GithubComKalshiExchangeInfraSvcApi2ModelGetOrderQueuePositionResponse]</code> <p>GithubComKalshiExchangeInfraSvcApi2ModelGetOrderQueuePositionResponse</p> Source code in <code>kalshi_py/api/portfolio/get_order_queue_position.py</code> <pre><code>def sync(\n    order_id: str,\n    *,\n    client: Union[AuthenticatedClient, Client],\n) -&gt; Optional[GithubComKalshiExchangeInfraSvcApi2ModelGetOrderQueuePositionResponse]:\n    \"\"\"Get Queue Position for Order\n\n      Endpoint for getting an order's queue position in the order book. This represents the amount of\n    orders that need to be matched before this order receives a partial or full match. Queue position is\n    determined using a price-time priority.\n\n    Args:\n        order_id (str): Order ID\n\n    Raises:\n        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.\n        httpx.TimeoutException: If the request takes longer than Client.timeout.\n\n    Returns:\n        GithubComKalshiExchangeInfraSvcApi2ModelGetOrderQueuePositionResponse\n    \"\"\"\n\n    return sync_detailed(\n        order_id=order_id,\n        client=client,\n    ).parsed\n</code></pre>"},{"location":"api/portfolio/#kalshi_py.api.portfolio.get_order_queue_position.asyncio","title":"<code>kalshi_py.api.portfolio.get_order_queue_position.asyncio(order_id: str, *, client: Union[AuthenticatedClient, Client]) -&gt; Optional[GithubComKalshiExchangeInfraSvcApi2ModelGetOrderQueuePositionResponse]</code>  <code>async</code>","text":"<p>Get Queue Position for Order</p> <p>Endpoint for getting an order's queue position in the order book. This represents the amount of orders that need to be matched before this order receives a partial or full match. Queue position is determined using a price-time priority.</p> <p>Parameters:</p> Name Type Description Default <code>order_id</code> <code>str</code> <p>Order ID</p> required <p>Raises:</p> Type Description <code>UnexpectedStatus</code> <p>If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.</p> <code>TimeoutException</code> <p>If the request takes longer than Client.timeout.</p> <p>Returns:</p> Type Description <code>Optional[GithubComKalshiExchangeInfraSvcApi2ModelGetOrderQueuePositionResponse]</code> <p>GithubComKalshiExchangeInfraSvcApi2ModelGetOrderQueuePositionResponse</p> Source code in <code>kalshi_py/api/portfolio/get_order_queue_position.py</code> <pre><code>async def asyncio(\n    order_id: str,\n    *,\n    client: Union[AuthenticatedClient, Client],\n) -&gt; Optional[GithubComKalshiExchangeInfraSvcApi2ModelGetOrderQueuePositionResponse]:\n    \"\"\"Get Queue Position for Order\n\n      Endpoint for getting an order's queue position in the order book. This represents the amount of\n    orders that need to be matched before this order receives a partial or full match. Queue position is\n    determined using a price-time priority.\n\n    Args:\n        order_id (str): Order ID\n\n    Raises:\n        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.\n        httpx.TimeoutException: If the request takes longer than Client.timeout.\n\n    Returns:\n        GithubComKalshiExchangeInfraSvcApi2ModelGetOrderQueuePositionResponse\n    \"\"\"\n\n    return (\n        await asyncio_detailed(\n            order_id=order_id,\n            client=client,\n        )\n    ).parsed\n</code></pre>"},{"location":"api/portfolio/#kalshi_py.api.portfolio.get_order_queue_position.sync_detailed","title":"<code>kalshi_py.api.portfolio.get_order_queue_position.sync_detailed(order_id: str, *, client: Union[AuthenticatedClient, Client]) -&gt; Response[GithubComKalshiExchangeInfraSvcApi2ModelGetOrderQueuePositionResponse]</code>","text":"<p>Get Queue Position for Order</p> <p>Endpoint for getting an order's queue position in the order book. This represents the amount of orders that need to be matched before this order receives a partial or full match. Queue position is determined using a price-time priority.</p> <p>Parameters:</p> Name Type Description Default <code>order_id</code> <code>str</code> <p>Order ID</p> required <p>Raises:</p> Type Description <code>UnexpectedStatus</code> <p>If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.</p> <code>TimeoutException</code> <p>If the request takes longer than Client.timeout.</p> <p>Returns:</p> Type Description <code>Response[GithubComKalshiExchangeInfraSvcApi2ModelGetOrderQueuePositionResponse]</code> <p>Response[GithubComKalshiExchangeInfraSvcApi2ModelGetOrderQueuePositionResponse]</p> Source code in <code>kalshi_py/api/portfolio/get_order_queue_position.py</code> <pre><code>def sync_detailed(\n    order_id: str,\n    *,\n    client: Union[AuthenticatedClient, Client],\n) -&gt; Response[GithubComKalshiExchangeInfraSvcApi2ModelGetOrderQueuePositionResponse]:\n    \"\"\"Get Queue Position for Order\n\n      Endpoint for getting an order's queue position in the order book. This represents the amount of\n    orders that need to be matched before this order receives a partial or full match. Queue position is\n    determined using a price-time priority.\n\n    Args:\n        order_id (str): Order ID\n\n    Raises:\n        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.\n        httpx.TimeoutException: If the request takes longer than Client.timeout.\n\n    Returns:\n        Response[GithubComKalshiExchangeInfraSvcApi2ModelGetOrderQueuePositionResponse]\n    \"\"\"\n\n    kwargs = _get_kwargs(\n        order_id=order_id,\n    )\n\n    response = client.get_httpx_client().request(\n        **kwargs,\n    )\n\n    return _build_response(client=client, response=response)\n</code></pre>"},{"location":"api/portfolio/#kalshi_py.api.portfolio.get_order_queue_position.asyncio_detailed","title":"<code>kalshi_py.api.portfolio.get_order_queue_position.asyncio_detailed(order_id: str, *, client: Union[AuthenticatedClient, Client]) -&gt; Response[GithubComKalshiExchangeInfraSvcApi2ModelGetOrderQueuePositionResponse]</code>  <code>async</code>","text":"<p>Get Queue Position for Order</p> <p>Endpoint for getting an order's queue position in the order book. This represents the amount of orders that need to be matched before this order receives a partial or full match. Queue position is determined using a price-time priority.</p> <p>Parameters:</p> Name Type Description Default <code>order_id</code> <code>str</code> <p>Order ID</p> required <p>Raises:</p> Type Description <code>UnexpectedStatus</code> <p>If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.</p> <code>TimeoutException</code> <p>If the request takes longer than Client.timeout.</p> <p>Returns:</p> Type Description <code>Response[GithubComKalshiExchangeInfraSvcApi2ModelGetOrderQueuePositionResponse]</code> <p>Response[GithubComKalshiExchangeInfraSvcApi2ModelGetOrderQueuePositionResponse]</p> Source code in <code>kalshi_py/api/portfolio/get_order_queue_position.py</code> <pre><code>async def asyncio_detailed(\n    order_id: str,\n    *,\n    client: Union[AuthenticatedClient, Client],\n) -&gt; Response[GithubComKalshiExchangeInfraSvcApi2ModelGetOrderQueuePositionResponse]:\n    \"\"\"Get Queue Position for Order\n\n      Endpoint for getting an order's queue position in the order book. This represents the amount of\n    orders that need to be matched before this order receives a partial or full match. Queue position is\n    determined using a price-time priority.\n\n    Args:\n        order_id (str): Order ID\n\n    Raises:\n        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.\n        httpx.TimeoutException: If the request takes longer than Client.timeout.\n\n    Returns:\n        Response[GithubComKalshiExchangeInfraSvcApi2ModelGetOrderQueuePositionResponse]\n    \"\"\"\n\n    kwargs = _get_kwargs(\n        order_id=order_id,\n    )\n\n    response = await client.get_async_httpx_client().request(**kwargs)\n\n    return _build_response(client=client, response=response)\n</code></pre>"},{"location":"api/portfolio/#get-order-queue-positions","title":"Get Order Queue Positions","text":"<p>Synchronous API Call</p> <p>Asynchronous API Call</p> <p>Synchronous Detailed Response</p> <p>Asynchronous Detailed Response</p>"},{"location":"api/portfolio/#kalshi_py.api.portfolio.get_order_queue_positions.sync","title":"<code>kalshi_py.api.portfolio.get_order_queue_positions.sync(*, client: Union[AuthenticatedClient, Client], market_tickers: Union[Unset, str] = UNSET, event_ticker: Union[Unset, str] = UNSET) -&gt; Optional[GithubComKalshiExchangeInfraSvcApi2ModelGetOrderQueuePositionsResponse]</code>","text":"<p>Get Queue Positions for Orders</p> <p>Endpoint for getting queue positions for all resting orders. Queue position represents the number of contracts that need to be matched before an order receives a partial or full match, determined using price-time priority.</p> <p>Parameters:</p> Name Type Description Default <code>market_tickers</code> <code>Union[Unset, str]</code> <p>Comma-separated list of market tickers to filter by</p> <code>UNSET</code> <code>event_ticker</code> <code>Union[Unset, str]</code> <p>Event ticker to filter by</p> <code>UNSET</code> <p>Raises:</p> Type Description <code>UnexpectedStatus</code> <p>If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.</p> <code>TimeoutException</code> <p>If the request takes longer than Client.timeout.</p> <p>Returns:</p> Type Description <code>Optional[GithubComKalshiExchangeInfraSvcApi2ModelGetOrderQueuePositionsResponse]</code> <p>GithubComKalshiExchangeInfraSvcApi2ModelGetOrderQueuePositionsResponse</p> Source code in <code>kalshi_py/api/portfolio/get_order_queue_positions.py</code> <pre><code>def sync(\n    *,\n    client: Union[AuthenticatedClient, Client],\n    market_tickers: Union[Unset, str] = UNSET,\n    event_ticker: Union[Unset, str] = UNSET,\n) -&gt; Optional[GithubComKalshiExchangeInfraSvcApi2ModelGetOrderQueuePositionsResponse]:\n    \"\"\"Get Queue Positions for Orders\n\n      Endpoint for getting queue positions for all resting orders. Queue position represents the number\n    of contracts that need to be matched before an order receives a partial or full match, determined\n    using price-time priority.\n\n    Args:\n        market_tickers (Union[Unset, str]): Comma-separated list of market tickers to filter by\n        event_ticker (Union[Unset, str]): Event ticker to filter by\n\n    Raises:\n        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.\n        httpx.TimeoutException: If the request takes longer than Client.timeout.\n\n    Returns:\n        GithubComKalshiExchangeInfraSvcApi2ModelGetOrderQueuePositionsResponse\n    \"\"\"\n\n    return sync_detailed(\n        client=client,\n        market_tickers=market_tickers,\n        event_ticker=event_ticker,\n    ).parsed\n</code></pre>"},{"location":"api/portfolio/#kalshi_py.api.portfolio.get_order_queue_positions.asyncio","title":"<code>kalshi_py.api.portfolio.get_order_queue_positions.asyncio(*, client: Union[AuthenticatedClient, Client], market_tickers: Union[Unset, str] = UNSET, event_ticker: Union[Unset, str] = UNSET) -&gt; Optional[GithubComKalshiExchangeInfraSvcApi2ModelGetOrderQueuePositionsResponse]</code>  <code>async</code>","text":"<p>Get Queue Positions for Orders</p> <p>Endpoint for getting queue positions for all resting orders. Queue position represents the number of contracts that need to be matched before an order receives a partial or full match, determined using price-time priority.</p> <p>Parameters:</p> Name Type Description Default <code>market_tickers</code> <code>Union[Unset, str]</code> <p>Comma-separated list of market tickers to filter by</p> <code>UNSET</code> <code>event_ticker</code> <code>Union[Unset, str]</code> <p>Event ticker to filter by</p> <code>UNSET</code> <p>Raises:</p> Type Description <code>UnexpectedStatus</code> <p>If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.</p> <code>TimeoutException</code> <p>If the request takes longer than Client.timeout.</p> <p>Returns:</p> Type Description <code>Optional[GithubComKalshiExchangeInfraSvcApi2ModelGetOrderQueuePositionsResponse]</code> <p>GithubComKalshiExchangeInfraSvcApi2ModelGetOrderQueuePositionsResponse</p> Source code in <code>kalshi_py/api/portfolio/get_order_queue_positions.py</code> <pre><code>async def asyncio(\n    *,\n    client: Union[AuthenticatedClient, Client],\n    market_tickers: Union[Unset, str] = UNSET,\n    event_ticker: Union[Unset, str] = UNSET,\n) -&gt; Optional[GithubComKalshiExchangeInfraSvcApi2ModelGetOrderQueuePositionsResponse]:\n    \"\"\"Get Queue Positions for Orders\n\n      Endpoint for getting queue positions for all resting orders. Queue position represents the number\n    of contracts that need to be matched before an order receives a partial or full match, determined\n    using price-time priority.\n\n    Args:\n        market_tickers (Union[Unset, str]): Comma-separated list of market tickers to filter by\n        event_ticker (Union[Unset, str]): Event ticker to filter by\n\n    Raises:\n        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.\n        httpx.TimeoutException: If the request takes longer than Client.timeout.\n\n    Returns:\n        GithubComKalshiExchangeInfraSvcApi2ModelGetOrderQueuePositionsResponse\n    \"\"\"\n\n    return (\n        await asyncio_detailed(\n            client=client,\n            market_tickers=market_tickers,\n            event_ticker=event_ticker,\n        )\n    ).parsed\n</code></pre>"},{"location":"api/portfolio/#kalshi_py.api.portfolio.get_order_queue_positions.sync_detailed","title":"<code>kalshi_py.api.portfolio.get_order_queue_positions.sync_detailed(*, client: Union[AuthenticatedClient, Client], market_tickers: Union[Unset, str] = UNSET, event_ticker: Union[Unset, str] = UNSET) -&gt; Response[GithubComKalshiExchangeInfraSvcApi2ModelGetOrderQueuePositionsResponse]</code>","text":"<p>Get Queue Positions for Orders</p> <p>Endpoint for getting queue positions for all resting orders. Queue position represents the number of contracts that need to be matched before an order receives a partial or full match, determined using price-time priority.</p> <p>Parameters:</p> Name Type Description Default <code>market_tickers</code> <code>Union[Unset, str]</code> <p>Comma-separated list of market tickers to filter by</p> <code>UNSET</code> <code>event_ticker</code> <code>Union[Unset, str]</code> <p>Event ticker to filter by</p> <code>UNSET</code> <p>Raises:</p> Type Description <code>UnexpectedStatus</code> <p>If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.</p> <code>TimeoutException</code> <p>If the request takes longer than Client.timeout.</p> <p>Returns:</p> Type Description <code>Response[GithubComKalshiExchangeInfraSvcApi2ModelGetOrderQueuePositionsResponse]</code> <p>Response[GithubComKalshiExchangeInfraSvcApi2ModelGetOrderQueuePositionsResponse]</p> Source code in <code>kalshi_py/api/portfolio/get_order_queue_positions.py</code> <pre><code>def sync_detailed(\n    *,\n    client: Union[AuthenticatedClient, Client],\n    market_tickers: Union[Unset, str] = UNSET,\n    event_ticker: Union[Unset, str] = UNSET,\n) -&gt; Response[GithubComKalshiExchangeInfraSvcApi2ModelGetOrderQueuePositionsResponse]:\n    \"\"\"Get Queue Positions for Orders\n\n      Endpoint for getting queue positions for all resting orders. Queue position represents the number\n    of contracts that need to be matched before an order receives a partial or full match, determined\n    using price-time priority.\n\n    Args:\n        market_tickers (Union[Unset, str]): Comma-separated list of market tickers to filter by\n        event_ticker (Union[Unset, str]): Event ticker to filter by\n\n    Raises:\n        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.\n        httpx.TimeoutException: If the request takes longer than Client.timeout.\n\n    Returns:\n        Response[GithubComKalshiExchangeInfraSvcApi2ModelGetOrderQueuePositionsResponse]\n    \"\"\"\n\n    kwargs = _get_kwargs(\n        market_tickers=market_tickers,\n        event_ticker=event_ticker,\n    )\n\n    response = client.get_httpx_client().request(\n        **kwargs,\n    )\n\n    return _build_response(client=client, response=response)\n</code></pre>"},{"location":"api/portfolio/#kalshi_py.api.portfolio.get_order_queue_positions.asyncio_detailed","title":"<code>kalshi_py.api.portfolio.get_order_queue_positions.asyncio_detailed(*, client: Union[AuthenticatedClient, Client], market_tickers: Union[Unset, str] = UNSET, event_ticker: Union[Unset, str] = UNSET) -&gt; Response[GithubComKalshiExchangeInfraSvcApi2ModelGetOrderQueuePositionsResponse]</code>  <code>async</code>","text":"<p>Get Queue Positions for Orders</p> <p>Endpoint for getting queue positions for all resting orders. Queue position represents the number of contracts that need to be matched before an order receives a partial or full match, determined using price-time priority.</p> <p>Parameters:</p> Name Type Description Default <code>market_tickers</code> <code>Union[Unset, str]</code> <p>Comma-separated list of market tickers to filter by</p> <code>UNSET</code> <code>event_ticker</code> <code>Union[Unset, str]</code> <p>Event ticker to filter by</p> <code>UNSET</code> <p>Raises:</p> Type Description <code>UnexpectedStatus</code> <p>If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.</p> <code>TimeoutException</code> <p>If the request takes longer than Client.timeout.</p> <p>Returns:</p> Type Description <code>Response[GithubComKalshiExchangeInfraSvcApi2ModelGetOrderQueuePositionsResponse]</code> <p>Response[GithubComKalshiExchangeInfraSvcApi2ModelGetOrderQueuePositionsResponse]</p> Source code in <code>kalshi_py/api/portfolio/get_order_queue_positions.py</code> <pre><code>async def asyncio_detailed(\n    *,\n    client: Union[AuthenticatedClient, Client],\n    market_tickers: Union[Unset, str] = UNSET,\n    event_ticker: Union[Unset, str] = UNSET,\n) -&gt; Response[GithubComKalshiExchangeInfraSvcApi2ModelGetOrderQueuePositionsResponse]:\n    \"\"\"Get Queue Positions for Orders\n\n      Endpoint for getting queue positions for all resting orders. Queue position represents the number\n    of contracts that need to be matched before an order receives a partial or full match, determined\n    using price-time priority.\n\n    Args:\n        market_tickers (Union[Unset, str]): Comma-separated list of market tickers to filter by\n        event_ticker (Union[Unset, str]): Event ticker to filter by\n\n    Raises:\n        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.\n        httpx.TimeoutException: If the request takes longer than Client.timeout.\n\n    Returns:\n        Response[GithubComKalshiExchangeInfraSvcApi2ModelGetOrderQueuePositionsResponse]\n    \"\"\"\n\n    kwargs = _get_kwargs(\n        market_tickers=market_tickers,\n        event_ticker=event_ticker,\n    )\n\n    response = await client.get_async_httpx_client().request(**kwargs)\n\n    return _build_response(client=client, response=response)\n</code></pre>"},{"location":"api/portfolio/#get-orders","title":"Get Orders","text":"<p>Synchronous API Call</p> <p>Asynchronous API Call</p> <p>Synchronous Detailed Response</p> <p>Asynchronous Detailed Response</p>"},{"location":"api/portfolio/#kalshi_py.api.portfolio.get_orders.sync","title":"<code>kalshi_py.api.portfolio.get_orders.sync(*, client: Union[AuthenticatedClient, Client], ticker: Union[Unset, str] = UNSET, event_ticker: Union[Unset, str] = UNSET, min_ts: Union[Unset, int] = UNSET, max_ts: Union[Unset, int] = UNSET, status: Union[Unset, str] = UNSET, cursor: Union[Unset, str] = UNSET, limit: Union[Unset, int] = UNSET) -&gt; Optional[GithubComKalshiExchangeInfraSvcApi2ModelGetOrdersResponse]</code>","text":"<p>Get Orders</p> <p>Endpoint for getting all orders for the member.</p> <p>Parameters:</p> Name Type Description Default <code>ticker</code> <code>Union[Unset, str]</code> <p>Restricts the response to orders in a single market.</p> <code>UNSET</code> <code>event_ticker</code> <code>Union[Unset, str]</code> <p>Restricts the response to orders in a single event.</p> <code>UNSET</code> <code>min_ts</code> <code>Union[Unset, int]</code> <p>Restricts the response to orders after a timestamp, formatted as a Unix Timestamp.</p> <code>UNSET</code> <code>max_ts</code> <code>Union[Unset, int]</code> <p>Restricts the response to orders before a timestamp, formatted as a Unix Timestamp.</p> <code>UNSET</code> <code>status</code> <code>Union[Unset, str]</code> <p>Restricts the response to orders that have a certain status: resting, canceled, or executed.</p> <code>UNSET</code> <code>cursor</code> <code>Union[Unset, str]</code> <p>The Cursor represents a pointer to the next page of records in the pagination. Use the value returned from the previous response to get the next page.</p> <code>UNSET</code> <code>limit</code> <code>Union[Unset, int]</code> <p>Parameter to specify the number of results per page. Defaults to 100.</p> <code>UNSET</code> <p>Raises:</p> Type Description <code>UnexpectedStatus</code> <p>If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.</p> <code>TimeoutException</code> <p>If the request takes longer than Client.timeout.</p> <p>Returns:</p> Type Description <code>Optional[GithubComKalshiExchangeInfraSvcApi2ModelGetOrdersResponse]</code> <p>GithubComKalshiExchangeInfraSvcApi2ModelGetOrdersResponse</p> Source code in <code>kalshi_py/api/portfolio/get_orders.py</code> <pre><code>def sync(\n    *,\n    client: Union[AuthenticatedClient, Client],\n    ticker: Union[Unset, str] = UNSET,\n    event_ticker: Union[Unset, str] = UNSET,\n    min_ts: Union[Unset, int] = UNSET,\n    max_ts: Union[Unset, int] = UNSET,\n    status: Union[Unset, str] = UNSET,\n    cursor: Union[Unset, str] = UNSET,\n    limit: Union[Unset, int] = UNSET,\n) -&gt; Optional[GithubComKalshiExchangeInfraSvcApi2ModelGetOrdersResponse]:\n    \"\"\"Get Orders\n\n      Endpoint for getting all orders for the member.\n\n    Args:\n        ticker (Union[Unset, str]): Restricts the response to orders in a single market.\n        event_ticker (Union[Unset, str]): Restricts the response to orders in a single event.\n        min_ts (Union[Unset, int]): Restricts the response to orders after a timestamp, formatted\n            as a Unix Timestamp.\n        max_ts (Union[Unset, int]): Restricts the response to orders before a timestamp, formatted\n            as a Unix Timestamp.\n        status (Union[Unset, str]): Restricts the response to orders that have a certain status:\n            resting, canceled, or executed.\n        cursor (Union[Unset, str]): The Cursor represents a pointer to the next page of records in\n            the pagination. Use the value returned from the previous response to get the next page.\n        limit (Union[Unset, int]): Parameter to specify the number of results per page. Defaults\n            to 100.\n\n    Raises:\n        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.\n        httpx.TimeoutException: If the request takes longer than Client.timeout.\n\n    Returns:\n        GithubComKalshiExchangeInfraSvcApi2ModelGetOrdersResponse\n    \"\"\"\n\n    return sync_detailed(\n        client=client,\n        ticker=ticker,\n        event_ticker=event_ticker,\n        min_ts=min_ts,\n        max_ts=max_ts,\n        status=status,\n        cursor=cursor,\n        limit=limit,\n    ).parsed\n</code></pre>"},{"location":"api/portfolio/#kalshi_py.api.portfolio.get_orders.asyncio","title":"<code>kalshi_py.api.portfolio.get_orders.asyncio(*, client: Union[AuthenticatedClient, Client], ticker: Union[Unset, str] = UNSET, event_ticker: Union[Unset, str] = UNSET, min_ts: Union[Unset, int] = UNSET, max_ts: Union[Unset, int] = UNSET, status: Union[Unset, str] = UNSET, cursor: Union[Unset, str] = UNSET, limit: Union[Unset, int] = UNSET) -&gt; Optional[GithubComKalshiExchangeInfraSvcApi2ModelGetOrdersResponse]</code>  <code>async</code>","text":"<p>Get Orders</p> <p>Endpoint for getting all orders for the member.</p> <p>Parameters:</p> Name Type Description Default <code>ticker</code> <code>Union[Unset, str]</code> <p>Restricts the response to orders in a single market.</p> <code>UNSET</code> <code>event_ticker</code> <code>Union[Unset, str]</code> <p>Restricts the response to orders in a single event.</p> <code>UNSET</code> <code>min_ts</code> <code>Union[Unset, int]</code> <p>Restricts the response to orders after a timestamp, formatted as a Unix Timestamp.</p> <code>UNSET</code> <code>max_ts</code> <code>Union[Unset, int]</code> <p>Restricts the response to orders before a timestamp, formatted as a Unix Timestamp.</p> <code>UNSET</code> <code>status</code> <code>Union[Unset, str]</code> <p>Restricts the response to orders that have a certain status: resting, canceled, or executed.</p> <code>UNSET</code> <code>cursor</code> <code>Union[Unset, str]</code> <p>The Cursor represents a pointer to the next page of records in the pagination. Use the value returned from the previous response to get the next page.</p> <code>UNSET</code> <code>limit</code> <code>Union[Unset, int]</code> <p>Parameter to specify the number of results per page. Defaults to 100.</p> <code>UNSET</code> <p>Raises:</p> Type Description <code>UnexpectedStatus</code> <p>If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.</p> <code>TimeoutException</code> <p>If the request takes longer than Client.timeout.</p> <p>Returns:</p> Type Description <code>Optional[GithubComKalshiExchangeInfraSvcApi2ModelGetOrdersResponse]</code> <p>GithubComKalshiExchangeInfraSvcApi2ModelGetOrdersResponse</p> Source code in <code>kalshi_py/api/portfolio/get_orders.py</code> <pre><code>async def asyncio(\n    *,\n    client: Union[AuthenticatedClient, Client],\n    ticker: Union[Unset, str] = UNSET,\n    event_ticker: Union[Unset, str] = UNSET,\n    min_ts: Union[Unset, int] = UNSET,\n    max_ts: Union[Unset, int] = UNSET,\n    status: Union[Unset, str] = UNSET,\n    cursor: Union[Unset, str] = UNSET,\n    limit: Union[Unset, int] = UNSET,\n) -&gt; Optional[GithubComKalshiExchangeInfraSvcApi2ModelGetOrdersResponse]:\n    \"\"\"Get Orders\n\n      Endpoint for getting all orders for the member.\n\n    Args:\n        ticker (Union[Unset, str]): Restricts the response to orders in a single market.\n        event_ticker (Union[Unset, str]): Restricts the response to orders in a single event.\n        min_ts (Union[Unset, int]): Restricts the response to orders after a timestamp, formatted\n            as a Unix Timestamp.\n        max_ts (Union[Unset, int]): Restricts the response to orders before a timestamp, formatted\n            as a Unix Timestamp.\n        status (Union[Unset, str]): Restricts the response to orders that have a certain status:\n            resting, canceled, or executed.\n        cursor (Union[Unset, str]): The Cursor represents a pointer to the next page of records in\n            the pagination. Use the value returned from the previous response to get the next page.\n        limit (Union[Unset, int]): Parameter to specify the number of results per page. Defaults\n            to 100.\n\n    Raises:\n        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.\n        httpx.TimeoutException: If the request takes longer than Client.timeout.\n\n    Returns:\n        GithubComKalshiExchangeInfraSvcApi2ModelGetOrdersResponse\n    \"\"\"\n\n    return (\n        await asyncio_detailed(\n            client=client,\n            ticker=ticker,\n            event_ticker=event_ticker,\n            min_ts=min_ts,\n            max_ts=max_ts,\n            status=status,\n            cursor=cursor,\n            limit=limit,\n        )\n    ).parsed\n</code></pre>"},{"location":"api/portfolio/#kalshi_py.api.portfolio.get_orders.sync_detailed","title":"<code>kalshi_py.api.portfolio.get_orders.sync_detailed(*, client: Union[AuthenticatedClient, Client], ticker: Union[Unset, str] = UNSET, event_ticker: Union[Unset, str] = UNSET, min_ts: Union[Unset, int] = UNSET, max_ts: Union[Unset, int] = UNSET, status: Union[Unset, str] = UNSET, cursor: Union[Unset, str] = UNSET, limit: Union[Unset, int] = UNSET) -&gt; Response[GithubComKalshiExchangeInfraSvcApi2ModelGetOrdersResponse]</code>","text":"<p>Get Orders</p> <p>Endpoint for getting all orders for the member.</p> <p>Parameters:</p> Name Type Description Default <code>ticker</code> <code>Union[Unset, str]</code> <p>Restricts the response to orders in a single market.</p> <code>UNSET</code> <code>event_ticker</code> <code>Union[Unset, str]</code> <p>Restricts the response to orders in a single event.</p> <code>UNSET</code> <code>min_ts</code> <code>Union[Unset, int]</code> <p>Restricts the response to orders after a timestamp, formatted as a Unix Timestamp.</p> <code>UNSET</code> <code>max_ts</code> <code>Union[Unset, int]</code> <p>Restricts the response to orders before a timestamp, formatted as a Unix Timestamp.</p> <code>UNSET</code> <code>status</code> <code>Union[Unset, str]</code> <p>Restricts the response to orders that have a certain status: resting, canceled, or executed.</p> <code>UNSET</code> <code>cursor</code> <code>Union[Unset, str]</code> <p>The Cursor represents a pointer to the next page of records in the pagination. Use the value returned from the previous response to get the next page.</p> <code>UNSET</code> <code>limit</code> <code>Union[Unset, int]</code> <p>Parameter to specify the number of results per page. Defaults to 100.</p> <code>UNSET</code> <p>Raises:</p> Type Description <code>UnexpectedStatus</code> <p>If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.</p> <code>TimeoutException</code> <p>If the request takes longer than Client.timeout.</p> <p>Returns:</p> Type Description <code>Response[GithubComKalshiExchangeInfraSvcApi2ModelGetOrdersResponse]</code> <p>Response[GithubComKalshiExchangeInfraSvcApi2ModelGetOrdersResponse]</p> Source code in <code>kalshi_py/api/portfolio/get_orders.py</code> <pre><code>def sync_detailed(\n    *,\n    client: Union[AuthenticatedClient, Client],\n    ticker: Union[Unset, str] = UNSET,\n    event_ticker: Union[Unset, str] = UNSET,\n    min_ts: Union[Unset, int] = UNSET,\n    max_ts: Union[Unset, int] = UNSET,\n    status: Union[Unset, str] = UNSET,\n    cursor: Union[Unset, str] = UNSET,\n    limit: Union[Unset, int] = UNSET,\n) -&gt; Response[GithubComKalshiExchangeInfraSvcApi2ModelGetOrdersResponse]:\n    \"\"\"Get Orders\n\n      Endpoint for getting all orders for the member.\n\n    Args:\n        ticker (Union[Unset, str]): Restricts the response to orders in a single market.\n        event_ticker (Union[Unset, str]): Restricts the response to orders in a single event.\n        min_ts (Union[Unset, int]): Restricts the response to orders after a timestamp, formatted\n            as a Unix Timestamp.\n        max_ts (Union[Unset, int]): Restricts the response to orders before a timestamp, formatted\n            as a Unix Timestamp.\n        status (Union[Unset, str]): Restricts the response to orders that have a certain status:\n            resting, canceled, or executed.\n        cursor (Union[Unset, str]): The Cursor represents a pointer to the next page of records in\n            the pagination. Use the value returned from the previous response to get the next page.\n        limit (Union[Unset, int]): Parameter to specify the number of results per page. Defaults\n            to 100.\n\n    Raises:\n        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.\n        httpx.TimeoutException: If the request takes longer than Client.timeout.\n\n    Returns:\n        Response[GithubComKalshiExchangeInfraSvcApi2ModelGetOrdersResponse]\n    \"\"\"\n\n    kwargs = _get_kwargs(\n        ticker=ticker,\n        event_ticker=event_ticker,\n        min_ts=min_ts,\n        max_ts=max_ts,\n        status=status,\n        cursor=cursor,\n        limit=limit,\n    )\n\n    response = client.get_httpx_client().request(\n        **kwargs,\n    )\n\n    return _build_response(client=client, response=response)\n</code></pre>"},{"location":"api/portfolio/#kalshi_py.api.portfolio.get_orders.asyncio_detailed","title":"<code>kalshi_py.api.portfolio.get_orders.asyncio_detailed(*, client: Union[AuthenticatedClient, Client], ticker: Union[Unset, str] = UNSET, event_ticker: Union[Unset, str] = UNSET, min_ts: Union[Unset, int] = UNSET, max_ts: Union[Unset, int] = UNSET, status: Union[Unset, str] = UNSET, cursor: Union[Unset, str] = UNSET, limit: Union[Unset, int] = UNSET) -&gt; Response[GithubComKalshiExchangeInfraSvcApi2ModelGetOrdersResponse]</code>  <code>async</code>","text":"<p>Get Orders</p> <p>Endpoint for getting all orders for the member.</p> <p>Parameters:</p> Name Type Description Default <code>ticker</code> <code>Union[Unset, str]</code> <p>Restricts the response to orders in a single market.</p> <code>UNSET</code> <code>event_ticker</code> <code>Union[Unset, str]</code> <p>Restricts the response to orders in a single event.</p> <code>UNSET</code> <code>min_ts</code> <code>Union[Unset, int]</code> <p>Restricts the response to orders after a timestamp, formatted as a Unix Timestamp.</p> <code>UNSET</code> <code>max_ts</code> <code>Union[Unset, int]</code> <p>Restricts the response to orders before a timestamp, formatted as a Unix Timestamp.</p> <code>UNSET</code> <code>status</code> <code>Union[Unset, str]</code> <p>Restricts the response to orders that have a certain status: resting, canceled, or executed.</p> <code>UNSET</code> <code>cursor</code> <code>Union[Unset, str]</code> <p>The Cursor represents a pointer to the next page of records in the pagination. Use the value returned from the previous response to get the next page.</p> <code>UNSET</code> <code>limit</code> <code>Union[Unset, int]</code> <p>Parameter to specify the number of results per page. Defaults to 100.</p> <code>UNSET</code> <p>Raises:</p> Type Description <code>UnexpectedStatus</code> <p>If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.</p> <code>TimeoutException</code> <p>If the request takes longer than Client.timeout.</p> <p>Returns:</p> Type Description <code>Response[GithubComKalshiExchangeInfraSvcApi2ModelGetOrdersResponse]</code> <p>Response[GithubComKalshiExchangeInfraSvcApi2ModelGetOrdersResponse]</p> Source code in <code>kalshi_py/api/portfolio/get_orders.py</code> <pre><code>async def asyncio_detailed(\n    *,\n    client: Union[AuthenticatedClient, Client],\n    ticker: Union[Unset, str] = UNSET,\n    event_ticker: Union[Unset, str] = UNSET,\n    min_ts: Union[Unset, int] = UNSET,\n    max_ts: Union[Unset, int] = UNSET,\n    status: Union[Unset, str] = UNSET,\n    cursor: Union[Unset, str] = UNSET,\n    limit: Union[Unset, int] = UNSET,\n) -&gt; Response[GithubComKalshiExchangeInfraSvcApi2ModelGetOrdersResponse]:\n    \"\"\"Get Orders\n\n      Endpoint for getting all orders for the member.\n\n    Args:\n        ticker (Union[Unset, str]): Restricts the response to orders in a single market.\n        event_ticker (Union[Unset, str]): Restricts the response to orders in a single event.\n        min_ts (Union[Unset, int]): Restricts the response to orders after a timestamp, formatted\n            as a Unix Timestamp.\n        max_ts (Union[Unset, int]): Restricts the response to orders before a timestamp, formatted\n            as a Unix Timestamp.\n        status (Union[Unset, str]): Restricts the response to orders that have a certain status:\n            resting, canceled, or executed.\n        cursor (Union[Unset, str]): The Cursor represents a pointer to the next page of records in\n            the pagination. Use the value returned from the previous response to get the next page.\n        limit (Union[Unset, int]): Parameter to specify the number of results per page. Defaults\n            to 100.\n\n    Raises:\n        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.\n        httpx.TimeoutException: If the request takes longer than Client.timeout.\n\n    Returns:\n        Response[GithubComKalshiExchangeInfraSvcApi2ModelGetOrdersResponse]\n    \"\"\"\n\n    kwargs = _get_kwargs(\n        ticker=ticker,\n        event_ticker=event_ticker,\n        min_ts=min_ts,\n        max_ts=max_ts,\n        status=status,\n        cursor=cursor,\n        limit=limit,\n    )\n\n    response = await client.get_async_httpx_client().request(**kwargs)\n\n    return _build_response(client=client, response=response)\n</code></pre>"},{"location":"api/portfolio/#get-portfolio-resting-order-total-value","title":"Get Portfolio Resting Order Total Value","text":"<p>Synchronous API Call</p> <p>Asynchronous API Call</p> <p>Synchronous Detailed Response</p> <p>Asynchronous Detailed Response</p>"},{"location":"api/portfolio/#kalshi_py.api.portfolio.get_portfolio_resting_order_total_value.sync","title":"<code>kalshi_py.api.portfolio.get_portfolio_resting_order_total_value.sync(*, client: Union[AuthenticatedClient, Client]) -&gt; Optional[GithubComKalshiExchangeInfraSvcApi2ModelGetUserRestingOrderTotalValueResponse]</code>","text":"<p>Get Portfolio Resting Order Total Value</p> <p>Endpoint for getting the total value, in cents, of resting orders. This endpoint is only intended for use by FCM members (rare). Note: If you're uncertain about this endpoint, it likely does not apply to you.</p> <p>Raises:</p> Type Description <code>UnexpectedStatus</code> <p>If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.</p> <code>TimeoutException</code> <p>If the request takes longer than Client.timeout.</p> <p>Returns:</p> Type Description <code>Optional[GithubComKalshiExchangeInfraSvcApi2ModelGetUserRestingOrderTotalValueResponse]</code> <p>GithubComKalshiExchangeInfraSvcApi2ModelGetUserRestingOrderTotalValueResponse</p> Source code in <code>kalshi_py/api/portfolio/get_portfolio_resting_order_total_value.py</code> <pre><code>def sync(\n    *,\n    client: Union[AuthenticatedClient, Client],\n) -&gt; Optional[GithubComKalshiExchangeInfraSvcApi2ModelGetUserRestingOrderTotalValueResponse]:\n    \"\"\"Get Portfolio Resting Order Total Value\n\n      Endpoint for getting the total value, in cents, of resting orders. This endpoint is only intended\n    for use by FCM members (rare). Note: If you're uncertain about this endpoint, it likely does not\n    apply to you.\n\n    Raises:\n        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.\n        httpx.TimeoutException: If the request takes longer than Client.timeout.\n\n    Returns:\n        GithubComKalshiExchangeInfraSvcApi2ModelGetUserRestingOrderTotalValueResponse\n    \"\"\"\n\n    return sync_detailed(\n        client=client,\n    ).parsed\n</code></pre>"},{"location":"api/portfolio/#kalshi_py.api.portfolio.get_portfolio_resting_order_total_value.asyncio","title":"<code>kalshi_py.api.portfolio.get_portfolio_resting_order_total_value.asyncio(*, client: Union[AuthenticatedClient, Client]) -&gt; Optional[GithubComKalshiExchangeInfraSvcApi2ModelGetUserRestingOrderTotalValueResponse]</code>  <code>async</code>","text":"<p>Get Portfolio Resting Order Total Value</p> <p>Endpoint for getting the total value, in cents, of resting orders. This endpoint is only intended for use by FCM members (rare). Note: If you're uncertain about this endpoint, it likely does not apply to you.</p> <p>Raises:</p> Type Description <code>UnexpectedStatus</code> <p>If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.</p> <code>TimeoutException</code> <p>If the request takes longer than Client.timeout.</p> <p>Returns:</p> Type Description <code>Optional[GithubComKalshiExchangeInfraSvcApi2ModelGetUserRestingOrderTotalValueResponse]</code> <p>GithubComKalshiExchangeInfraSvcApi2ModelGetUserRestingOrderTotalValueResponse</p> Source code in <code>kalshi_py/api/portfolio/get_portfolio_resting_order_total_value.py</code> <pre><code>async def asyncio(\n    *,\n    client: Union[AuthenticatedClient, Client],\n) -&gt; Optional[GithubComKalshiExchangeInfraSvcApi2ModelGetUserRestingOrderTotalValueResponse]:\n    \"\"\"Get Portfolio Resting Order Total Value\n\n      Endpoint for getting the total value, in cents, of resting orders. This endpoint is only intended\n    for use by FCM members (rare). Note: If you're uncertain about this endpoint, it likely does not\n    apply to you.\n\n    Raises:\n        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.\n        httpx.TimeoutException: If the request takes longer than Client.timeout.\n\n    Returns:\n        GithubComKalshiExchangeInfraSvcApi2ModelGetUserRestingOrderTotalValueResponse\n    \"\"\"\n\n    return (\n        await asyncio_detailed(\n            client=client,\n        )\n    ).parsed\n</code></pre>"},{"location":"api/portfolio/#kalshi_py.api.portfolio.get_portfolio_resting_order_total_value.sync_detailed","title":"<code>kalshi_py.api.portfolio.get_portfolio_resting_order_total_value.sync_detailed(*, client: Union[AuthenticatedClient, Client]) -&gt; Response[GithubComKalshiExchangeInfraSvcApi2ModelGetUserRestingOrderTotalValueResponse]</code>","text":"<p>Get Portfolio Resting Order Total Value</p> <p>Endpoint for getting the total value, in cents, of resting orders. This endpoint is only intended for use by FCM members (rare). Note: If you're uncertain about this endpoint, it likely does not apply to you.</p> <p>Raises:</p> Type Description <code>UnexpectedStatus</code> <p>If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.</p> <code>TimeoutException</code> <p>If the request takes longer than Client.timeout.</p> <p>Returns:</p> Type Description <code>Response[GithubComKalshiExchangeInfraSvcApi2ModelGetUserRestingOrderTotalValueResponse]</code> <p>Response[GithubComKalshiExchangeInfraSvcApi2ModelGetUserRestingOrderTotalValueResponse]</p> Source code in <code>kalshi_py/api/portfolio/get_portfolio_resting_order_total_value.py</code> <pre><code>def sync_detailed(\n    *,\n    client: Union[AuthenticatedClient, Client],\n) -&gt; Response[GithubComKalshiExchangeInfraSvcApi2ModelGetUserRestingOrderTotalValueResponse]:\n    \"\"\"Get Portfolio Resting Order Total Value\n\n      Endpoint for getting the total value, in cents, of resting orders. This endpoint is only intended\n    for use by FCM members (rare). Note: If you're uncertain about this endpoint, it likely does not\n    apply to you.\n\n    Raises:\n        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.\n        httpx.TimeoutException: If the request takes longer than Client.timeout.\n\n    Returns:\n        Response[GithubComKalshiExchangeInfraSvcApi2ModelGetUserRestingOrderTotalValueResponse]\n    \"\"\"\n\n    kwargs = _get_kwargs()\n\n    response = client.get_httpx_client().request(\n        **kwargs,\n    )\n\n    return _build_response(client=client, response=response)\n</code></pre>"},{"location":"api/portfolio/#kalshi_py.api.portfolio.get_portfolio_resting_order_total_value.asyncio_detailed","title":"<code>kalshi_py.api.portfolio.get_portfolio_resting_order_total_value.asyncio_detailed(*, client: Union[AuthenticatedClient, Client]) -&gt; Response[GithubComKalshiExchangeInfraSvcApi2ModelGetUserRestingOrderTotalValueResponse]</code>  <code>async</code>","text":"<p>Get Portfolio Resting Order Total Value</p> <p>Endpoint for getting the total value, in cents, of resting orders. This endpoint is only intended for use by FCM members (rare). Note: If you're uncertain about this endpoint, it likely does not apply to you.</p> <p>Raises:</p> Type Description <code>UnexpectedStatus</code> <p>If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.</p> <code>TimeoutException</code> <p>If the request takes longer than Client.timeout.</p> <p>Returns:</p> Type Description <code>Response[GithubComKalshiExchangeInfraSvcApi2ModelGetUserRestingOrderTotalValueResponse]</code> <p>Response[GithubComKalshiExchangeInfraSvcApi2ModelGetUserRestingOrderTotalValueResponse]</p> Source code in <code>kalshi_py/api/portfolio/get_portfolio_resting_order_total_value.py</code> <pre><code>async def asyncio_detailed(\n    *,\n    client: Union[AuthenticatedClient, Client],\n) -&gt; Response[GithubComKalshiExchangeInfraSvcApi2ModelGetUserRestingOrderTotalValueResponse]:\n    \"\"\"Get Portfolio Resting Order Total Value\n\n      Endpoint for getting the total value, in cents, of resting orders. This endpoint is only intended\n    for use by FCM members (rare). Note: If you're uncertain about this endpoint, it likely does not\n    apply to you.\n\n    Raises:\n        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.\n        httpx.TimeoutException: If the request takes longer than Client.timeout.\n\n    Returns:\n        Response[GithubComKalshiExchangeInfraSvcApi2ModelGetUserRestingOrderTotalValueResponse]\n    \"\"\"\n\n    kwargs = _get_kwargs()\n\n    response = await client.get_async_httpx_client().request(**kwargs)\n\n    return _build_response(client=client, response=response)\n</code></pre>"},{"location":"api/portfolio/#get-positions","title":"Get Positions","text":"<p>Synchronous API Call</p> <p>Asynchronous API Call</p> <p>Synchronous Detailed Response</p> <p>Asynchronous Detailed Response</p>"},{"location":"api/portfolio/#kalshi_py.api.portfolio.get_positions.sync","title":"<code>kalshi_py.api.portfolio.get_positions.sync(*, client: Union[AuthenticatedClient, Client], cursor: Union[Unset, str] = UNSET, limit: Union[Unset, int] = UNSET, count_filter: Union[Unset, str] = UNSET, settlement_status: Union[Unset, str] = UNSET, ticker: Union[Unset, str] = UNSET, event_ticker: Union[Unset, str] = UNSET) -&gt; Optional[GithubComKalshiExchangeInfraSvcApi2ModelGetPositionsResponse]</code>","text":"<p>Get Positions</p> <p>Endpoint for getting all market positions for the member.</p> <p>Parameters:</p> Name Type Description Default <code>cursor</code> <code>Union[Unset, str]</code> <p>The Cursor represents a pointer to the next page of records in the pagination. Use the value returned from the previous response to get the next page.</p> <code>UNSET</code> <code>limit</code> <code>Union[Unset, int]</code> <p>Parameter to specify the number of results per page. Defaults to 100.</p> <code>UNSET</code> <code>count_filter</code> <code>Union[Unset, str]</code> <p>Restricts the positions to those with any of following fields with non-zero values, as a comma separated list. The following values are accepted: position, total_traded, resting_order_count</p> <code>UNSET</code> <code>settlement_status</code> <code>Union[Unset, str]</code> <p>Settlement status of the markets to return. Defaults to unsettled.</p> <code>UNSET</code> <code>ticker</code> <code>Union[Unset, str]</code> <p>Ticker of desired positions.</p> <code>UNSET</code> <code>event_ticker</code> <code>Union[Unset, str]</code> <p>Event ticker of desired positions.</p> <code>UNSET</code> <p>Raises:</p> Type Description <code>UnexpectedStatus</code> <p>If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.</p> <code>TimeoutException</code> <p>If the request takes longer than Client.timeout.</p> <p>Returns:</p> Type Description <code>Optional[GithubComKalshiExchangeInfraSvcApi2ModelGetPositionsResponse]</code> <p>GithubComKalshiExchangeInfraSvcApi2ModelGetPositionsResponse</p> Source code in <code>kalshi_py/api/portfolio/get_positions.py</code> <pre><code>def sync(\n    *,\n    client: Union[AuthenticatedClient, Client],\n    cursor: Union[Unset, str] = UNSET,\n    limit: Union[Unset, int] = UNSET,\n    count_filter: Union[Unset, str] = UNSET,\n    settlement_status: Union[Unset, str] = UNSET,\n    ticker: Union[Unset, str] = UNSET,\n    event_ticker: Union[Unset, str] = UNSET,\n) -&gt; Optional[GithubComKalshiExchangeInfraSvcApi2ModelGetPositionsResponse]:\n    \"\"\"Get Positions\n\n      Endpoint for getting all market positions for the member.\n\n    Args:\n        cursor (Union[Unset, str]): The Cursor represents a pointer to the next page of records in\n            the pagination. Use the value returned from the previous response to get the next page.\n        limit (Union[Unset, int]): Parameter to specify the number of results per page. Defaults\n            to 100.\n        count_filter (Union[Unset, str]): Restricts the positions to those with any of following\n            fields with non-zero values, as a comma separated list. The following values are accepted:\n            position, total_traded, resting_order_count\n        settlement_status (Union[Unset, str]): Settlement status of the markets to return.\n            Defaults to unsettled.\n        ticker (Union[Unset, str]): Ticker of desired positions.\n        event_ticker (Union[Unset, str]): Event ticker of desired positions.\n\n    Raises:\n        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.\n        httpx.TimeoutException: If the request takes longer than Client.timeout.\n\n    Returns:\n        GithubComKalshiExchangeInfraSvcApi2ModelGetPositionsResponse\n    \"\"\"\n\n    return sync_detailed(\n        client=client,\n        cursor=cursor,\n        limit=limit,\n        count_filter=count_filter,\n        settlement_status=settlement_status,\n        ticker=ticker,\n        event_ticker=event_ticker,\n    ).parsed\n</code></pre>"},{"location":"api/portfolio/#kalshi_py.api.portfolio.get_positions.asyncio","title":"<code>kalshi_py.api.portfolio.get_positions.asyncio(*, client: Union[AuthenticatedClient, Client], cursor: Union[Unset, str] = UNSET, limit: Union[Unset, int] = UNSET, count_filter: Union[Unset, str] = UNSET, settlement_status: Union[Unset, str] = UNSET, ticker: Union[Unset, str] = UNSET, event_ticker: Union[Unset, str] = UNSET) -&gt; Optional[GithubComKalshiExchangeInfraSvcApi2ModelGetPositionsResponse]</code>  <code>async</code>","text":"<p>Get Positions</p> <p>Endpoint for getting all market positions for the member.</p> <p>Parameters:</p> Name Type Description Default <code>cursor</code> <code>Union[Unset, str]</code> <p>The Cursor represents a pointer to the next page of records in the pagination. Use the value returned from the previous response to get the next page.</p> <code>UNSET</code> <code>limit</code> <code>Union[Unset, int]</code> <p>Parameter to specify the number of results per page. Defaults to 100.</p> <code>UNSET</code> <code>count_filter</code> <code>Union[Unset, str]</code> <p>Restricts the positions to those with any of following fields with non-zero values, as a comma separated list. The following values are accepted: position, total_traded, resting_order_count</p> <code>UNSET</code> <code>settlement_status</code> <code>Union[Unset, str]</code> <p>Settlement status of the markets to return. Defaults to unsettled.</p> <code>UNSET</code> <code>ticker</code> <code>Union[Unset, str]</code> <p>Ticker of desired positions.</p> <code>UNSET</code> <code>event_ticker</code> <code>Union[Unset, str]</code> <p>Event ticker of desired positions.</p> <code>UNSET</code> <p>Raises:</p> Type Description <code>UnexpectedStatus</code> <p>If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.</p> <code>TimeoutException</code> <p>If the request takes longer than Client.timeout.</p> <p>Returns:</p> Type Description <code>Optional[GithubComKalshiExchangeInfraSvcApi2ModelGetPositionsResponse]</code> <p>GithubComKalshiExchangeInfraSvcApi2ModelGetPositionsResponse</p> Source code in <code>kalshi_py/api/portfolio/get_positions.py</code> <pre><code>async def asyncio(\n    *,\n    client: Union[AuthenticatedClient, Client],\n    cursor: Union[Unset, str] = UNSET,\n    limit: Union[Unset, int] = UNSET,\n    count_filter: Union[Unset, str] = UNSET,\n    settlement_status: Union[Unset, str] = UNSET,\n    ticker: Union[Unset, str] = UNSET,\n    event_ticker: Union[Unset, str] = UNSET,\n) -&gt; Optional[GithubComKalshiExchangeInfraSvcApi2ModelGetPositionsResponse]:\n    \"\"\"Get Positions\n\n      Endpoint for getting all market positions for the member.\n\n    Args:\n        cursor (Union[Unset, str]): The Cursor represents a pointer to the next page of records in\n            the pagination. Use the value returned from the previous response to get the next page.\n        limit (Union[Unset, int]): Parameter to specify the number of results per page. Defaults\n            to 100.\n        count_filter (Union[Unset, str]): Restricts the positions to those with any of following\n            fields with non-zero values, as a comma separated list. The following values are accepted:\n            position, total_traded, resting_order_count\n        settlement_status (Union[Unset, str]): Settlement status of the markets to return.\n            Defaults to unsettled.\n        ticker (Union[Unset, str]): Ticker of desired positions.\n        event_ticker (Union[Unset, str]): Event ticker of desired positions.\n\n    Raises:\n        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.\n        httpx.TimeoutException: If the request takes longer than Client.timeout.\n\n    Returns:\n        GithubComKalshiExchangeInfraSvcApi2ModelGetPositionsResponse\n    \"\"\"\n\n    return (\n        await asyncio_detailed(\n            client=client,\n            cursor=cursor,\n            limit=limit,\n            count_filter=count_filter,\n            settlement_status=settlement_status,\n            ticker=ticker,\n            event_ticker=event_ticker,\n        )\n    ).parsed\n</code></pre>"},{"location":"api/portfolio/#kalshi_py.api.portfolio.get_positions.sync_detailed","title":"<code>kalshi_py.api.portfolio.get_positions.sync_detailed(*, client: Union[AuthenticatedClient, Client], cursor: Union[Unset, str] = UNSET, limit: Union[Unset, int] = UNSET, count_filter: Union[Unset, str] = UNSET, settlement_status: Union[Unset, str] = UNSET, ticker: Union[Unset, str] = UNSET, event_ticker: Union[Unset, str] = UNSET) -&gt; Response[GithubComKalshiExchangeInfraSvcApi2ModelGetPositionsResponse]</code>","text":"<p>Get Positions</p> <p>Endpoint for getting all market positions for the member.</p> <p>Parameters:</p> Name Type Description Default <code>cursor</code> <code>Union[Unset, str]</code> <p>The Cursor represents a pointer to the next page of records in the pagination. Use the value returned from the previous response to get the next page.</p> <code>UNSET</code> <code>limit</code> <code>Union[Unset, int]</code> <p>Parameter to specify the number of results per page. Defaults to 100.</p> <code>UNSET</code> <code>count_filter</code> <code>Union[Unset, str]</code> <p>Restricts the positions to those with any of following fields with non-zero values, as a comma separated list. The following values are accepted: position, total_traded, resting_order_count</p> <code>UNSET</code> <code>settlement_status</code> <code>Union[Unset, str]</code> <p>Settlement status of the markets to return. Defaults to unsettled.</p> <code>UNSET</code> <code>ticker</code> <code>Union[Unset, str]</code> <p>Ticker of desired positions.</p> <code>UNSET</code> <code>event_ticker</code> <code>Union[Unset, str]</code> <p>Event ticker of desired positions.</p> <code>UNSET</code> <p>Raises:</p> Type Description <code>UnexpectedStatus</code> <p>If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.</p> <code>TimeoutException</code> <p>If the request takes longer than Client.timeout.</p> <p>Returns:</p> Type Description <code>Response[GithubComKalshiExchangeInfraSvcApi2ModelGetPositionsResponse]</code> <p>Response[GithubComKalshiExchangeInfraSvcApi2ModelGetPositionsResponse]</p> Source code in <code>kalshi_py/api/portfolio/get_positions.py</code> <pre><code>def sync_detailed(\n    *,\n    client: Union[AuthenticatedClient, Client],\n    cursor: Union[Unset, str] = UNSET,\n    limit: Union[Unset, int] = UNSET,\n    count_filter: Union[Unset, str] = UNSET,\n    settlement_status: Union[Unset, str] = UNSET,\n    ticker: Union[Unset, str] = UNSET,\n    event_ticker: Union[Unset, str] = UNSET,\n) -&gt; Response[GithubComKalshiExchangeInfraSvcApi2ModelGetPositionsResponse]:\n    \"\"\"Get Positions\n\n      Endpoint for getting all market positions for the member.\n\n    Args:\n        cursor (Union[Unset, str]): The Cursor represents a pointer to the next page of records in\n            the pagination. Use the value returned from the previous response to get the next page.\n        limit (Union[Unset, int]): Parameter to specify the number of results per page. Defaults\n            to 100.\n        count_filter (Union[Unset, str]): Restricts the positions to those with any of following\n            fields with non-zero values, as a comma separated list. The following values are accepted:\n            position, total_traded, resting_order_count\n        settlement_status (Union[Unset, str]): Settlement status of the markets to return.\n            Defaults to unsettled.\n        ticker (Union[Unset, str]): Ticker of desired positions.\n        event_ticker (Union[Unset, str]): Event ticker of desired positions.\n\n    Raises:\n        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.\n        httpx.TimeoutException: If the request takes longer than Client.timeout.\n\n    Returns:\n        Response[GithubComKalshiExchangeInfraSvcApi2ModelGetPositionsResponse]\n    \"\"\"\n\n    kwargs = _get_kwargs(\n        cursor=cursor,\n        limit=limit,\n        count_filter=count_filter,\n        settlement_status=settlement_status,\n        ticker=ticker,\n        event_ticker=event_ticker,\n    )\n\n    response = client.get_httpx_client().request(\n        **kwargs,\n    )\n\n    return _build_response(client=client, response=response)\n</code></pre>"},{"location":"api/portfolio/#kalshi_py.api.portfolio.get_positions.asyncio_detailed","title":"<code>kalshi_py.api.portfolio.get_positions.asyncio_detailed(*, client: Union[AuthenticatedClient, Client], cursor: Union[Unset, str] = UNSET, limit: Union[Unset, int] = UNSET, count_filter: Union[Unset, str] = UNSET, settlement_status: Union[Unset, str] = UNSET, ticker: Union[Unset, str] = UNSET, event_ticker: Union[Unset, str] = UNSET) -&gt; Response[GithubComKalshiExchangeInfraSvcApi2ModelGetPositionsResponse]</code>  <code>async</code>","text":"<p>Get Positions</p> <p>Endpoint for getting all market positions for the member.</p> <p>Parameters:</p> Name Type Description Default <code>cursor</code> <code>Union[Unset, str]</code> <p>The Cursor represents a pointer to the next page of records in the pagination. Use the value returned from the previous response to get the next page.</p> <code>UNSET</code> <code>limit</code> <code>Union[Unset, int]</code> <p>Parameter to specify the number of results per page. Defaults to 100.</p> <code>UNSET</code> <code>count_filter</code> <code>Union[Unset, str]</code> <p>Restricts the positions to those with any of following fields with non-zero values, as a comma separated list. The following values are accepted: position, total_traded, resting_order_count</p> <code>UNSET</code> <code>settlement_status</code> <code>Union[Unset, str]</code> <p>Settlement status of the markets to return. Defaults to unsettled.</p> <code>UNSET</code> <code>ticker</code> <code>Union[Unset, str]</code> <p>Ticker of desired positions.</p> <code>UNSET</code> <code>event_ticker</code> <code>Union[Unset, str]</code> <p>Event ticker of desired positions.</p> <code>UNSET</code> <p>Raises:</p> Type Description <code>UnexpectedStatus</code> <p>If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.</p> <code>TimeoutException</code> <p>If the request takes longer than Client.timeout.</p> <p>Returns:</p> Type Description <code>Response[GithubComKalshiExchangeInfraSvcApi2ModelGetPositionsResponse]</code> <p>Response[GithubComKalshiExchangeInfraSvcApi2ModelGetPositionsResponse]</p> Source code in <code>kalshi_py/api/portfolio/get_positions.py</code> <pre><code>async def asyncio_detailed(\n    *,\n    client: Union[AuthenticatedClient, Client],\n    cursor: Union[Unset, str] = UNSET,\n    limit: Union[Unset, int] = UNSET,\n    count_filter: Union[Unset, str] = UNSET,\n    settlement_status: Union[Unset, str] = UNSET,\n    ticker: Union[Unset, str] = UNSET,\n    event_ticker: Union[Unset, str] = UNSET,\n) -&gt; Response[GithubComKalshiExchangeInfraSvcApi2ModelGetPositionsResponse]:\n    \"\"\"Get Positions\n\n      Endpoint for getting all market positions for the member.\n\n    Args:\n        cursor (Union[Unset, str]): The Cursor represents a pointer to the next page of records in\n            the pagination. Use the value returned from the previous response to get the next page.\n        limit (Union[Unset, int]): Parameter to specify the number of results per page. Defaults\n            to 100.\n        count_filter (Union[Unset, str]): Restricts the positions to those with any of following\n            fields with non-zero values, as a comma separated list. The following values are accepted:\n            position, total_traded, resting_order_count\n        settlement_status (Union[Unset, str]): Settlement status of the markets to return.\n            Defaults to unsettled.\n        ticker (Union[Unset, str]): Ticker of desired positions.\n        event_ticker (Union[Unset, str]): Event ticker of desired positions.\n\n    Raises:\n        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.\n        httpx.TimeoutException: If the request takes longer than Client.timeout.\n\n    Returns:\n        Response[GithubComKalshiExchangeInfraSvcApi2ModelGetPositionsResponse]\n    \"\"\"\n\n    kwargs = _get_kwargs(\n        cursor=cursor,\n        limit=limit,\n        count_filter=count_filter,\n        settlement_status=settlement_status,\n        ticker=ticker,\n        event_ticker=event_ticker,\n    )\n\n    response = await client.get_async_httpx_client().request(**kwargs)\n\n    return _build_response(client=client, response=response)\n</code></pre>"},{"location":"api/portfolio/#get-settlements","title":"Get Settlements","text":"<p>Synchronous API Call</p> <p>Asynchronous API Call</p> <p>Synchronous Detailed Response</p> <p>Asynchronous Detailed Response</p>"},{"location":"api/portfolio/#kalshi_py.api.portfolio.get_settlements.sync","title":"<code>kalshi_py.api.portfolio.get_settlements.sync(*, client: Union[AuthenticatedClient, Client], limit: Union[Unset, int] = UNSET, ticker: Union[Unset, str] = UNSET, event_ticker: Union[Unset, str] = UNSET, min_ts: Union[Unset, int] = UNSET, max_ts: Union[Unset, int] = UNSET, cursor: Union[Unset, str] = UNSET) -&gt; Optional[GithubComKalshiExchangeInfraSvcApi2ModelGetSettlementsResponse]</code>","text":"<p>Get Settlements</p> <p>Endpoint for getting the member's settlements historical track.</p> <p>Parameters:</p> Name Type Description Default <code>limit</code> <code>Union[Unset, int]</code> <p>Parameter to specify the number of results per page. Defaults to 100.</p> <code>UNSET</code> <code>ticker</code> <code>Union[Unset, str]</code> <p>Restricts the response to settlements in a specific market.</p> <code>UNSET</code> <code>event_ticker</code> <code>Union[Unset, str]</code> <p>Restricts the response to settlements in a single event.</p> <code>UNSET</code> <code>min_ts</code> <code>Union[Unset, int]</code> <p>Restricts the response to settlements after a timestamp.</p> <code>UNSET</code> <code>max_ts</code> <code>Union[Unset, int]</code> <p>Restricts the response to settlements before a timestamp.</p> <code>UNSET</code> <code>cursor</code> <code>Union[Unset, str]</code> <p>The Cursor represents a pointer to the next page of records in the pagination. Use the value returned from the previous response to get the next page.</p> <code>UNSET</code> <p>Raises:</p> Type Description <code>UnexpectedStatus</code> <p>If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.</p> <code>TimeoutException</code> <p>If the request takes longer than Client.timeout.</p> <p>Returns:</p> Type Description <code>Optional[GithubComKalshiExchangeInfraSvcApi2ModelGetSettlementsResponse]</code> <p>GithubComKalshiExchangeInfraSvcApi2ModelGetSettlementsResponse</p> Source code in <code>kalshi_py/api/portfolio/get_settlements.py</code> <pre><code>def sync(\n    *,\n    client: Union[AuthenticatedClient, Client],\n    limit: Union[Unset, int] = UNSET,\n    ticker: Union[Unset, str] = UNSET,\n    event_ticker: Union[Unset, str] = UNSET,\n    min_ts: Union[Unset, int] = UNSET,\n    max_ts: Union[Unset, int] = UNSET,\n    cursor: Union[Unset, str] = UNSET,\n) -&gt; Optional[GithubComKalshiExchangeInfraSvcApi2ModelGetSettlementsResponse]:\n    \"\"\"Get Settlements\n\n      Endpoint for getting the member's settlements historical track.\n\n    Args:\n        limit (Union[Unset, int]): Parameter to specify the number of results per page. Defaults\n            to 100.\n        ticker (Union[Unset, str]): Restricts the response to settlements in a specific market.\n        event_ticker (Union[Unset, str]): Restricts the response to settlements in a single event.\n        min_ts (Union[Unset, int]): Restricts the response to settlements after a timestamp.\n        max_ts (Union[Unset, int]): Restricts the response to settlements before a timestamp.\n        cursor (Union[Unset, str]): The Cursor represents a pointer to the next page of records in\n            the pagination. Use the value returned from the previous response to get the next page.\n\n    Raises:\n        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.\n        httpx.TimeoutException: If the request takes longer than Client.timeout.\n\n    Returns:\n        GithubComKalshiExchangeInfraSvcApi2ModelGetSettlementsResponse\n    \"\"\"\n\n    return sync_detailed(\n        client=client,\n        limit=limit,\n        ticker=ticker,\n        event_ticker=event_ticker,\n        min_ts=min_ts,\n        max_ts=max_ts,\n        cursor=cursor,\n    ).parsed\n</code></pre>"},{"location":"api/portfolio/#kalshi_py.api.portfolio.get_settlements.asyncio","title":"<code>kalshi_py.api.portfolio.get_settlements.asyncio(*, client: Union[AuthenticatedClient, Client], limit: Union[Unset, int] = UNSET, ticker: Union[Unset, str] = UNSET, event_ticker: Union[Unset, str] = UNSET, min_ts: Union[Unset, int] = UNSET, max_ts: Union[Unset, int] = UNSET, cursor: Union[Unset, str] = UNSET) -&gt; Optional[GithubComKalshiExchangeInfraSvcApi2ModelGetSettlementsResponse]</code>  <code>async</code>","text":"<p>Get Settlements</p> <p>Endpoint for getting the member's settlements historical track.</p> <p>Parameters:</p> Name Type Description Default <code>limit</code> <code>Union[Unset, int]</code> <p>Parameter to specify the number of results per page. Defaults to 100.</p> <code>UNSET</code> <code>ticker</code> <code>Union[Unset, str]</code> <p>Restricts the response to settlements in a specific market.</p> <code>UNSET</code> <code>event_ticker</code> <code>Union[Unset, str]</code> <p>Restricts the response to settlements in a single event.</p> <code>UNSET</code> <code>min_ts</code> <code>Union[Unset, int]</code> <p>Restricts the response to settlements after a timestamp.</p> <code>UNSET</code> <code>max_ts</code> <code>Union[Unset, int]</code> <p>Restricts the response to settlements before a timestamp.</p> <code>UNSET</code> <code>cursor</code> <code>Union[Unset, str]</code> <p>The Cursor represents a pointer to the next page of records in the pagination. Use the value returned from the previous response to get the next page.</p> <code>UNSET</code> <p>Raises:</p> Type Description <code>UnexpectedStatus</code> <p>If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.</p> <code>TimeoutException</code> <p>If the request takes longer than Client.timeout.</p> <p>Returns:</p> Type Description <code>Optional[GithubComKalshiExchangeInfraSvcApi2ModelGetSettlementsResponse]</code> <p>GithubComKalshiExchangeInfraSvcApi2ModelGetSettlementsResponse</p> Source code in <code>kalshi_py/api/portfolio/get_settlements.py</code> <pre><code>async def asyncio(\n    *,\n    client: Union[AuthenticatedClient, Client],\n    limit: Union[Unset, int] = UNSET,\n    ticker: Union[Unset, str] = UNSET,\n    event_ticker: Union[Unset, str] = UNSET,\n    min_ts: Union[Unset, int] = UNSET,\n    max_ts: Union[Unset, int] = UNSET,\n    cursor: Union[Unset, str] = UNSET,\n) -&gt; Optional[GithubComKalshiExchangeInfraSvcApi2ModelGetSettlementsResponse]:\n    \"\"\"Get Settlements\n\n      Endpoint for getting the member's settlements historical track.\n\n    Args:\n        limit (Union[Unset, int]): Parameter to specify the number of results per page. Defaults\n            to 100.\n        ticker (Union[Unset, str]): Restricts the response to settlements in a specific market.\n        event_ticker (Union[Unset, str]): Restricts the response to settlements in a single event.\n        min_ts (Union[Unset, int]): Restricts the response to settlements after a timestamp.\n        max_ts (Union[Unset, int]): Restricts the response to settlements before a timestamp.\n        cursor (Union[Unset, str]): The Cursor represents a pointer to the next page of records in\n            the pagination. Use the value returned from the previous response to get the next page.\n\n    Raises:\n        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.\n        httpx.TimeoutException: If the request takes longer than Client.timeout.\n\n    Returns:\n        GithubComKalshiExchangeInfraSvcApi2ModelGetSettlementsResponse\n    \"\"\"\n\n    return (\n        await asyncio_detailed(\n            client=client,\n            limit=limit,\n            ticker=ticker,\n            event_ticker=event_ticker,\n            min_ts=min_ts,\n            max_ts=max_ts,\n            cursor=cursor,\n        )\n    ).parsed\n</code></pre>"},{"location":"api/portfolio/#kalshi_py.api.portfolio.get_settlements.sync_detailed","title":"<code>kalshi_py.api.portfolio.get_settlements.sync_detailed(*, client: Union[AuthenticatedClient, Client], limit: Union[Unset, int] = UNSET, ticker: Union[Unset, str] = UNSET, event_ticker: Union[Unset, str] = UNSET, min_ts: Union[Unset, int] = UNSET, max_ts: Union[Unset, int] = UNSET, cursor: Union[Unset, str] = UNSET) -&gt; Response[GithubComKalshiExchangeInfraSvcApi2ModelGetSettlementsResponse]</code>","text":"<p>Get Settlements</p> <p>Endpoint for getting the member's settlements historical track.</p> <p>Parameters:</p> Name Type Description Default <code>limit</code> <code>Union[Unset, int]</code> <p>Parameter to specify the number of results per page. Defaults to 100.</p> <code>UNSET</code> <code>ticker</code> <code>Union[Unset, str]</code> <p>Restricts the response to settlements in a specific market.</p> <code>UNSET</code> <code>event_ticker</code> <code>Union[Unset, str]</code> <p>Restricts the response to settlements in a single event.</p> <code>UNSET</code> <code>min_ts</code> <code>Union[Unset, int]</code> <p>Restricts the response to settlements after a timestamp.</p> <code>UNSET</code> <code>max_ts</code> <code>Union[Unset, int]</code> <p>Restricts the response to settlements before a timestamp.</p> <code>UNSET</code> <code>cursor</code> <code>Union[Unset, str]</code> <p>The Cursor represents a pointer to the next page of records in the pagination. Use the value returned from the previous response to get the next page.</p> <code>UNSET</code> <p>Raises:</p> Type Description <code>UnexpectedStatus</code> <p>If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.</p> <code>TimeoutException</code> <p>If the request takes longer than Client.timeout.</p> <p>Returns:</p> Type Description <code>Response[GithubComKalshiExchangeInfraSvcApi2ModelGetSettlementsResponse]</code> <p>Response[GithubComKalshiExchangeInfraSvcApi2ModelGetSettlementsResponse]</p> Source code in <code>kalshi_py/api/portfolio/get_settlements.py</code> <pre><code>def sync_detailed(\n    *,\n    client: Union[AuthenticatedClient, Client],\n    limit: Union[Unset, int] = UNSET,\n    ticker: Union[Unset, str] = UNSET,\n    event_ticker: Union[Unset, str] = UNSET,\n    min_ts: Union[Unset, int] = UNSET,\n    max_ts: Union[Unset, int] = UNSET,\n    cursor: Union[Unset, str] = UNSET,\n) -&gt; Response[GithubComKalshiExchangeInfraSvcApi2ModelGetSettlementsResponse]:\n    \"\"\"Get Settlements\n\n      Endpoint for getting the member's settlements historical track.\n\n    Args:\n        limit (Union[Unset, int]): Parameter to specify the number of results per page. Defaults\n            to 100.\n        ticker (Union[Unset, str]): Restricts the response to settlements in a specific market.\n        event_ticker (Union[Unset, str]): Restricts the response to settlements in a single event.\n        min_ts (Union[Unset, int]): Restricts the response to settlements after a timestamp.\n        max_ts (Union[Unset, int]): Restricts the response to settlements before a timestamp.\n        cursor (Union[Unset, str]): The Cursor represents a pointer to the next page of records in\n            the pagination. Use the value returned from the previous response to get the next page.\n\n    Raises:\n        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.\n        httpx.TimeoutException: If the request takes longer than Client.timeout.\n\n    Returns:\n        Response[GithubComKalshiExchangeInfraSvcApi2ModelGetSettlementsResponse]\n    \"\"\"\n\n    kwargs = _get_kwargs(\n        limit=limit,\n        ticker=ticker,\n        event_ticker=event_ticker,\n        min_ts=min_ts,\n        max_ts=max_ts,\n        cursor=cursor,\n    )\n\n    response = client.get_httpx_client().request(\n        **kwargs,\n    )\n\n    return _build_response(client=client, response=response)\n</code></pre>"},{"location":"api/portfolio/#kalshi_py.api.portfolio.get_settlements.asyncio_detailed","title":"<code>kalshi_py.api.portfolio.get_settlements.asyncio_detailed(*, client: Union[AuthenticatedClient, Client], limit: Union[Unset, int] = UNSET, ticker: Union[Unset, str] = UNSET, event_ticker: Union[Unset, str] = UNSET, min_ts: Union[Unset, int] = UNSET, max_ts: Union[Unset, int] = UNSET, cursor: Union[Unset, str] = UNSET) -&gt; Response[GithubComKalshiExchangeInfraSvcApi2ModelGetSettlementsResponse]</code>  <code>async</code>","text":"<p>Get Settlements</p> <p>Endpoint for getting the member's settlements historical track.</p> <p>Parameters:</p> Name Type Description Default <code>limit</code> <code>Union[Unset, int]</code> <p>Parameter to specify the number of results per page. Defaults to 100.</p> <code>UNSET</code> <code>ticker</code> <code>Union[Unset, str]</code> <p>Restricts the response to settlements in a specific market.</p> <code>UNSET</code> <code>event_ticker</code> <code>Union[Unset, str]</code> <p>Restricts the response to settlements in a single event.</p> <code>UNSET</code> <code>min_ts</code> <code>Union[Unset, int]</code> <p>Restricts the response to settlements after a timestamp.</p> <code>UNSET</code> <code>max_ts</code> <code>Union[Unset, int]</code> <p>Restricts the response to settlements before a timestamp.</p> <code>UNSET</code> <code>cursor</code> <code>Union[Unset, str]</code> <p>The Cursor represents a pointer to the next page of records in the pagination. Use the value returned from the previous response to get the next page.</p> <code>UNSET</code> <p>Raises:</p> Type Description <code>UnexpectedStatus</code> <p>If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.</p> <code>TimeoutException</code> <p>If the request takes longer than Client.timeout.</p> <p>Returns:</p> Type Description <code>Response[GithubComKalshiExchangeInfraSvcApi2ModelGetSettlementsResponse]</code> <p>Response[GithubComKalshiExchangeInfraSvcApi2ModelGetSettlementsResponse]</p> Source code in <code>kalshi_py/api/portfolio/get_settlements.py</code> <pre><code>async def asyncio_detailed(\n    *,\n    client: Union[AuthenticatedClient, Client],\n    limit: Union[Unset, int] = UNSET,\n    ticker: Union[Unset, str] = UNSET,\n    event_ticker: Union[Unset, str] = UNSET,\n    min_ts: Union[Unset, int] = UNSET,\n    max_ts: Union[Unset, int] = UNSET,\n    cursor: Union[Unset, str] = UNSET,\n) -&gt; Response[GithubComKalshiExchangeInfraSvcApi2ModelGetSettlementsResponse]:\n    \"\"\"Get Settlements\n\n      Endpoint for getting the member's settlements historical track.\n\n    Args:\n        limit (Union[Unset, int]): Parameter to specify the number of results per page. Defaults\n            to 100.\n        ticker (Union[Unset, str]): Restricts the response to settlements in a specific market.\n        event_ticker (Union[Unset, str]): Restricts the response to settlements in a single event.\n        min_ts (Union[Unset, int]): Restricts the response to settlements after a timestamp.\n        max_ts (Union[Unset, int]): Restricts the response to settlements before a timestamp.\n        cursor (Union[Unset, str]): The Cursor represents a pointer to the next page of records in\n            the pagination. Use the value returned from the previous response to get the next page.\n\n    Raises:\n        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.\n        httpx.TimeoutException: If the request takes longer than Client.timeout.\n\n    Returns:\n        Response[GithubComKalshiExchangeInfraSvcApi2ModelGetSettlementsResponse]\n    \"\"\"\n\n    kwargs = _get_kwargs(\n        limit=limit,\n        ticker=ticker,\n        event_ticker=event_ticker,\n        min_ts=min_ts,\n        max_ts=max_ts,\n        cursor=cursor,\n    )\n\n    response = await client.get_async_httpx_client().request(**kwargs)\n\n    return _build_response(client=client, response=response)\n</code></pre>"},{"location":"api/portfolio/#reset-order-group","title":"Reset Order Group","text":"<p>Synchronous API Call</p> <p>Asynchronous API Call</p> <p>Synchronous Detailed Response</p> <p>Asynchronous Detailed Response</p>"},{"location":"api/portfolio/#kalshi_py.api.portfolio.reset_order_group.sync","title":"<code>kalshi_py.api.portfolio.reset_order_group.sync(order_group_id: str, *, client: Union[AuthenticatedClient, Client]) -&gt; Optional[GithubComKalshiExchangeInfraSvcApi2ModelEmptyResponse]</code>","text":"<p>Reset Order Group</p> <p>Resets the order group's matched contracts counter to zero, allowing new orders to be placed again after the limit was hit.</p> <p>Parameters:</p> Name Type Description Default <code>order_group_id</code> <code>str</code> <p>Order group ID</p> required <p>Raises:</p> Type Description <code>UnexpectedStatus</code> <p>If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.</p> <code>TimeoutException</code> <p>If the request takes longer than Client.timeout.</p> <p>Returns:</p> Type Description <code>Optional[GithubComKalshiExchangeInfraSvcApi2ModelEmptyResponse]</code> <p>GithubComKalshiExchangeInfraSvcApi2ModelEmptyResponse</p> Source code in <code>kalshi_py/api/portfolio/reset_order_group.py</code> <pre><code>def sync(\n    order_group_id: str,\n    *,\n    client: Union[AuthenticatedClient, Client],\n) -&gt; Optional[GithubComKalshiExchangeInfraSvcApi2ModelEmptyResponse]:\n    \"\"\"Reset Order Group\n\n      Resets the order group's matched contracts counter to zero, allowing new orders to be placed again\n    after the limit was hit.\n\n    Args:\n        order_group_id (str): Order group ID\n\n    Raises:\n        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.\n        httpx.TimeoutException: If the request takes longer than Client.timeout.\n\n    Returns:\n        GithubComKalshiExchangeInfraSvcApi2ModelEmptyResponse\n    \"\"\"\n\n    return sync_detailed(\n        order_group_id=order_group_id,\n        client=client,\n    ).parsed\n</code></pre>"},{"location":"api/portfolio/#kalshi_py.api.portfolio.reset_order_group.asyncio","title":"<code>kalshi_py.api.portfolio.reset_order_group.asyncio(order_group_id: str, *, client: Union[AuthenticatedClient, Client]) -&gt; Optional[GithubComKalshiExchangeInfraSvcApi2ModelEmptyResponse]</code>  <code>async</code>","text":"<p>Reset Order Group</p> <p>Resets the order group's matched contracts counter to zero, allowing new orders to be placed again after the limit was hit.</p> <p>Parameters:</p> Name Type Description Default <code>order_group_id</code> <code>str</code> <p>Order group ID</p> required <p>Raises:</p> Type Description <code>UnexpectedStatus</code> <p>If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.</p> <code>TimeoutException</code> <p>If the request takes longer than Client.timeout.</p> <p>Returns:</p> Type Description <code>Optional[GithubComKalshiExchangeInfraSvcApi2ModelEmptyResponse]</code> <p>GithubComKalshiExchangeInfraSvcApi2ModelEmptyResponse</p> Source code in <code>kalshi_py/api/portfolio/reset_order_group.py</code> <pre><code>async def asyncio(\n    order_group_id: str,\n    *,\n    client: Union[AuthenticatedClient, Client],\n) -&gt; Optional[GithubComKalshiExchangeInfraSvcApi2ModelEmptyResponse]:\n    \"\"\"Reset Order Group\n\n      Resets the order group's matched contracts counter to zero, allowing new orders to be placed again\n    after the limit was hit.\n\n    Args:\n        order_group_id (str): Order group ID\n\n    Raises:\n        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.\n        httpx.TimeoutException: If the request takes longer than Client.timeout.\n\n    Returns:\n        GithubComKalshiExchangeInfraSvcApi2ModelEmptyResponse\n    \"\"\"\n\n    return (\n        await asyncio_detailed(\n            order_group_id=order_group_id,\n            client=client,\n        )\n    ).parsed\n</code></pre>"},{"location":"api/portfolio/#kalshi_py.api.portfolio.reset_order_group.sync_detailed","title":"<code>kalshi_py.api.portfolio.reset_order_group.sync_detailed(order_group_id: str, *, client: Union[AuthenticatedClient, Client]) -&gt; Response[GithubComKalshiExchangeInfraSvcApi2ModelEmptyResponse]</code>","text":"<p>Reset Order Group</p> <p>Resets the order group's matched contracts counter to zero, allowing new orders to be placed again after the limit was hit.</p> <p>Parameters:</p> Name Type Description Default <code>order_group_id</code> <code>str</code> <p>Order group ID</p> required <p>Raises:</p> Type Description <code>UnexpectedStatus</code> <p>If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.</p> <code>TimeoutException</code> <p>If the request takes longer than Client.timeout.</p> <p>Returns:</p> Type Description <code>Response[GithubComKalshiExchangeInfraSvcApi2ModelEmptyResponse]</code> <p>Response[GithubComKalshiExchangeInfraSvcApi2ModelEmptyResponse]</p> Source code in <code>kalshi_py/api/portfolio/reset_order_group.py</code> <pre><code>def sync_detailed(\n    order_group_id: str,\n    *,\n    client: Union[AuthenticatedClient, Client],\n) -&gt; Response[GithubComKalshiExchangeInfraSvcApi2ModelEmptyResponse]:\n    \"\"\"Reset Order Group\n\n      Resets the order group's matched contracts counter to zero, allowing new orders to be placed again\n    after the limit was hit.\n\n    Args:\n        order_group_id (str): Order group ID\n\n    Raises:\n        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.\n        httpx.TimeoutException: If the request takes longer than Client.timeout.\n\n    Returns:\n        Response[GithubComKalshiExchangeInfraSvcApi2ModelEmptyResponse]\n    \"\"\"\n\n    kwargs = _get_kwargs(\n        order_group_id=order_group_id,\n    )\n\n    response = client.get_httpx_client().request(\n        **kwargs,\n    )\n\n    return _build_response(client=client, response=response)\n</code></pre>"},{"location":"api/portfolio/#kalshi_py.api.portfolio.reset_order_group.asyncio_detailed","title":"<code>kalshi_py.api.portfolio.reset_order_group.asyncio_detailed(order_group_id: str, *, client: Union[AuthenticatedClient, Client]) -&gt; Response[GithubComKalshiExchangeInfraSvcApi2ModelEmptyResponse]</code>  <code>async</code>","text":"<p>Reset Order Group</p> <p>Resets the order group's matched contracts counter to zero, allowing new orders to be placed again after the limit was hit.</p> <p>Parameters:</p> Name Type Description Default <code>order_group_id</code> <code>str</code> <p>Order group ID</p> required <p>Raises:</p> Type Description <code>UnexpectedStatus</code> <p>If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.</p> <code>TimeoutException</code> <p>If the request takes longer than Client.timeout.</p> <p>Returns:</p> Type Description <code>Response[GithubComKalshiExchangeInfraSvcApi2ModelEmptyResponse]</code> <p>Response[GithubComKalshiExchangeInfraSvcApi2ModelEmptyResponse]</p> Source code in <code>kalshi_py/api/portfolio/reset_order_group.py</code> <pre><code>async def asyncio_detailed(\n    order_group_id: str,\n    *,\n    client: Union[AuthenticatedClient, Client],\n) -&gt; Response[GithubComKalshiExchangeInfraSvcApi2ModelEmptyResponse]:\n    \"\"\"Reset Order Group\n\n      Resets the order group's matched contracts counter to zero, allowing new orders to be placed again\n    after the limit was hit.\n\n    Args:\n        order_group_id (str): Order group ID\n\n    Raises:\n        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.\n        httpx.TimeoutException: If the request takes longer than Client.timeout.\n\n    Returns:\n        Response[GithubComKalshiExchangeInfraSvcApi2ModelEmptyResponse]\n    \"\"\"\n\n    kwargs = _get_kwargs(\n        order_group_id=order_group_id,\n    )\n\n    response = await client.get_async_httpx_client().request(**kwargs)\n\n    return _build_response(client=client, response=response)\n</code></pre>"},{"location":"api/structured_target/","title":"Structured_Target API Reference","text":""},{"location":"api/structured_target/#endpoints","title":"Endpoints","text":""},{"location":"api/structured_target/#get-structured-target","title":"Get Structured Target","text":"<p>Synchronous API Call</p> <p>Asynchronous API Call</p> <p>Synchronous Detailed Response</p> <p>Asynchronous Detailed Response</p>"},{"location":"api/structured_target/#kalshi_py.api.structured_target.get_structured_target.sync","title":"<code>kalshi_py.api.structured_target.get_structured_target.sync(structured_target_id: str, *, client: Union[AuthenticatedClient, Client]) -&gt; Optional[GithubComKalshiExchangeInfraSvcApi2ModelGetStructuredTargetResponse]</code>","text":"<p>Get Structured Target</p> <p>Endpoint for getting data about a specific structured target by its ID.</p> <p>Parameters:</p> Name Type Description Default <code>structured_target_id</code> <code>str</code> <p>Structured Target ID</p> required <p>Raises:</p> Type Description <code>UnexpectedStatus</code> <p>If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.</p> <code>TimeoutException</code> <p>If the request takes longer than Client.timeout.</p> <p>Returns:</p> Type Description <code>Optional[GithubComKalshiExchangeInfraSvcApi2ModelGetStructuredTargetResponse]</code> <p>GithubComKalshiExchangeInfraSvcApi2ModelGetStructuredTargetResponse</p> Source code in <code>kalshi_py/api/structured_target/get_structured_target.py</code> <pre><code>def sync(\n    structured_target_id: str,\n    *,\n    client: Union[AuthenticatedClient, Client],\n) -&gt; Optional[GithubComKalshiExchangeInfraSvcApi2ModelGetStructuredTargetResponse]:\n    \"\"\"Get Structured Target\n\n      Endpoint for getting data about a specific structured target by its ID.\n\n    Args:\n        structured_target_id (str): Structured Target ID\n\n    Raises:\n        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.\n        httpx.TimeoutException: If the request takes longer than Client.timeout.\n\n    Returns:\n        GithubComKalshiExchangeInfraSvcApi2ModelGetStructuredTargetResponse\n    \"\"\"\n\n    return sync_detailed(\n        structured_target_id=structured_target_id,\n        client=client,\n    ).parsed\n</code></pre>"},{"location":"api/structured_target/#kalshi_py.api.structured_target.get_structured_target.asyncio","title":"<code>kalshi_py.api.structured_target.get_structured_target.asyncio(structured_target_id: str, *, client: Union[AuthenticatedClient, Client]) -&gt; Optional[GithubComKalshiExchangeInfraSvcApi2ModelGetStructuredTargetResponse]</code>  <code>async</code>","text":"<p>Get Structured Target</p> <p>Endpoint for getting data about a specific structured target by its ID.</p> <p>Parameters:</p> Name Type Description Default <code>structured_target_id</code> <code>str</code> <p>Structured Target ID</p> required <p>Raises:</p> Type Description <code>UnexpectedStatus</code> <p>If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.</p> <code>TimeoutException</code> <p>If the request takes longer than Client.timeout.</p> <p>Returns:</p> Type Description <code>Optional[GithubComKalshiExchangeInfraSvcApi2ModelGetStructuredTargetResponse]</code> <p>GithubComKalshiExchangeInfraSvcApi2ModelGetStructuredTargetResponse</p> Source code in <code>kalshi_py/api/structured_target/get_structured_target.py</code> <pre><code>async def asyncio(\n    structured_target_id: str,\n    *,\n    client: Union[AuthenticatedClient, Client],\n) -&gt; Optional[GithubComKalshiExchangeInfraSvcApi2ModelGetStructuredTargetResponse]:\n    \"\"\"Get Structured Target\n\n      Endpoint for getting data about a specific structured target by its ID.\n\n    Args:\n        structured_target_id (str): Structured Target ID\n\n    Raises:\n        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.\n        httpx.TimeoutException: If the request takes longer than Client.timeout.\n\n    Returns:\n        GithubComKalshiExchangeInfraSvcApi2ModelGetStructuredTargetResponse\n    \"\"\"\n\n    return (\n        await asyncio_detailed(\n            structured_target_id=structured_target_id,\n            client=client,\n        )\n    ).parsed\n</code></pre>"},{"location":"api/structured_target/#kalshi_py.api.structured_target.get_structured_target.sync_detailed","title":"<code>kalshi_py.api.structured_target.get_structured_target.sync_detailed(structured_target_id: str, *, client: Union[AuthenticatedClient, Client]) -&gt; Response[GithubComKalshiExchangeInfraSvcApi2ModelGetStructuredTargetResponse]</code>","text":"<p>Get Structured Target</p> <p>Endpoint for getting data about a specific structured target by its ID.</p> <p>Parameters:</p> Name Type Description Default <code>structured_target_id</code> <code>str</code> <p>Structured Target ID</p> required <p>Raises:</p> Type Description <code>UnexpectedStatus</code> <p>If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.</p> <code>TimeoutException</code> <p>If the request takes longer than Client.timeout.</p> <p>Returns:</p> Type Description <code>Response[GithubComKalshiExchangeInfraSvcApi2ModelGetStructuredTargetResponse]</code> <p>Response[GithubComKalshiExchangeInfraSvcApi2ModelGetStructuredTargetResponse]</p> Source code in <code>kalshi_py/api/structured_target/get_structured_target.py</code> <pre><code>def sync_detailed(\n    structured_target_id: str,\n    *,\n    client: Union[AuthenticatedClient, Client],\n) -&gt; Response[GithubComKalshiExchangeInfraSvcApi2ModelGetStructuredTargetResponse]:\n    \"\"\"Get Structured Target\n\n      Endpoint for getting data about a specific structured target by its ID.\n\n    Args:\n        structured_target_id (str): Structured Target ID\n\n    Raises:\n        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.\n        httpx.TimeoutException: If the request takes longer than Client.timeout.\n\n    Returns:\n        Response[GithubComKalshiExchangeInfraSvcApi2ModelGetStructuredTargetResponse]\n    \"\"\"\n\n    kwargs = _get_kwargs(\n        structured_target_id=structured_target_id,\n    )\n\n    response = client.get_httpx_client().request(\n        **kwargs,\n    )\n\n    return _build_response(client=client, response=response)\n</code></pre>"},{"location":"api/structured_target/#kalshi_py.api.structured_target.get_structured_target.asyncio_detailed","title":"<code>kalshi_py.api.structured_target.get_structured_target.asyncio_detailed(structured_target_id: str, *, client: Union[AuthenticatedClient, Client]) -&gt; Response[GithubComKalshiExchangeInfraSvcApi2ModelGetStructuredTargetResponse]</code>  <code>async</code>","text":"<p>Get Structured Target</p> <p>Endpoint for getting data about a specific structured target by its ID.</p> <p>Parameters:</p> Name Type Description Default <code>structured_target_id</code> <code>str</code> <p>Structured Target ID</p> required <p>Raises:</p> Type Description <code>UnexpectedStatus</code> <p>If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.</p> <code>TimeoutException</code> <p>If the request takes longer than Client.timeout.</p> <p>Returns:</p> Type Description <code>Response[GithubComKalshiExchangeInfraSvcApi2ModelGetStructuredTargetResponse]</code> <p>Response[GithubComKalshiExchangeInfraSvcApi2ModelGetStructuredTargetResponse]</p> Source code in <code>kalshi_py/api/structured_target/get_structured_target.py</code> <pre><code>async def asyncio_detailed(\n    structured_target_id: str,\n    *,\n    client: Union[AuthenticatedClient, Client],\n) -&gt; Response[GithubComKalshiExchangeInfraSvcApi2ModelGetStructuredTargetResponse]:\n    \"\"\"Get Structured Target\n\n      Endpoint for getting data about a specific structured target by its ID.\n\n    Args:\n        structured_target_id (str): Structured Target ID\n\n    Raises:\n        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.\n        httpx.TimeoutException: If the request takes longer than Client.timeout.\n\n    Returns:\n        Response[GithubComKalshiExchangeInfraSvcApi2ModelGetStructuredTargetResponse]\n    \"\"\"\n\n    kwargs = _get_kwargs(\n        structured_target_id=structured_target_id,\n    )\n\n    response = await client.get_async_httpx_client().request(**kwargs)\n\n    return _build_response(client=client, response=response)\n</code></pre>"},{"location":"api/structured_target/#get-structured-targets","title":"Get Structured Targets","text":"<p>Synchronous API Call</p> <p>Asynchronous API Call</p> <p>Synchronous Detailed Response</p> <p>Asynchronous Detailed Response</p>"},{"location":"api/structured_target/#kalshi_py.api.structured_target.get_structured_targets.sync","title":"<code>kalshi_py.api.structured_target.get_structured_targets.sync(*, client: Union[AuthenticatedClient, Client], type_: Union[Unset, str] = UNSET, competition: Union[Unset, str] = UNSET, page_size: Union[Unset, int] = UNSET, cursor: Union[Unset, str] = UNSET) -&gt; Optional[GithubComKalshiExchangeInfraSvcApi2ModelGetStructuredTargetsResponse]</code>","text":"<p>Get Structured Targets</p> <p>Endpoint for getting data about structured targets.</p> <p>Parameters:</p> Name Type Description Default <code>type_</code> <code>Union[Unset, str]</code> <p>Type of structured target</p> <code>UNSET</code> <code>competition</code> <code>Union[Unset, str]</code> <p>Competition filter</p> <code>UNSET</code> <code>page_size</code> <code>Union[Unset, int]</code> <p>Page size (min: 1, max: 2000)</p> <code>UNSET</code> <code>cursor</code> <code>Union[Unset, str]</code> <p>Pagination cursor</p> <code>UNSET</code> <p>Raises:</p> Type Description <code>UnexpectedStatus</code> <p>If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.</p> <code>TimeoutException</code> <p>If the request takes longer than Client.timeout.</p> <p>Returns:</p> Type Description <code>Optional[GithubComKalshiExchangeInfraSvcApi2ModelGetStructuredTargetsResponse]</code> <p>GithubComKalshiExchangeInfraSvcApi2ModelGetStructuredTargetsResponse</p> Source code in <code>kalshi_py/api/structured_target/get_structured_targets.py</code> <pre><code>def sync(\n    *,\n    client: Union[AuthenticatedClient, Client],\n    type_: Union[Unset, str] = UNSET,\n    competition: Union[Unset, str] = UNSET,\n    page_size: Union[Unset, int] = UNSET,\n    cursor: Union[Unset, str] = UNSET,\n) -&gt; Optional[GithubComKalshiExchangeInfraSvcApi2ModelGetStructuredTargetsResponse]:\n    \"\"\"Get Structured Targets\n\n      Endpoint for getting data about structured targets.\n\n    Args:\n        type_ (Union[Unset, str]): Type of structured target\n        competition (Union[Unset, str]): Competition filter\n        page_size (Union[Unset, int]): Page size (min: 1, max: 2000)\n        cursor (Union[Unset, str]): Pagination cursor\n\n    Raises:\n        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.\n        httpx.TimeoutException: If the request takes longer than Client.timeout.\n\n    Returns:\n        GithubComKalshiExchangeInfraSvcApi2ModelGetStructuredTargetsResponse\n    \"\"\"\n\n    return sync_detailed(\n        client=client,\n        type_=type_,\n        competition=competition,\n        page_size=page_size,\n        cursor=cursor,\n    ).parsed\n</code></pre>"},{"location":"api/structured_target/#kalshi_py.api.structured_target.get_structured_targets.asyncio","title":"<code>kalshi_py.api.structured_target.get_structured_targets.asyncio(*, client: Union[AuthenticatedClient, Client], type_: Union[Unset, str] = UNSET, competition: Union[Unset, str] = UNSET, page_size: Union[Unset, int] = UNSET, cursor: Union[Unset, str] = UNSET) -&gt; Optional[GithubComKalshiExchangeInfraSvcApi2ModelGetStructuredTargetsResponse]</code>  <code>async</code>","text":"<p>Get Structured Targets</p> <p>Endpoint for getting data about structured targets.</p> <p>Parameters:</p> Name Type Description Default <code>type_</code> <code>Union[Unset, str]</code> <p>Type of structured target</p> <code>UNSET</code> <code>competition</code> <code>Union[Unset, str]</code> <p>Competition filter</p> <code>UNSET</code> <code>page_size</code> <code>Union[Unset, int]</code> <p>Page size (min: 1, max: 2000)</p> <code>UNSET</code> <code>cursor</code> <code>Union[Unset, str]</code> <p>Pagination cursor</p> <code>UNSET</code> <p>Raises:</p> Type Description <code>UnexpectedStatus</code> <p>If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.</p> <code>TimeoutException</code> <p>If the request takes longer than Client.timeout.</p> <p>Returns:</p> Type Description <code>Optional[GithubComKalshiExchangeInfraSvcApi2ModelGetStructuredTargetsResponse]</code> <p>GithubComKalshiExchangeInfraSvcApi2ModelGetStructuredTargetsResponse</p> Source code in <code>kalshi_py/api/structured_target/get_structured_targets.py</code> <pre><code>async def asyncio(\n    *,\n    client: Union[AuthenticatedClient, Client],\n    type_: Union[Unset, str] = UNSET,\n    competition: Union[Unset, str] = UNSET,\n    page_size: Union[Unset, int] = UNSET,\n    cursor: Union[Unset, str] = UNSET,\n) -&gt; Optional[GithubComKalshiExchangeInfraSvcApi2ModelGetStructuredTargetsResponse]:\n    \"\"\"Get Structured Targets\n\n      Endpoint for getting data about structured targets.\n\n    Args:\n        type_ (Union[Unset, str]): Type of structured target\n        competition (Union[Unset, str]): Competition filter\n        page_size (Union[Unset, int]): Page size (min: 1, max: 2000)\n        cursor (Union[Unset, str]): Pagination cursor\n\n    Raises:\n        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.\n        httpx.TimeoutException: If the request takes longer than Client.timeout.\n\n    Returns:\n        GithubComKalshiExchangeInfraSvcApi2ModelGetStructuredTargetsResponse\n    \"\"\"\n\n    return (\n        await asyncio_detailed(\n            client=client,\n            type_=type_,\n            competition=competition,\n            page_size=page_size,\n            cursor=cursor,\n        )\n    ).parsed\n</code></pre>"},{"location":"api/structured_target/#kalshi_py.api.structured_target.get_structured_targets.sync_detailed","title":"<code>kalshi_py.api.structured_target.get_structured_targets.sync_detailed(*, client: Union[AuthenticatedClient, Client], type_: Union[Unset, str] = UNSET, competition: Union[Unset, str] = UNSET, page_size: Union[Unset, int] = UNSET, cursor: Union[Unset, str] = UNSET) -&gt; Response[GithubComKalshiExchangeInfraSvcApi2ModelGetStructuredTargetsResponse]</code>","text":"<p>Get Structured Targets</p> <p>Endpoint for getting data about structured targets.</p> <p>Parameters:</p> Name Type Description Default <code>type_</code> <code>Union[Unset, str]</code> <p>Type of structured target</p> <code>UNSET</code> <code>competition</code> <code>Union[Unset, str]</code> <p>Competition filter</p> <code>UNSET</code> <code>page_size</code> <code>Union[Unset, int]</code> <p>Page size (min: 1, max: 2000)</p> <code>UNSET</code> <code>cursor</code> <code>Union[Unset, str]</code> <p>Pagination cursor</p> <code>UNSET</code> <p>Raises:</p> Type Description <code>UnexpectedStatus</code> <p>If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.</p> <code>TimeoutException</code> <p>If the request takes longer than Client.timeout.</p> <p>Returns:</p> Type Description <code>Response[GithubComKalshiExchangeInfraSvcApi2ModelGetStructuredTargetsResponse]</code> <p>Response[GithubComKalshiExchangeInfraSvcApi2ModelGetStructuredTargetsResponse]</p> Source code in <code>kalshi_py/api/structured_target/get_structured_targets.py</code> <pre><code>def sync_detailed(\n    *,\n    client: Union[AuthenticatedClient, Client],\n    type_: Union[Unset, str] = UNSET,\n    competition: Union[Unset, str] = UNSET,\n    page_size: Union[Unset, int] = UNSET,\n    cursor: Union[Unset, str] = UNSET,\n) -&gt; Response[GithubComKalshiExchangeInfraSvcApi2ModelGetStructuredTargetsResponse]:\n    \"\"\"Get Structured Targets\n\n      Endpoint for getting data about structured targets.\n\n    Args:\n        type_ (Union[Unset, str]): Type of structured target\n        competition (Union[Unset, str]): Competition filter\n        page_size (Union[Unset, int]): Page size (min: 1, max: 2000)\n        cursor (Union[Unset, str]): Pagination cursor\n\n    Raises:\n        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.\n        httpx.TimeoutException: If the request takes longer than Client.timeout.\n\n    Returns:\n        Response[GithubComKalshiExchangeInfraSvcApi2ModelGetStructuredTargetsResponse]\n    \"\"\"\n\n    kwargs = _get_kwargs(\n        type_=type_,\n        competition=competition,\n        page_size=page_size,\n        cursor=cursor,\n    )\n\n    response = client.get_httpx_client().request(\n        **kwargs,\n    )\n\n    return _build_response(client=client, response=response)\n</code></pre>"},{"location":"api/structured_target/#kalshi_py.api.structured_target.get_structured_targets.asyncio_detailed","title":"<code>kalshi_py.api.structured_target.get_structured_targets.asyncio_detailed(*, client: Union[AuthenticatedClient, Client], type_: Union[Unset, str] = UNSET, competition: Union[Unset, str] = UNSET, page_size: Union[Unset, int] = UNSET, cursor: Union[Unset, str] = UNSET) -&gt; Response[GithubComKalshiExchangeInfraSvcApi2ModelGetStructuredTargetsResponse]</code>  <code>async</code>","text":"<p>Get Structured Targets</p> <p>Endpoint for getting data about structured targets.</p> <p>Parameters:</p> Name Type Description Default <code>type_</code> <code>Union[Unset, str]</code> <p>Type of structured target</p> <code>UNSET</code> <code>competition</code> <code>Union[Unset, str]</code> <p>Competition filter</p> <code>UNSET</code> <code>page_size</code> <code>Union[Unset, int]</code> <p>Page size (min: 1, max: 2000)</p> <code>UNSET</code> <code>cursor</code> <code>Union[Unset, str]</code> <p>Pagination cursor</p> <code>UNSET</code> <p>Raises:</p> Type Description <code>UnexpectedStatus</code> <p>If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.</p> <code>TimeoutException</code> <p>If the request takes longer than Client.timeout.</p> <p>Returns:</p> Type Description <code>Response[GithubComKalshiExchangeInfraSvcApi2ModelGetStructuredTargetsResponse]</code> <p>Response[GithubComKalshiExchangeInfraSvcApi2ModelGetStructuredTargetsResponse]</p> Source code in <code>kalshi_py/api/structured_target/get_structured_targets.py</code> <pre><code>async def asyncio_detailed(\n    *,\n    client: Union[AuthenticatedClient, Client],\n    type_: Union[Unset, str] = UNSET,\n    competition: Union[Unset, str] = UNSET,\n    page_size: Union[Unset, int] = UNSET,\n    cursor: Union[Unset, str] = UNSET,\n) -&gt; Response[GithubComKalshiExchangeInfraSvcApi2ModelGetStructuredTargetsResponse]:\n    \"\"\"Get Structured Targets\n\n      Endpoint for getting data about structured targets.\n\n    Args:\n        type_ (Union[Unset, str]): Type of structured target\n        competition (Union[Unset, str]): Competition filter\n        page_size (Union[Unset, int]): Page size (min: 1, max: 2000)\n        cursor (Union[Unset, str]): Pagination cursor\n\n    Raises:\n        errors.UnexpectedStatus: If the server returns an undocumented status code and Client.raise_on_unexpected_status is True.\n        httpx.TimeoutException: If the request takes longer than Client.timeout.\n\n    Returns:\n        Response[GithubComKalshiExchangeInfraSvcApi2ModelGetStructuredTargetsResponse]\n    \"\"\"\n\n    kwargs = _get_kwargs(\n        type_=type_,\n        competition=competition,\n        page_size=page_size,\n        cursor=cursor,\n    )\n\n    response = await client.get_async_httpx_client().request(**kwargs)\n\n    return _build_response(client=client, response=response)\n</code></pre>"},{"location":"development/building/","title":"Building","text":"<p>This guide explains how to build and publish the kalshi-py package.</p>"},{"location":"development/building/#prerequisites","title":"Prerequisites","text":"<ul> <li>Python 3.9 or higher</li> <li>uv package manager</li> <li>Access to PyPI (for publishing)</li> </ul>"},{"location":"development/building/#development-build","title":"Development Build","text":""},{"location":"development/building/#install-dependencies","title":"Install Dependencies","text":"<pre><code>uv sync --group dev\n</code></pre>"},{"location":"development/building/#build-package","title":"Build Package","text":"<pre><code>uv build\n</code></pre> <p>This creates both source distribution (sdist) and wheel files in the <code>dist/</code> directory.</p>"},{"location":"development/building/#build-specific-formats","title":"Build Specific Formats","text":"<pre><code># Build wheel only\nuv build --wheel\n\n# Build source distribution only\nuv build --sdist\n</code></pre>"},{"location":"development/building/#testing-the-build","title":"Testing the Build","text":""},{"location":"development/building/#install-from-local-build","title":"Install from Local Build","text":"<pre><code># Build the package\nuv build\n\n# Install from the built wheel\npip install dist/kalshi_py-*.whl\n</code></pre>"},{"location":"development/building/#test-installation","title":"Test Installation","text":"<pre><code>import kalshi_py\nprint(kalshi_py.__version__)\n\n# Test basic functionality\nfrom kalshi_py import Client\nclient = Client(base_url=\"https://api.elections.kalshi.com/trade-api/v2\")\n</code></pre>"},{"location":"development/building/#publishing","title":"Publishing","text":""},{"location":"development/building/#update-version","title":"Update Version","text":"<ol> <li>Update the version in <code>pyproject.toml</code>:</li> </ol> <pre><code>[project]\nversion = \"2.0.6.3\"  # Increment version\n</code></pre> <ol> <li>Update the version in <code>openapi-config.yaml</code>:    <pre><code>package_version_override: \"2.0.6.3\"\n</code></pre></li> </ol>"},{"location":"development/building/#build-and-publish","title":"Build and Publish","text":"<pre><code># Build the package\nuv build\n\n# Publish to PyPI\nuv publish\n</code></pre>"},{"location":"development/building/#publishing-to-test-pypi","title":"Publishing to Test PyPI","text":"<pre><code># Publish to Test PyPI first\nuv publish --repository testpypi\n</code></pre>"},{"location":"development/building/#continuous-integration","title":"Continuous Integration","text":"<p>The project uses GitHub Actions for automated builds and testing:</p> <ul> <li>Build and Test: Runs on every push and pull request</li> <li>Publish: Runs on releases to automatically publish to PyPI</li> </ul>"},{"location":"development/building/#version-management","title":"Version Management","text":"<p>This project follows Semantic Versioning:</p> <ul> <li>Major version: Breaking changes</li> <li>Minor version: New features (backward compatible)</li> <li>Patch version: Bug fixes (backward compatible)</li> </ul>"},{"location":"development/building/#release-process","title":"Release Process","text":"<ol> <li>Update version in <code>pyproject.toml</code> and <code>openapi-config.yaml</code></li> <li>Update changelog (if applicable)</li> <li>Create a release on GitHub</li> <li>GitHub Actions will automatically build and publish to PyPI</li> </ol>"},{"location":"development/building/#troubleshooting","title":"Troubleshooting","text":""},{"location":"development/building/#build-errors","title":"Build Errors","text":"<ul> <li>Missing dependencies: Run <code>uv sync --group dev</code></li> <li>Version conflicts: Check <code>pyproject.toml</code> for correct version</li> <li>Permission errors: Ensure you have write access to the directory</li> </ul>"},{"location":"development/building/#publishing-errors","title":"Publishing Errors","text":"<ul> <li>Authentication: Ensure you have PyPI credentials configured</li> <li>Version already exists: Increment the version number</li> <li>Network issues: Check your internet connection and PyPI status</li> </ul>"},{"location":"development/building/#testing-issues","title":"Testing Issues","text":"<ul> <li>Import errors: Ensure the package is installed correctly</li> <li>API errors: Check your API credentials and network connection</li> </ul>"},{"location":"development/contributing/","title":"Contributing","text":"<p>Thank you for your interest in contributing to kalshi-py!</p>"},{"location":"development/contributing/#development-setup","title":"Development Setup","text":"<ol> <li>Clone the repository</li> </ol> <pre><code>git clone https://github.com/kalshi/kalshi-py.git\ncd kalshi-py\n</code></pre> <ol> <li>Install development dependencies</li> </ol> <pre><code>uv sync --group dev\n</code></pre> <ol> <li>Install the package in development mode <pre><code>uv pip install -e .\n</code></pre></li> </ol>"},{"location":"development/contributing/#code-style","title":"Code Style","text":"<p>This project uses ruff for linting and formatting.</p> <ul> <li>Check code style: <code>uv run ruff check .</code></li> <li>Format code: <code>uv run ruff format .</code></li> <li>Fix issues: <code>uv run ruff check --fix .</code></li> </ul>"},{"location":"development/contributing/#running-tests","title":"Running Tests","text":"<pre><code>uv run python test_client.py\n</code></pre>"},{"location":"development/contributing/#documentation","title":"Documentation","text":"<p>To build and serve the documentation locally:</p> <pre><code>./docs.sh\nuv run mkdocs serve\n</code></pre>"},{"location":"development/contributing/#making-changes","title":"Making Changes","text":"<ol> <li>Create a feature branch</li> </ol> <pre><code>git checkout -b feature/your-feature-name\n</code></pre> <ol> <li> <p>Make your changes</p> </li> <li> <p>Follow the code style guidelines</p> </li> <li>Add tests for new functionality</li> <li> <p>Update documentation as needed</p> </li> <li> <p>Test your changes</p> </li> </ol> <pre><code>uv run ruff check .\nuv run python test_client.py\n</code></pre> <ol> <li>Commit your changes</li> </ol> <pre><code>git add .\ngit commit -m \"Add your feature description\"\n</code></pre> <ol> <li>Push and create a pull request <pre><code>git push origin feature/your-feature-name\n</code></pre></li> </ol>"},{"location":"development/contributing/#pull-request-guidelines","title":"Pull Request Guidelines","text":"<ul> <li>Provide a clear description of the changes</li> <li>Include tests for new functionality</li> <li>Update documentation if needed</li> <li>Ensure all tests pass</li> <li>Follow the existing code style</li> </ul>"},{"location":"development/contributing/#issues","title":"Issues","text":"<p>If you find a bug or have a feature request, please:</p> <ol> <li>Check existing issues first</li> <li>Create a new issue with a clear description</li> <li>Include steps to reproduce (for bugs)</li> <li>Provide code examples (for feature requests)</li> </ol>"},{"location":"development/contributing/#license","title":"License","text":"<p>By contributing to kalshi-py, you agree that your contributions will be licensed under the same license as the project.</p>"},{"location":"examples/advanced/","title":"Advanced Examples","text":""},{"location":"examples/advanced/#async-operations","title":"Async Operations","text":""},{"location":"examples/advanced/#async-market-data","title":"Async Market Data","text":"<pre><code>import asyncio\nfrom kalshi_py import create_client\nfrom kalshi_py.api.market import get_markets, get_market_orderbook\n\nasync def get_market_data():\n    client = create_client()\n\n    # Get markets\n    markets = await get_markets.asyncio(client=client, limit=5)\n\n    # Get order book for first market\n    if markets.markets:\n        ticker = markets.markets[0].ticker\n        orderbook = await get_market_orderbook.asyncio(client=client, ticker=ticker)\n        print(f\"Order book for {ticker}:\")\n        print(f\"  Yes bids: {len(orderbook.orderbook.yes_bids)}\")\n        print(f\"  Yes asks: {len(orderbook.orderbook.yes_asks)}\")\n\nasyncio.run(get_market_data())\n</code></pre>"},{"location":"examples/advanced/#concurrent-api-calls","title":"Concurrent API Calls","text":"<pre><code>import asyncio\nfrom kalshi_py import create_client\nfrom kalshi_py.api.portfolio import get_balance, get_positions, get_orders\n\nasync def get_account_overview():\n    client = create_client()\n\n    # Make concurrent API calls\n    balance_task = get_balance.asyncio(client=client)\n    positions_task = get_positions.asyncio(client=client)\n    orders_task = get_orders.asyncio(client=client)\n\n    balance, positions, orders = await asyncio.gather(\n        balance_task, positions_task, orders_task\n    )\n\n    print(f\"Balance: ${balance.balance}\")\n    print(f\"Active positions: {len(positions.market_positions)}\")\n    print(f\"Open orders: {len(orders.orders)}\")\n\nasyncio.run(get_account_overview())\n</code></pre>"},{"location":"examples/advanced/#custom-ssl-configuration","title":"Custom SSL Configuration","text":"<pre><code>from kalshi_py import create_client\n\n# Custom SSL certificate\nclient = create_client(verify_ssl=\"/path/to/certificate_bundle.pem\")\n\n# Disable SSL verification (not recommended for production)\nclient = create_client(verify_ssl=False)\n</code></pre>"},{"location":"examples/advanced/#request-logging","title":"Request Logging","text":"<pre><code>from kalshi_py import create_client\n\ndef log_request(request):\n    print(f\"Request: {request.method} {request.url}\")\n    print(f\"Headers: {dict(request.headers)}\")\n\ndef log_response(response):\n    print(f\"Response: {response.status_code}\")\n    print(f\"Response headers: {dict(response.headers)}\")\n\nclient = create_client(\n    httpx_args={\n        \"event_hooks\": {\n            \"request\": [log_request],\n            \"response\": [log_response]\n        }\n    }\n)\n</code></pre>"},{"location":"examples/advanced/#custom-timeouts","title":"Custom Timeouts","text":"<pre><code>import httpx\nfrom kalshi_py import create_client\n\n# Set custom timeout\nclient = create_client(\n    timeout=httpx.Timeout(30.0, connect=10.0)\n)\n\n# Or use different timeouts for different operations\nclient = create_client(\n    timeout=httpx.Timeout(\n        timeout=30.0,\n        connect=5.0,\n        read=25.0,\n        write=10.0,\n        pool=1.0\n    )\n)\n</code></pre>"},{"location":"examples/advanced/#custom-headers","title":"Custom Headers","text":"<pre><code>from kalshi_py import create_client\n\nclient = create_client(\n    headers={\n        \"User-Agent\": \"MyApp/1.0\",\n        \"X-Custom-Header\": \"custom-value\"\n    }\n)\n</code></pre>"},{"location":"examples/advanced/#error-handling-with-retries","title":"Error Handling with Retries","text":"<pre><code>import time\nfrom kalshi_py import create_client\nfrom kalshi_py.errors import UnexpectedStatus\n\ndef api_call_with_retry(func, max_retries=3, delay=1):\n    for attempt in range(max_retries):\n        try:\n            return func()\n        except UnexpectedStatus as e:\n            if e.status_code == 429:  # Rate limit\n                if attempt &lt; max_retries - 1:\n                    time.sleep(delay * (2 ** attempt))  # Exponential backoff\n                    continue\n            raise\n        except Exception as e:\n            if attempt &lt; max_retries - 1:\n                time.sleep(delay)\n                continue\n            raise\n\n# Usage\nclient = create_client()\n\nfrom kalshi_py.api.portfolio import get_balance\n\nbalance = api_call_with_retry(\n    lambda: get_balance.sync(client=client)\n)\nprint(f\"Balance: ${balance.balance}\")\n</code></pre>"},{"location":"examples/advanced/#websocket-like-polling","title":"WebSocket-like Polling","text":"<pre><code>import time\nfrom kalshi_py import create_client\nfrom kalshi_py.api.market import get_market_orderbook\n\ndef monitor_orderbook(ticker, interval=5):\n    client = create_client()\n    last_orderbook = None\n\n    while True:\n        try:\n            orderbook = get_market_orderbook.sync(client=client, ticker=ticker)\n\n            # Check if orderbook changed\n            if last_orderbook != orderbook.orderbook:\n                print(f\"Order book updated for {ticker}\")\n                print(f\"  Yes bid: {orderbook.orderbook.yes_bids[0].price if orderbook.orderbook.yes_bids else 'None'}\")\n                print(f\"  Yes ask: {orderbook.orderbook.yes_asks[0].price if orderbook.orderbook.yes_asks else 'None'}\")\n                last_orderbook = orderbook.orderbook\n\n            time.sleep(interval)\n\n        except KeyboardInterrupt:\n            print(\"Monitoring stopped\")\n            break\n        except Exception as e:\n            print(f\"Error: {e}\")\n            time.sleep(interval)\n\n# Usage: monitor_orderbook(\"MARKET-TICKER\")\n</code></pre>"},{"location":"examples/basic-usage/","title":"Basic Usage Examples","text":""},{"location":"examples/basic-usage/#getting-started","title":"Getting Started","text":"<p>Here are some basic examples to get you started with kalshi-py.</p>"},{"location":"examples/basic-usage/#fetching-markets","title":"Fetching Markets","text":"<pre><code>from kalshi_py import Client\nfrom kalshi_py.api.market import get_markets\n\nclient = Client(base_url=\"https://api.elections.kalshi.com/trade-api/v2\")\n\nresponse = get_markets.sync(client=client, limit=10)\nprint(f\"Found {len(response.markets)} markets\")\n\nfor market in response.markets:\n    print(f\"- {market.ticker}: {market.title}\")\n    print(f\"  Status: {market.status}\")\n    print(f\"  Volume: {market.volume}\")\n</code></pre>"},{"location":"examples/basic-usage/#getting-account-balance","title":"Getting Account Balance","text":"<pre><code>from kalshi_py import create_client\nfrom kalshi_py.api.portfolio import get_balance\n\nclient = create_client()\n\nbalance = get_balance.sync(client=client)\nprint(f\"Account balance: ${balance.balance}\")\n</code></pre>"},{"location":"examples/basic-usage/#fetching-market-details","title":"Fetching Market Details","text":"<pre><code>from kalshi_py import Client\nfrom kalshi_py.api.market import get_market\n\nclient = Client(base_url=\"https://api.elections.kalshi.com/trade-api/v2\")\n\nmarket = get_market.sync(client=client, ticker=\"MARKET-TICKER\")\nprint(f\"Market: {market.market.title}\")\nprint(f\"Status: {market.market.status}\")\nprint(f\"Volume: {market.market.volume}\")\n</code></pre>"},{"location":"examples/basic-usage/#error-handling","title":"Error Handling","text":"<pre><code>from kalshi_py import Client\nfrom kalshi_py.errors import UnexpectedStatus\n\nclient = Client(base_url=\"https://api.elections.kalshi.com/trade-api/v2\")\n\ntry:\n    response = get_markets.sync(client=client, limit=10)\n    print(f\"Found {len(response.markets)} markets\")\nexcept UnexpectedStatus as e:\n    print(f\"API error: {e.status_code} - {e.response.text}\")\nexcept Exception as e:\n    print(f\"Unexpected error: {e}\")\n</code></pre>"},{"location":"examples/trading/","title":"Trading Examples","text":""},{"location":"examples/trading/#placing-orders","title":"Placing Orders","text":""},{"location":"examples/trading/#market-order","title":"Market Order","text":"<pre><code>from kalshi_py import create_client\nfrom kalshi_py.api.portfolio import create_order\n\nclient = create_client()\n\norder = create_order.sync(\n    client=client,\n    ticker=\"MARKET-TICKER\",\n    side=\"yes\",\n    type=\"market\",\n    action=\"buy\",\n    count=10\n)\nprint(f\"Order placed: {order.order.order_id}\")\n</code></pre>"},{"location":"examples/trading/#limit-order","title":"Limit Order","text":"<pre><code>from kalshi_py import create_client\nfrom kalshi_py.api.portfolio import create_order\n\nclient = create_client()\n\norder = create_order.sync(\n    client=client,\n    ticker=\"MARKET-TICKER\",\n    side=\"yes\",\n    type=\"limit\",\n    action=\"buy\",\n    count=10,\n    yes_price=50  # 50 cents\n)\nprint(f\"Limit order placed: {order.order.order_id}\")\n</code></pre>"},{"location":"examples/trading/#canceling-orders","title":"Canceling Orders","text":"<pre><code>from kalshi_py import create_client\nfrom kalshi_py.api.portfolio import cancel_order\n\nclient = create_client()\n\nresult = cancel_order.sync(client=client, order_id=\"ORDER-ID\")\nprint(f\"Order canceled: {result.order.order_id}\")\n</code></pre>"},{"location":"examples/trading/#getting-order-status","title":"Getting Order Status","text":"<pre><code>from kalshi_py import create_client\nfrom kalshi_py.api.portfolio import get_order\n\nclient = create_client()\n\norder = get_order.sync(client=client, order_id=\"ORDER-ID\")\nprint(f\"Order status: {order.order.status}\")\nprint(f\"Filled count: {order.order.filled_count}\")\n</code></pre>"},{"location":"examples/trading/#batch-operations","title":"Batch Operations","text":""},{"location":"examples/trading/#batch-create-orders","title":"Batch Create Orders","text":"<pre><code>from kalshi_py import create_client\nfrom kalshi_py.api.portfolio import batch_create_orders\n\nclient = create_client()\n\norders = batch_create_orders.sync(\n    client=client,\n    orders=[\n        {\n            \"ticker\": \"MARKET-TICKER\",\n            \"side\": \"yes\",\n            \"type\": \"limit\",\n            \"action\": \"buy\",\n            \"count\": 10,\n            \"yes_price\": 50\n        },\n        {\n            \"ticker\": \"MARKET-TICKER\",\n            \"side\": \"no\",\n            \"type\": \"limit\",\n            \"action\": \"sell\",\n            \"count\": 5,\n            \"no_price\": 60\n        }\n    ]\n)\n\nfor order in orders.orders:\n    print(f\"Order {order.order_id}: {order.status}\")\n</code></pre>"},{"location":"examples/trading/#batch-cancel-orders","title":"Batch Cancel Orders","text":"<pre><code>from kalshi_py import create_client\nfrom kalshi_py.api.portfolio import batch_cancel_orders\n\nclient = create_client()\n\nresult = batch_cancel_orders.sync(\n    client=client,\n    order_ids=[\"ORDER-ID-1\", \"ORDER-ID-2\"]\n)\n\nfor order in result.orders:\n    print(f\"Order {order.order_id}: {order.status}\")\n</code></pre>"},{"location":"examples/trading/#getting-positions","title":"Getting Positions","text":"<pre><code>from kalshi_py import create_client\nfrom kalshi_py.api.portfolio import get_positions\n\nclient = create_client()\n\npositions = get_positions.sync(client=client)\n\nfor position in positions.market_positions:\n    print(f\"Market: {position.ticker}\")\n    print(f\"  Yes position: {position.yes_position}\")\n    print(f\"  No position: {position.no_position}\")\n    print(f\"  Total value: ${position.total_value}\")\n</code></pre>"},{"location":"examples/trading/#getting-fills","title":"Getting Fills","text":"<pre><code>from kalshi_py import create_client\nfrom kalshi_py.api.portfolio import get_fills\n\nclient = create_client()\n\nfills = get_fills.sync(client=client, limit=10)\n\nfor fill in fills.fills:\n    print(f\"Fill: {fill.fill_id}\")\n    print(f\"  Market: {fill.ticker}\")\n    print(f\"  Side: {fill.side}\")\n    print(f\"  Count: {fill.count}\")\n    print(f\"  Price: {fill.price}\")\n    print(f\"  Time: {fill.created_time}\")\n</code></pre>"},{"location":"getting-started/authentication/","title":"Authentication","text":"<p>kalshi-py uses RSA-PSS signature authentication for secure API access. This guide explains how to set up and use authentication.</p>"},{"location":"getting-started/authentication/#overview","title":"Overview","text":"<p>The Kalshi API uses RSA-PSS signature authentication where each request is signed with:</p> <ol> <li>Timestamp: Current time in milliseconds</li> <li>Method: HTTP method (GET, POST, etc.)</li> <li>Path: API endpoint path</li> <li>Signature: RSA-PSS signature of <code>timestamp + method + path</code></li> </ol>"},{"location":"getting-started/authentication/#setting-up-authentication","title":"Setting Up Authentication","text":""},{"location":"getting-started/authentication/#1-get-your-api-credentials","title":"1. Get Your API Credentials","text":"<p>You'll need:</p> <ul> <li>Access Key ID: Your Kalshi access key identifier</li> <li>Private Key: RSA private key in PEM format</li> </ul>"},{"location":"getting-started/authentication/#2-create-the-client","title":"2. Create the Client","text":""},{"location":"getting-started/authentication/#using-environment-variables-recommended","title":"Using Environment Variables (Recommended)","text":"<p>Set your credentials as environment variables:</p> <pre><code>export KALSHI_API_KEY_ID=\"your-access-key-id\"\nexport KALSHI_PY_PRIVATE_KEY_PEM=\"-----BEGIN PRIVATE KEY-----\\n...\"\n</code></pre> <p>Then create the client:</p> <pre><code>from kalshi_py import create_client\n\nclient = create_client()  # Uses environment variables\n</code></pre>"},{"location":"getting-started/authentication/#using-file-path","title":"Using File Path","text":"<pre><code>from kalshi_py import create_client\n\nclient = create_client(\n    access_key_id=\"your-access-key-id\",\n    private_key_path=\"/path/to/your/private-key.pem\"\n)\n</code></pre>"},{"location":"getting-started/authentication/#using-pem-data-directly","title":"Using PEM Data Directly","text":"<pre><code>from kalshi_py import create_client\n\nclient = create_client(\n    access_key_id=\"your-access-key-id\",\n    private_key_data=\"-----BEGIN PRIVATE KEY-----\\n...\"\n)\n</code></pre>"},{"location":"getting-started/authentication/#how-it-works","title":"How It Works","text":"<p>The client automatically handles:</p> <ol> <li>Loading your private key from file or environment</li> <li>Generating timestamps for each request</li> <li>Creating signatures using RSA-PSS</li> <li>Adding required headers:</li> <li><code>KALSHI-ACCESS-KEY</code>: Your access key ID</li> <li><code>KALSHI-ACCESS-SIGNATURE</code>: RSA-PSS signature</li> <li><code>KALSHI-ACCESS-TIMESTAMP</code>: Request timestamp</li> </ol>"},{"location":"getting-started/authentication/#example-request-flow","title":"Example Request Flow","text":"<pre><code>from kalshi_py import create_client\nfrom kalshi_py.api.portfolio import get_balance\n\n# Create authenticated client\nclient = create_client()\n\n# Make authenticated request\nbalance = get_balance.sync(client=client)\nprint(f\"Balance: ${balance.balance}\")\n</code></pre> <p>Behind the scenes, the client:</p> <ol> <li>Generates a timestamp</li> <li>Creates signature: <code>RSA-PSS(timestamp + \"GET\" + \"/v2/balance\")</code></li> <li>Sends request with authentication headers</li> </ol>"},{"location":"getting-started/authentication/#security-best-practices","title":"Security Best Practices","text":""},{"location":"getting-started/authentication/#store-credentials-securely","title":"Store Credentials Securely","text":"<pre><code># Use environment variables (recommended)\nexport KALSHI_API_KEY_ID=\"your-key-id\"\nexport KALSHI_PY_PRIVATE_KEY_PEM=\"$(cat /path/to/private-key.pem)\"\n\n# Or use a .env file (don't commit to version control)\necho \"KALSHI_API_KEY_ID=your-key-id\" &gt;&gt; .env\necho \"KALSHI_PY_PRIVATE_KEY_PEM=$(cat /path/to/private-key.pem)\" &gt;&gt; .env\n</code></pre>"},{"location":"getting-started/authentication/#rotate-keys-regularly","title":"Rotate Keys Regularly","text":"<ul> <li>Generate new API keys periodically</li> <li>Keep private keys secure and never share them</li> <li>Use different keys for different environments</li> </ul>"},{"location":"getting-started/authentication/#monitor-usage","title":"Monitor Usage","text":"<pre><code>def log_request(request):\n    print(f\"Making request to: {request.method} {request.url}\")\n\nclient = create_client(\n    httpx_args={\n        \"event_hooks\": {\n            \"request\": [log_request]\n        }\n    }\n)\n</code></pre>"},{"location":"getting-started/authentication/#troubleshooting","title":"Troubleshooting","text":""},{"location":"getting-started/authentication/#common-issues","title":"Common Issues","text":"<p>\"access_key_id must be provided\"</p> <ul> <li>Set <code>KALSHI_API_KEY_ID</code> environment variable</li> <li>Or pass <code>access_key_id</code> parameter to <code>create_client()</code></li> </ul> <p>\"Cannot specify both private_key_path and private_key_data\"</p> <ul> <li>Use only one method to provide the private key</li> </ul> <p>\"Invalid signature\"</p> <ul> <li>Check that your private key is correct</li> <li>Ensure your system clock is synchronized</li> <li>Verify the access key ID matches your private key</li> </ul>"},{"location":"getting-started/authentication/#debug-mode","title":"Debug Mode","text":"<p>Enable debug logging to see authentication details:</p> <pre><code>import logging\nlogging.basicConfig(level=logging.DEBUG)\n\nclient = create_client()\n</code></pre>"},{"location":"getting-started/authentication/#legacy-bearer-token-authentication","title":"Legacy Bearer Token Authentication","text":"<p>For compatibility with older systems, you can also use bearer token authentication:</p> <pre><code>from kalshi_py import AuthenticatedClient\n\nclient = AuthenticatedClient(\n    base_url=\"https://api.elections.kalshi.com/trade-api/v2\",\n    token=\"your-bearer-token\"\n)\n</code></pre> <p>Note: Bearer token authentication is not recommended for trading operations.</p>"},{"location":"getting-started/installation/","title":"Installation","text":""},{"location":"getting-started/installation/#requirements","title":"Requirements","text":"<ul> <li>Python 3.9 or higher</li> <li>pip or uv package manager</li> </ul>"},{"location":"getting-started/installation/#install-from-pypi","title":"Install from PyPI","text":"<p>The easiest way to install kalshi-py is from PyPI:</p> <pre><code>pip install kalshi-py\n</code></pre>"},{"location":"getting-started/installation/#install-with-uv","title":"Install with uv","text":"<p>If you're using uv (recommended):</p> <pre><code>uv add kalshi-py\n</code></pre>"},{"location":"getting-started/installation/#install-from-source","title":"Install from source","text":"<p>To install the latest development version:</p> <pre><code>git clone https://github.com/kalshi/kalshi-py.git\ncd kalshi-py\npip install -e .\n</code></pre>"},{"location":"getting-started/installation/#dependencies","title":"Dependencies","text":"<p>kalshi-py has the following dependencies:</p> <ul> <li><code>httpx&gt;=0.23.0,&lt;0.29.0</code> - HTTP client</li> <li><code>attrs&gt;=22.2.0</code> - Data classes</li> <li><code>python-dateutil&gt;=2.8.0,&lt;3</code> - Date parsing</li> <li><code>cryptography&gt;=41.0.0</code> - RSA-PSS signatures</li> </ul>"},{"location":"getting-started/installation/#verify-installation","title":"Verify Installation","text":"<p>You can verify the installation by running:</p> <pre><code>import kalshi_py\nprint(kalshi_py.__version__)\n</code></pre>"},{"location":"getting-started/installation/#next-steps","title":"Next Steps","text":"<ul> <li>Quick Start - Make your first API call</li> <li>Authentication - Set up API credentials</li> </ul>"},{"location":"getting-started/quickstart/","title":"Quick Start","text":"<p>This guide will help you get started with kalshi-py in just a few minutes.</p>"},{"location":"getting-started/quickstart/#basic-usage-public-endpoints","title":"Basic Usage (Public Endpoints)","text":"<p>For public endpoints that don't require authentication:</p> <pre><code>from kalshi_py import Client\nfrom kalshi_py.api.market import get_markets\n\n# Create a client for public endpoints\nclient = Client(base_url=\"https://api.elections.kalshi.com/trade-api/v2\")\n\n# Get markets\nresponse = get_markets.sync(client=client, limit=10)\nprint(f\"Found {len(response.markets)} markets\")\n\nfor market in response.markets[:3]:\n    print(f\"- {market.ticker}: {market.title}\")\n</code></pre>"},{"location":"getting-started/quickstart/#authenticated-usage-trading-endpoints","title":"Authenticated Usage (Trading Endpoints)","text":"<p>For trading endpoints that require authentication:</p> <pre><code>from kalshi_py import create_client\nfrom kalshi_py.api.portfolio import get_balance\n\n# Create authenticated client\nclient = create_client()\n\n# Get account balance\nbalance = get_balance.sync(client=client)\nprint(f\"Account balance: ${balance.balance}\")\n</code></pre>"},{"location":"getting-started/quickstart/#async-usage","title":"Async Usage","text":"<p>The client also supports async operations:</p> <pre><code>import asyncio\nfrom kalshi_py import create_client\nfrom kalshi_py.api.market import get_markets\nfrom kalshi_py.api.portfolio import get_balance\n\nasync def main():\n    client = create_client()\n\n    # Get markets\n    markets = await get_markets.asyncio(client=client, limit=5)\n    print(f\"Found {len(markets.markets)} markets\")\n\n    # Get balance\n    balance = await get_balance.asyncio(client=client)\n    print(f\"Balance: ${balance.balance}\")\n\nasyncio.run(main())\n</code></pre>"},{"location":"getting-started/quickstart/#environment-variables","title":"Environment Variables","text":"<p>You can set environment variables to avoid passing credentials explicitly:</p> <pre><code>export KALSHI_API_KEY_ID=\"your-access-key-id\"\nexport KALSHI_PY_PRIVATE_KEY_PEM=\"-----BEGIN PRIVATE KEY-----\\n...\"\n</code></pre> <p>Then create the client without parameters:</p> <pre><code>from kalshi_py import create_client\n\nclient = create_client()  # Uses environment variables\n</code></pre>"},{"location":"getting-started/quickstart/#next-steps","title":"Next Steps","text":"<ul> <li>Authentication - Learn about RSA-PSS authentication</li> <li>API Reference - Explore all available endpoints</li> <li>Examples - More detailed examples</li> </ul>"}]}